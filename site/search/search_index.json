{
    "docs": [
        {
            "location": "/", 
            "text": "TensorFlow projects\n\n    \n\n\n      Add \nguild.yml\n to your TensorFlow or Keras project to\n      automate tasks and enable experiment tracking,\n      testing, distribution and remote training.\n\n      \nLearn more\n.\n\n    \n\n    \n\n      \n\n    \n\n  \n\n\n  \n\n    \nModel operations\n\n    \n\n\n      Train your model by running the command \nguild\n      run train\n to generate a unique experiment that preserves\n      training files and metadata.\n\n      \nLearn more\n.\n\n    \n\n    \n\n      \n\n    \n\n  \n\n\n  \n\n    \nExperiments\n\n    \n\n\n      Track experiments to save logs and trained models, compare\n      performance, diff files, visualize results in TensorBoard and\n      backup to the cloud.\n\n      \nLearn more\n.\n\n    \n\n    \n\n      \n\n    \n\n  \n\n\n  \n\n    \nEnd-to-end workflow\n\n    \n\n\n      Automate your model life cycle from data collection and\n      pre-processing to training and evaluation to optimization and\n      deployment.\n\n      \nLearn more\n.\n\n    \n\n    \n\n      \n\n    \n\n  \n\n\n  \n\n    \nModel tests\n\n    \n\n\n      Verify all stages of your model workflow with tests that\n      exercise code and check results such as expected loss and\n      accuracy ranges.\n\n      \nLearn more\n.\n\n    \n\n    \n\n      \n\n    \n\n  \n\n\n  \n\n    \nPackages and code reuse\n\n    \n\n\n      Save time and reduce errors by reusing tested, proven models and\n      operations\ndeveloped by you and others in the TensorFlow\n      community.\n\n      \nLearn more\n.\n\n    \n\n    \n\n      \n\n    \n\n  \n\n\n\n\n\n\n  \n\n    \nGuild AI introduction \n\n  \n\n\n\n\n\n\n\nMore features\n\n\n\n  \n\n    \n\n  \n\n  \n\n    \nTrain remotely on Amazon EC2\n\n    \n\n\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras\n      vel nisi ut neque vehicula pellentesque. Donec tellus nisi,\n      ultrices sit amet felis ac, vehicula hendrerit ipsum.\n\n      \n\n        \nLearn more\n\n      \n\n\n    \n\n  \n\n\n\n\n\n\n  \n\n    \n\n  \n\n  \n\n    \nBackup runs to S3\n\n    \n\n\n      Nulla vitae urna nec est convallis malesuada non sit amet\n      orci. Aenean ut mauris id velit pretium malesuada at scelerisque\n      ante. Vestibulum eu tellus ut lectus consectetur\n      faucibus. Phasellus sodales accumsan ex et sodales. Etiam vel mi\n      eu leo tincidunt vulputate. Aliquam quis auctor massa.\n\n    \n\n\n      \n\n        \nLearn more\n\n      \n\n  \n\n\n\n\n\n\n  \n\n    \n\n  \n\n  \n\n    \nVisualize runs with TensorBoard\n\n    \n\n\n      Nulla vitae urna nec est convallis malesuada non sit amet\n      orci. Aenean ut mauris id velit pretium malesuada at scelerisque\n      ante. Vestibulum eu tellus ut lectus consectetur\n      faucibus. Phasellus sodales accumsan ex et sodales. Etiam vel mi\n      eu leo tincidunt vulputate. Aliquam quis auctor massa.\n\n    \n\n\n      \n\n        \nLearn more\n\n      \n\n  \n\n\n\n\n\n\n  \n\n    \n\n  \n\n  \n\n    \nCompare run performance and diff changes\n\n    \n\n\n      Nulla vitae urna nec est convallis malesuada non sit amet\n      orci. Aenean ut mauris id velit pretium malesuada at scelerisque\n      ante. Vestibulum eu tellus ut lectus consectetur\n      faucibus. Phasellus sodales accumsan ex et sodales. Etiam vel mi\n      eu leo tincidunt vulputate. Aliquam quis auctor massa.\n\n    \n\n\n      \n\n        \nLearn more\n\n      \n\n  \n\n\n\n\n\n\n  \n\n    \n\n  \n\n  \n\n    \nPublish packaged models to PyPI\n\n    \n\n\n      Nulla vitae urna nec est convallis malesuada non sit amet\n      orci. Aenean ut mauris id velit pretium malesuada at scelerisque\n      ante. Vestibulum eu tellus ut lectus consectetur\n      faucibus. Phasellus sodales accumsan ex et sodales. Etiam vel mi\n      eu leo tincidunt vulputate. Aliquam quis auctor massa.\n\n    \n\n\n      \n\n        \nLearn more\n\n      \n\n  \n\n\n\n\n\n\n\nGet started\n\n\n\n  \n\n    \n\n      \nConvert a Jupyter Notebook to a Guild project\n\n      \n\n\n        If your TensorFlow training code is in a Jupyter Notebook, use\n        Guild to create a reusable project that supports experiment\n        tracking, remote training, and detailed run comparison.\n\n      \n\n      \nConvert a Jupyter Notebook \n\n    \n\n  \n\n\n  \n\n    \n\n      \nAdd Guild to your TensorFlow or Keras project\n\n      \n\n\n        If you have scripts that train your TensorFlow or Keras\n        models, add a Guild file (i.e. a file\n        named \nguild.yml\n) to your project to enable Guild\n        features.\n\n      \n\n      \nAdd Guild to a project \n\n    \n\n  \n\n\n  \n\n    \n\n      \nCreate an image classifier\n\n      \n\n\n        Guild supports a variety of feature-rich packages and project\n        templates. This guide steps you through the process of\n        creating an image classifier.\n\n      \n\n      \nCreate an image classifier \n\n    \n\n  \n\n\n  \n\n    \n\n      \nBrowse Guild AI documentation\n\n      \n\n\n        If you're interested in a complete picture of Guild AI, start by\n        browsing its comprehensives documentation.\n\n      \n\n      \nBrowse documentation", 
            "title": "Home"
        }, 
        {
            "location": "/#more-features", 
            "text": "", 
            "title": "More features"
        }, 
        {
            "location": "/#get-started", 
            "text": "", 
            "title": "Get started"
        }, 
        {
            "location": "/install/", 
            "text": "Install Guild AI\n\n\n\n\nRequirements\n\n\nInstall Guild AI\n\n\nUsing pip\n\n\nFrom source code\n\n\n\n\n\n\nInstall TensorFlow\n\n\nInstall optional libraries\n\n\nCUDA and cuDNN\n\n\nNVIDIA System Management Interface\n\n\n\n\n\n\nVerify your installation\n\n\nNext steps\n\n\n\n\nRequirements\n\n\nGuild AI has the following requirements:\n\n\n\n\nMax OS or Linux\n\n\nPython 2.7 or Python 3\n\n\npip\n\n\n\n\nGuild is installed from PyPI using \npip\n. Refer to \npip Installation\n to ensure you have it\ninstalled.\n\n\nInstall Guild AI\n\n\nUsing pip\n\n\nTo install Guild AI, run the following command:\n\n\npip install guildai\n\n\n\n\nIf you need to run \ninstall\n with administrative privileges, run:\n\n\nsudo pip install guildai\n\n\n\n\nIf you want the latest pre-release version of Guild AI, use the\n\n--pre\n option:\n\n\npip install --pre guildai\n\n\n\n\nFrom source code\n\n\n\n\nNote\n\n\nThis step is an alternative to installing Guild AI with pip\ndescribed above. Install Guild AI from source code if you want a\nspecific version from GitHub (e.g. an early release or development\nbranch) or if you want to contribute to the project.\n\n\n\n\nAdditional required tools for installing from source code:\n\n\n\n\ngit\n\n\nnpm\n v5.8.0 or later\n\n\nPython development library and headers for your system\n\n\n\n\nTo install Guild from source, clone the repository by running:\n\n\ngit clone https://github.com/guildai/guild.git\n\n\n\n\nChange to the \nguild\n directory and install the required pip packages:\n\n\ncd guild\npip install -r requirements.txt\n\n\n\n\nBuild Guild by running:\n\n\npython setup.py build\n\n\n\n\nVerify Guild by running:\n\n\nguild/scripts/guild check\n\n\n\n\nIf see the message \nNOT INSTALLED (No module named 'tensorflow')\n\nthat\ns okay - you\nll install TensorFlow in the steps below. If you see\nother errors, please \nopen an issue on GitHub\n and we\nll help!\n\n\nYou can run the \nGUILD_SOURCE_DIR/guild/scripts/guild\n executable\ndirectly (where \nGUILD_SOURCE_DIR\n is the location of your cloned\nGuild AI source repository) or modify your environment to make \nguild\n\navailable on your PATH using one of these methods:\n\n\n\n\nAdd \nGUILD_SOURCE_DIR/guild/scripts\n directory to your \nPATH\n environment\n  variable, OR\n\n\nCreate a symlink to \nGUILD_SOURCE_DIR/guild/scripts/guild\n that is\n  available on your PATH\n\n\n\n\nInstall TensorFlow\n\n\nGuild requires TensorFlow but does not install it for\nyou. \n1\n You can use \npip\n to install TensorFlow by running:\n\n\npip install tensorflow\n\n\n\n\nIf your system has a GPU, install the GPU enabled package by running:\n\n\npip install tensorflow-gpu\n\n\n\n\nFor alternative installation methods, refer to \nInstalling TensorFlow\n.\n\n\nInstall optional libraries\n\n\nIf you system has a GPU or other accelerator supported by TensorFlow,\nyou will need to install and configure support for your hardware.\n\n\nCUDA and cuDNN\n\n\nIf you have an NVIDIA GPU and and want to use the GPU enabled\nTensorFlow package, you must install the NVIDIA CUDA and cuDNN\nlibraries for your system. Refer to the links below for help\ninstalling the libraries.\n\n\n\n\nCUDA Toolkit Download\n\n\nNVIDIA cuDNN\n\n\n\n\nNVIDIA System Management Interface\n\n\nGuild uses NVIDIA System Management Interface (\nnvidia-smi\n) on GPU\naccelerated systems to collect GPU metrics. This tool is optional and\nGuild will run without it. However, to collect GPU stats on systems\nwith one or more GPUs, ensure that \nnvidia-smi\n is installed.\n\n\n\n\nNote\n\n\nNVIDIA System Management Interface is typically installed with NVIDIA\nGPU drivers. Refer to \nNVIDIA System Management Interface\n\nfor more information.\n\n\n\n\nVerify your installation\n\n\nVerify that Guild is installed properly by running the\n\ncheck\n command:\n\n\nguild check\n\n\n\n\nIf there are problems with your installation, Guild will display the\ndetails and exit with an error. Refer to\n\nTroubleshooting\n for assistance.\n\n\nNext steps\n\n\nCongratulations, you\nve installed Guild AI! We\nve outlined some next\nsteps for you below.\n\n\n\n\n\n\n\n\nTrain your first model\n\n\n\n\nDive in and train your first model using Guild AI. This introductory\ntutorial will walk you through the basics of Guild and cover most of\nits features.\n\n\n\n\nTrain your first model \n\n\n\n\n\n\n\n\n\n\n\nDiscover Guild models\n\n\n\n\nGuild AI provides a catalog of state-of-the-art TensorFlow models that\ncan be used to build deep learning applications. Start here to see\nwhat developers are building.\n\n\n\n\nDiscover Guild models \n\n\n\n\n\n\n\n\n\n\n\nBrowse the docs\n\n\n\n\nIf you're interested in a complete picture of Guild AI, start by\nbrowsing its comprehensives documentation.\n\n\n\n\nBrowse the docs \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTensorFlow is a rapidly evolving software library and is provided as\nboth CPU and GPU supported packages. Guild leaves the specific package\nand version of TensorFlow up to the user.", 
            "title": "Install"
        }, 
        {
            "location": "/install/#install-guild-ai", 
            "text": "Requirements  Install Guild AI  Using pip  From source code    Install TensorFlow  Install optional libraries  CUDA and cuDNN  NVIDIA System Management Interface    Verify your installation  Next steps", 
            "title": "Install Guild AI"
        }, 
        {
            "location": "/install/#requirements", 
            "text": "Guild AI has the following requirements:   Max OS or Linux  Python 2.7 or Python 3  pip   Guild is installed from PyPI using  pip . Refer to  pip Installation  to ensure you have it\ninstalled.", 
            "title": "Requirements"
        }, 
        {
            "location": "/install/#install-guild-ai_1", 
            "text": "", 
            "title": "Install Guild AI"
        }, 
        {
            "location": "/install/#using-pip", 
            "text": "To install Guild AI, run the following command:  pip install guildai  If you need to run  install  with administrative privileges, run:  sudo pip install guildai  If you want the latest pre-release version of Guild AI, use the --pre  option:  pip install --pre guildai", 
            "title": "Using pip"
        }, 
        {
            "location": "/install/#from-source-code", 
            "text": "Note  This step is an alternative to installing Guild AI with pip\ndescribed above. Install Guild AI from source code if you want a\nspecific version from GitHub (e.g. an early release or development\nbranch) or if you want to contribute to the project.   Additional required tools for installing from source code:   git  npm  v5.8.0 or later  Python development library and headers for your system   To install Guild from source, clone the repository by running:  git clone https://github.com/guildai/guild.git  Change to the  guild  directory and install the required pip packages:  cd guild\npip install -r requirements.txt  Build Guild by running:  python setup.py build  Verify Guild by running:  guild/scripts/guild check  If see the message  NOT INSTALLED (No module named 'tensorflow') \nthat s okay - you ll install TensorFlow in the steps below. If you see\nother errors, please  open an issue on GitHub  and we ll help!  You can run the  GUILD_SOURCE_DIR/guild/scripts/guild  executable\ndirectly (where  GUILD_SOURCE_DIR  is the location of your cloned\nGuild AI source repository) or modify your environment to make  guild \navailable on your PATH using one of these methods:   Add  GUILD_SOURCE_DIR/guild/scripts  directory to your  PATH  environment\n  variable, OR  Create a symlink to  GUILD_SOURCE_DIR/guild/scripts/guild  that is\n  available on your PATH", 
            "title": "From source code"
        }, 
        {
            "location": "/install/#install-tensorflow", 
            "text": "Guild requires TensorFlow but does not install it for\nyou.  1  You can use  pip  to install TensorFlow by running:  pip install tensorflow  If your system has a GPU, install the GPU enabled package by running:  pip install tensorflow-gpu  For alternative installation methods, refer to  Installing TensorFlow .", 
            "title": "Install TensorFlow"
        }, 
        {
            "location": "/install/#install-optional-libraries", 
            "text": "If you system has a GPU or other accelerator supported by TensorFlow,\nyou will need to install and configure support for your hardware.", 
            "title": "Install optional libraries"
        }, 
        {
            "location": "/install/#cuda-and-cudnn", 
            "text": "If you have an NVIDIA GPU and and want to use the GPU enabled\nTensorFlow package, you must install the NVIDIA CUDA and cuDNN\nlibraries for your system. Refer to the links below for help\ninstalling the libraries.   CUDA Toolkit Download  NVIDIA cuDNN", 
            "title": "CUDA and cuDNN"
        }, 
        {
            "location": "/install/#nvidia-system-management-interface", 
            "text": "Guild uses NVIDIA System Management Interface ( nvidia-smi ) on GPU\naccelerated systems to collect GPU metrics. This tool is optional and\nGuild will run without it. However, to collect GPU stats on systems\nwith one or more GPUs, ensure that  nvidia-smi  is installed.   Note  NVIDIA System Management Interface is typically installed with NVIDIA\nGPU drivers. Refer to  NVIDIA System Management Interface \nfor more information.", 
            "title": "NVIDIA System Management Interface"
        }, 
        {
            "location": "/install/#verify-your-installation", 
            "text": "Verify that Guild is installed properly by running the check  command:  guild check  If there are problems with your installation, Guild will display the\ndetails and exit with an error. Refer to Troubleshooting  for assistance.", 
            "title": "Verify your installation"
        }, 
        {
            "location": "/install/#next-steps", 
            "text": "Congratulations, you ve installed Guild AI! We ve outlined some next\nsteps for you below.", 
            "title": "Next steps"
        }, 
        {
            "location": "/docs/", 
            "text": "Documentation\n\n\n\n\n\n\nConcepts\n\n\nIntroduction\nModels\nOperations\nRuns\nResources\nPackages\nTests\nEnvironments\nRemotes\n\n\n\n\nVisual tools\n\n\nGuild View\nTensorBoard\n\n\n\n\nReference\n\n\nCommands\nGuild file\nGuild home\nUser configuration\n\n\n\n\nStep by step\n\n\nGuides", 
            "title": "Documentation"
        }, 
        {
            "location": "/docs/#documentation", 
            "text": "", 
            "title": "Documentation"
        }, 
        {
            "location": "/docs/#concepts", 
            "text": "Introduction Models Operations Runs Resources Packages Tests Environments Remotes", 
            "title": "Concepts"
        }, 
        {
            "location": "/docs/#visual-tools", 
            "text": "Guild View TensorBoard", 
            "title": "Visual tools"
        }, 
        {
            "location": "/docs/#reference", 
            "text": "Commands Guild file Guild home User configuration", 
            "title": "Reference"
        }, 
        {
            "location": "/docs/#step-by-step", 
            "text": "Guides", 
            "title": "Step by step"
        }, 
        {
            "location": "/docs/intro/", 
            "text": "Guild AI introduction\n\n\n\n\nProjects\n\n\nExample\n\n\n\n\n\n\nModel operations\n\n\nExample\n\n\n\n\n\n\nExperiments\n\n\nExample\n\n\n\n\n\n\nEnd-to-end workflow\n\n\nExample\n\n\n\n\n\n\nModel tests\n\n\nExample\n\n\n\n\n\n\nPackages and code reuse\n\n\nExample\n\n\n\n\n\n\nSummary\n\n\nNext steps\n\n\n\n\n\n\n\n\nThis introduction provides an overview of Guild AI core\nfunctionality. Follow the steps under the each \nExample\n section\nbelow to get hands-on experience with Guild. By following the\nexamples, you will implement a Keras image classifier as described in\nTensorFlow\ns \nTrain your first neural network: basic classification\n.\n\n\nRefer to the \ncompleted\nproject\n for\nthe full example.\n\n\n\n\nFashion-MNIST dataset used in examples below\n\n\nProjects\n\n\nGuild features are be enabled for a TensorFlow or Keras project by\nadding a file named \nguild.yml\n to the project root directory. We\nrefer to \nguild.yml\n as a project \nGuild file\n.\n\n\nGuild files supplement TensorFlow and Keras projects. You often don\nt\nneed to modify your project source files to take advantage of Guild\nfeatures.\n\n\nGuild files are YAML formatted files that define \nmodels\n,\nmodel \noperations\n, model \nresources\n,\n\ntests\n, and \npackages\n.\n\n\nExample\n\n\nIn this example, we create a Guild project that contains a basic model\ndefinition.\n\n\nIf you haven\nt already done so, \ninstall Guild AI\n.\n\n\nTo create a project, start by creating its directory:\n\n\nmkdir sample-project\n\n\n\n\n\n\nTip\n\n\nIn any command example, you can click the word \nCOMMAND\n in the\nupper right corner to copy the example text to your clipboard, which\nyou can paste into your console.\n\n\n\n\nCreate the file \nsample-project/guild.yml\n and modify it to be:\n\n\n- model: fashion\n  description: Basic Fashion-MNIST image classifier.\n\n\n\n\n\n\nTip\n\n\nAs with command examples, you can click the word \nYAML\n to copy\nthe example to your clipboard, which you can paste into your text\neditor.\n\n\n\n\nSave your changes to \nguild.yml\n.\n\n\nConfirm that the project structure is:\n\n\n\n\n\n\nsample-project\n \n\n \nguild.yml\n\n \n\n\n\n\n\n\n\n\n\nChange to the project directory and use Guild to list the project\nmodels:\n\n\ncd sample-project\nguild models\n\n\n\n\nGuild shows the project models:\n\n\n./fashion  Basic Fashion-MNIST image classifier.\n\n\n\n\nThe value \n./fashion\n is the model source and name. The source\n\n./\n means that the model is defined in the current directory. Both\nthe model name and description come from the Guild file you just\ncreated.\n\n\nGuild model definitions represent the TensorFlow or Keras models in\nyour project. In the examples that follow, we fill in details to\ncreate a fully functional classifier for the Fashion-MNIST dataset.\n\n\nModel operations\n\n\nModel operations automate model related tasks. A common operation is\n\ntrain\n, which trains a model from scratch. As we\nll see later in this\nintroduction, operations can be any task that you want to\nautomate. These may include:\n\n\n\n\nprepare-data\n\n\nPrepare a dataset for training.\n\n\ntransfer-learn\n\n\nTrain a model using transfer learning.\n\n\nfinetune\n\n\nFine tune a trained model.\n\n\nevaluate\n\n\nEvaluate a trained model on a test/validation dataset.\n\n\nquantize\n\n\nQuantize a trained model to use 8 bit integers.\n\n\npredict\n\n\nUse a trained model to make predictions.\n\n\nserve\n\n\nRun a trained model as an inference server.\n\n\n\n\nYou\nre free to define the operations that suit your model\nGuild does\nnot prescribe a set of operations that must be supported.\n\n\nYou run an operation using the \nrun\n command. As we\nll see in\nthe next section, each operation run is tracked as a separate\nexperiment.\n\n\nExample\n\n\nIf you are following the examples, in this section we add a \ntrain\n\noperation to our model and run that operation as an experiment.\n\n\nModify \nguild.yml\n to be:\n\n\n- model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train\n\n\n\n\nThis change adds a \ntrain\n operation to the model with a description\nand a main module.\n\n\nSave your changes to \nguild.yml\n.\n\n\nUse the \noperations\n command to list available operations:\n\n\nguild operations\n\n\n\n\n\n\nTip\n\n\nYou can use \nops\n as a short cut to the \noperations\n command. We use\n\nops\n through the rest of this introduction.\n\n\n\n\nGuild displays the newly added \ntrain\n operation:\n\n\n./fashion:train  Train classifier from scratch.\n\n\n\n\nThe value \n./fashion:train\n is the full operation name, which\ncontains the model as well as the operation name.\n\n\nYou can view help for the project using the \nhelp\n command:\n\n\nguild help\n\n\n\n\nGuild automatically generates help from the Guild file. This\ninformation is useful for working with the project, especially as it\nbecomes more complex over time.\n\n\nPress \nq\n to exit the help screen.\n\n\nNext, run the operation:\n\n\nguild run train\n\n\n\n\nPress \nEnter\n to confirm the operation.\n\n\nThe command fails with the message:\n\n\nguild: No module named train\n\n\n\n\nThis is okay\nwe expect this error because our project is missing the\n\ntrain\n module.\n\n\nGuild operations are implemented using Python main\nmodules\ni.e. Python modules that can be executed as a program (see\n\nPython help\n for\ndetails). Any Python script can therefore be used for a Guild model\noperation.\n\n\nLet\ns create the missing module.\n\n\nDownload \ntrain.py\n\nand save it to the project directory. If you have \nwget\n installed,\nyou can download the file directly to the project directory by\nrunning:\n\n\nwget https://raw.githubusercontent.com/guildai/examples/master/fashion/train.py\n\n\n\n\nConfirm that the project structure is now:\n\n\n\n\n\n\nsample-project\n \n\n \nguild.yml\n\n \ntrain.py\n\n \n\n\n\n\n\n\n\n\n\nThe \ntrain\n module uses Keras to train a simple image classifer. The\nmodule is derived from the \nTensorFlow getting started tutorial\nNotebook\n. The\nneural network used in \ntrain\n consists of three layers:\n\n\n\n\nInput layer used to read images\n\n\nFully connected hidden layer\n\n\nFully connected output layer used generate image classes\n\n\n\n\nFor details on the network architecture, see \nBuild the model\n\nin the TensorFlow basic classification example.\n\n\nBefore we can train our model, we need to install the following Python\npackages, which are required by the \ntrain\n module:\n\n\n\n\nmatplotlib\n\n\nh5py\n\n\nnumpy\n\n\n\n\nInstall those packages using pip:\n\n\npip install matplotlib h5py numpy\n\n\n\n\nWith the \ntrain\n module now available, run the operation again:\n\n\nguild run train\n\n\n\n\nPress \nEnter\n to confirm the operation.\n\n\nGuild runs the train operation by executing the \ntrain\n module as a\nprogram\nthe operation is implemented entirely by that module.\n\n\nThe operation run was captured as an \nexperiment\n. We examine\nexperiments next.\n\n\nExperiments\n\n\nGuild tracks each operation run as an isolated experiment that can be\nmanaged and used. Files generated by a run are written to their\nassociated \nrun directory\n and can be accessed as normal\nfiles. Guild saves operation metadata, process output, and process\nexit status for each run.\n\n\nGuild provides extensive support for managing and using runs:\n\n\n\n\nView metadata, files, and output\n\n\nList by operation, status, and label\n\n\nDelete, restore, and purge\n\n\nExport and import\n\n\nTag with custom labels\n\n\nCopy to and from remote environments\n\n\nCompare run performance\n\n\nDiff run metadata, files, and output\n\n\n\n\nFiles generated by a run can be used as input to other runs. For\nexample, model checkpoints saved during a \ntrain\n operation can be\nused as input to an \nevaluate\n operation.\n\n\nFor information on managing runs, see \nRuns\n.\n\n\nExample\n\n\nIf you are following the examples, in this section we use Guild\ns run\nmanagement facility to examine the runs generated in the previous\nexample.\n\n\nFirst, list available runs:\n\n\nguild runs\n\n\n\n\nGuild shows the two runs from the previous section (dates and IDs will\ndiffer):\n\n\n[1:19c67a72]  ./fashion:train  2018-10-16 15:57:32  completed\n[2:1451e20c]  ./fashion:train  2018-10-16 15:57:23  error\n\n\n\n\nThe latest run is listed first and should have a status of\n\ncompleted\n, indicating that the operation exited without an\nerror. The previous run is listed second and should have a status of\n\nerror\n because the \ntrain\n module was not originally available (see\nprevious section).\n\n\nNext, show output for the failed run:\n\n\nguild runs info --output 2\n\n\n\n\nThe option \n--output\n tells Guild to include run output. The value\n\n2\n tells Guild to show information for the run with index \n2\n (see\nlisting above).\n\n\nGuild shows information for the failed run (dates and IDs will\ndiffer):\n\n\nid: 1451e20cd18611e88f52d017c2ab916f\noperation: ./fashion:train\nstatus: error\nstarted: 2018-10-16 15:57:23\nstopped: 2018-10-16 15:57:23\nrun_dir: ~/.guild/runs/1451e20cd18611e88f52d017c2ab916f\ncommand: /usr/bin/python -um guild.op_main train\nexit_status: 1\npid:\noutput:\n  guild: No module named train\n\n\n\n\nNote the error message in the output. This information is retained as\na part of the tracked experiment.\n\n\nNext, delete the failed run (we don\nt need it):\n\n\nguild runs rm 2\n\n\n\n\nAs with the \nruns info\n command, the value \n2\n is a reference to the\nsecond run in the list.\n\n\nGuild prompts you before deleting the run. Press \nEnter\n to\nconfirm. After deleting the run, you can verify that it was deleted by\nrunning \nguild runs\n.\n\n\nIf you make a mistake and delete a run by accident, you can restore it\nusing \nruns restore\n.\n\n\nNext, view the files generated by the successful run:\n\n\nguild ls\n\n\n\n\nWe can omit a reference to the run in this case\nGuild assumes you\nwant to show files for the latest run.\n\n\nGuild show these files (file names will differ):\n\n\n~/.guild/runs/7d230c98d20811e88f52d017c2ab916f:\n  events.out.tfevents.1539779455.local\n  weights-0001-13.233.hdf5\n  weights-0002-13.080.hdf5\n  weights-0003-13.031.hdf5\n  weights-0004-12.996.hdf5\n  weights-0005-13.007.hdf5\n\n\n\n\nThese are the log file and trained model weights. Guild tracks these\nfiles along with all other run related metadata.\n\n\n\n\nTip\n\n\nBy default \nls\n shows relative file paths. You can show full\npaths by including the \n-f\n option. This is useful if you need to\naccess a particular file on the file system.\n\n\n\n\nGuild provides a number of commands for viewing runs. Try any of these\ncommands from the \nsample-project\n directory:\n\n\n\n\nguild view\n\n\nOpen \nGuild View\n.\n\n\nguild tensorboard\n\n\nView TensorFlow event logs in \nTensorBoard\n.\n\n\nguild runs info\n\n\nShow basic run information (try \nguild runs info --help\n for a\n  list of options).\n\n\nguild open\n\n\nOpen the run directory in your system file browser.\n\n\n\n\n\n\nNote\n\n\nFor the commands \nguild view\n and \nguild tensorflow\n, you must\npress \nCtrl-C\n in the console to quit the application and return to a\ncommand prompt.\n\n\n\n\nEnd-to-end workflow\n\n\nGuild operations automate model related tasks. While \ntrain\n is a\ncommon operation, it\ns not the only operation a model may support. For\nexample, prior to training a model, you may need to prepare a dataset\nby processing raw data into a format that can be used efficiently for\ntraining. Your model may therefore have a \nprepare-data\n operation\nthat automates that task. Similarly, after training you may need to\nevaluate a trained model with test or validation data\nyour model may\nhave an \nevaluate\n operation.\n\n\nBy running various operations, you use Guild to automate your\nworkflow.\n\n\nConsider the following worflow, which generates TensorFLow Lite files\nfor deployment to mobile devices:\n\n\n\n\nEach step can be automated using an operation:\n\n\n\n\n\n\nBefore training a model, run \nprepare-data\n, which loads raw data\n  from a database and processes it using various transformations. You\n  can use operation \nflags\n to specify which\n  transformations should apply and how examples should be split\n  between train and validate.\n\n\n$ guild run prepare-data transforms=all validation-split=20\n\n\n\n\n\n\nOnce the data is prepared, run \ntrain\n. This is a \ntrain from\n  scratch\n operation, which means that model weights are initialized\n  with their starting values (e.g. randomly generated) without the\n  benefit of prior training. This is typically a long-running\n  operation that can take several hour or even days. As with\n  \nprepare-data\n you can use flags to specify training parameters such\n  as learning rate.\n\n\n$ guild run train learning-rate=0.001\n\n\n\n\n\n\nAs the model trains, run \nevaluate\n to check its status. This can be\n  a time consuming operation, depending on how thorough the evaluation\n  is. Run it alongside the train operation without having to stop\n  training.\n\n\n$ guild run evaluate\n\n\n\n\n\n\nOnce a model is trained, you can fine-tune it with additional\n  training\nbut with a lower learning rate. You run \nfinetune\n, which\n  initializes the model weights with the values from a previous\n  \ntrain\n operation. As with \ntrain\n you can check progress by running\n  \nevaluate\n and stop operation when the model accuracy is no longer\n  improving.\n\n\n$ guild run finetune learning-rate=0.0001\n\n\n\n\n\n\nWhen it\ns time to deploy a trained model for use in a mobile\n  application, run the \ntflite\n operation to generate a \nTF Lite\n file. The operation uses the\n  learned weights from the \nfinetune\n operation to create a frozen\n  inference model and corresponding TF Lite file.\n\n\n$ guild run tflite\n\n\n\n\n\n\nThis is just one example of a model workflow. Your workflow will be\ndifferent based on the type of model and the applications you build\nwith it.\n\n\nExample\n\n\nIf you are following the examples, in this section we add a \npredict\n\noperation to our Fashion-MNIST model. With the addition of this\noperation, our model supports this simple workflow:\n\n\n\n\nModify \nguild.yml\n to be:\n\n\n- model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train\n    predict:\n      description: Use trained model to make predictions.\n      main: predict\n      requires: trained-model\n  resources:\n    trained-model:\n      path: model\n      sources:\n        - operation: train\n\n\n\n\nThis adds a new operation \npredict\n. It also adds a\n\nresource\n named \ntrained-model\n, which is required by\n\npredict\n. Resources are used to resolve source files needed by an\noperation. In this example, the \npredict\n operation needs files\ngenerated by the \ntrain\n operation.\n\n\nHere\ns how it works:\n\n\n\n\n\n\npredict\n requires \ntrained-model\n, which means that all of the\n  sources defined for the \ntrained-model\n resource must be available\n  to the \npredict\n operation when \npredict\n is run.\n\n\n\n\n\n\nThe \ntrained-model\n resource defines a single \nsource\n, which is the\n  output generated by the \ntrain\n operation.\n\n\n\n\n\n\nThe \ntrained-model\n resource \npath\n is \nmodel\n, which means that\n  each of source files are located in the \nmodel\n run subdirectory of\n  requiring operations.\n\n\n\n\n\n\nWhen \npredict\n runs, it looks for trained model files in a run\n  subdirectory named \nmodel\n. It uses these to initialize the model\n  variables before making any predictions.\n\n\n\n\n\n\nNext, we need to create the \npredict\n module. We\nll download it along\nwith a second module \nfig\n, which is required by \npredict\n.\n\n\nDownload the following two files and save them to \nsample-project\n:\n\n\n\n\npredict.py\n\n\nThe \npredict\n module.\n\n\nfig.py\n\n\nA module required by \npredict\n.\n\n\n\n\nIf you are using \nwget\n you can download the file directly to the\nproject directory by running:\n\n\nwget https://raw.githubusercontent.com/guildai/examples/master/fashion/predict.py\nwget https://raw.githubusercontent.com/guildai/examples/master/fashion/fig.py\n\n\n\n\nWhen the required files are downloaded, your project structure should\nbe:\n\n\n\n\n\n\nsample-project\n \n\n \nfig.py\n\n \nguild.yml\n\n \npredict.py\n\n \ntrain.py\n\n \n\n\n\n\n\n\n\n\n\nSave your changes to \nguild.yml\n and confirm that the new operations\nare available:\n\n\nguild ops\n\n\n\n\nGuild now displays two operations:\n\n\n./fashion:predict       Use trained model to make predictions.\n./fashion:train         Train classifier from scratch.\n\n\n\n\nNext, generate predictions by running \npredict\n:\n\n\nguild run predict\n\n\n\n\nPress \nEnter\n to confirm.\n\n\nGuild runs the operation, which selects five images at random from the\nFashion-MNIST test dataset and classifies them using the trained\nmodel. The prediction for each image is plotted in a \npng\n file\nlocated in the operation run directory.\n\n\nTo view the generated files from the \npredict\n operation, run:\n\n\nguild ls\n\n\n\n\nGuild shows these files (file names will differ):\n\n\n~/.guild/runs/bae908a4d25111e88f52d017c2ab916f:\n  00618.png\n  03100.png\n  03975.png\n  07868-error.png\n  09807.png\n  model/\n  model/events.out.tfevents.1539810834.dakota\n  model/weights-0001-0.494.hdf5\n  model/weights-0002-0.373.hdf5\n  model/weights-0003-0.332.hdf5\n  model/weights-0004-0.310.hdf5\n  model/weights-0005-0.292.hdf5\n\n\n\n\nEach \npng\n file is an image generated by the \npredict\n operation. You\ncan view the images by running \nguild view\n, clicking \nFiles\n, and\nthen clicking one of the generated image files.\n\n\n\n\nSample predicted image from Guild View\n\n\nPress \nCtrl-C\n in the console to quit Guild View and return to a\ncommand prompt.\n\n\nAlternatively, run \nguild open\n to view the run directory in you\nsystem file browser. From there you can open images in the image\nviewer of choice.\n\n\nIf the model misclassifies an image, the image name contains the text\n\nerror\n. Your run may not have errors as the images are randomly\nselected\ntry running the operation a few more times to see if the\nmodel misclassifies an image.\n\n\nThe files under the \nmodels\n subdirectory (see file list above) are\nfrom the \ntrain\n operation. These are used to initialize the model\nweights for use in image class prediction. Guild makes these files\navailable when it resolves the \ntrained-model\n resource, which is\nrequired by \npredict\n.\n\n\nModel tests\n\n\nGuild provides a test facility to verify model behavior. The primary\nmethod of testing is to run operations and to check the contents of\ngenerated files.\n\n\nFor more information, see \nTests\n.\n\n\nExample\n\n\nIf you are following the examples, in this section we add a test to\nour project that can be run to verify model behavior.\n\n\nModify \nguild.yml\n to be:\n\n\n- model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train\n    predict:\n      description: Use trained model to make predictions.\n      main: predict\n      requires: trained-model\n  resources:\n    trained-model:\n      path: model\n      sources:\n        - operation: train\n\n- test: fashion\n  steps:\n    - run: train\n    - run: predict\n\n\n\n\nThis change adds a test named \nfashion\n to the Guild file, which is\nused to check the model\ns \ntrain\n and \npredict\n operations. If the\noperations complete successfully the test will pass, otherwise it will\nfail.\n\n\nSave your changes to \nguild.yml\n.\n\n\nNext, run the test:\n\n\nguild test\n\n\n\n\nPress \nEnter\n to confirm.\n\n\nGuild runs \ntrain\n and \npredict\nthe operations should complete\nwithout error and Guild shows \nAll tests passed\n.\n\n\nPackages and code reuse\n\n\nGuild supports packaging and distribution your models, which allow\nothers to use your models by simply installing a package. Once\ninstalled, packaged models and their operations are available just\nlike project models.\n\n\nSimilarly, you can install and use models developed by others.\n\n\nFor more information, see \nPackages\n.\n\n\nExample\n\n\nIf you\nre following the examples, in this section, we add package\nsupport to our project and create a package to facilitate using our\nmodel.\n\n\nFirst, modify \nguild.yml\n to be:\n\n\n- model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train\n    predict:\n      description: Use trained model to make predictions.\n      main: predict\n      requires: trained-model\n  resources:\n    trained-model:\n      path: model\n      sources:\n        - operation: train\n\n- test: fashion\n  steps:\n    - run: train\n    - run: predict\n\n- package: fashion\n  version: 1.0\n\n\n\n\nThis adds a top-level \npackage\n element to \nguild.yml\n that provides\ninformation Guild uses to generate a package.\n\n\nNext, create a package by running:\n\n\nguild package\n\n\n\n\nGuild creates a file \ndist/fashion-1.0.0-py2.py3-none-any.whl\n. This\nis a Python \ndistribution archive\n\nthat is used to install the fashion model.\n\n\nYou can distribute this file to friends and colleagues who want to use\nyour model. For example, upload the package as a \nrelease on GitHub\n.\n\n\nTo install the package, a user runs \nguild install\n,\nspecifying the path to \nfashion-1.0.0-py2.py3-none-any.whl\n.\n\n\nThe steps below are optional\nfollow them to experiment with your\npackaged model.\n\n\nTo simulate a user\ns experience when installing and using your\npackaged model, create a \nPython virtual environment\n that isolates the\npackage and its requirements. Use a temporary environment directory\n(you can delete the directory after you complete the steps below):\n\n\nvirtualenv /tmp/sample-package-test\n\n\n\n\nNext, activate the virtual environment:\n\n\nsource /tmp/sample-package-test/bin/activate\n\n\n\n\nWithin the activated virtual environment, install Guild AI,\nTensorFlow, and the \nfashion\n package:\n\n\npip install guildai tensorflow dist/fashion-1.0-py2.py3-none-any.whl\n\n\n\n\nChange to the environment directory:\n\n\ncd /tmp/sample-package-test\n\n\n\n\n\n\nNote\n\n\nThe last step is not required to use the installed \nfashion\n\npackage. However, by changing out of the project directory\n(i.e. \nsample-project\n) you avoid displaying its Guild file contents\nin the commands below.\n\n\n\n\nWith the \nfashion\n package installed, list available models:\n\n\nguild models\n\n\n\n\nGuild shows the available models:\n\n\nfashion/fashion  Basic Fashion-MNIST image classifier.\n\n\n\n\nThe value \nfashion/fashion\n is the full model name including the\nmodel source. In this case the model is defined in the \nfashion\n\npackage.\n\n\nNext, show available operations:\n\n\nguild ops\n\n\n\n\nGuild shows the model operations, again indicating that they are\ndefined in the \nfashion\n package:\n\n\nfashion/fashion:predict  Use trained model to make predictions.\nfashion/fashion:train    Train classifier from scratch.\n\n\n\n\nNext, test the model\nthis runs both the \ntrain\n and \npredict\n\noperations:\n\n\nguild test fashion\n\n\n\n\nIn this case you must specify the package to test.\n\n\nPress \nEnter\n to continue. Guild runs the two operations assoicated\nwith test.\n\n\nWhen the two operations are completed, you may use the various Guild\nrun management commands to view the results.\n\n\nList runs:\n\n\nguild runs\n\n\n\n\nUse Guild View to explore the run files, including prediction images:\n\n\nguild view\n\n\n\n\nPress \nCtrl-C\n to quit Guild View and return to a command prompt.\n\n\nUse TensorBoard to view training logs:\n\n\nguild tensorboard\n\n\n\n\nPress \nCtrl-C\n to quit TensorBoard and return to a command prompt.\n\n\nThese steps simulate a user\ns experience when installing and using\nyour Fashion-MNIST image classifier. Once you package your model, you\nneed only distribute the package archive\n(e.g. \nfashion-1.0.0-py2.py3-none-any.whl\n) to users for them to\ninstall and use your model.\n\n\nSummary\n\n\nIn this introduction we present Guild AI core functionality with\nstep-by-step examples for hands-on experience with the toolset.\n\n\nGuild AI supports TensorFlow and Keras model automation and provides a\ncomprehensive set of features to improve developer productivity and\nfacilitate model reuse for application development.\n\n\nGuild models can be both project based and package based. Project\nbased models are defined in Guild files (i.e. files named \nguild.yml\n)\nthat reside in a project root directory. Guild files contain model\ndefinitions, including operations and resources used by\noperations. Guild files can also contain tests and package\ndefinitions.\n\n\nGuild packages are used to distribute models to other users. Packages\nare standard Python package archives that can be installed with\npip. Package dependencies (e.g. \nnumpy\n, \nmatplotlib\n, etc.) are\nautomatically installed with Guild packages, ensuring that operations\nwork without additional installation steps.\n\n\nGuild supports experiment tracking and management. Experiments are\ncreated for each operation runs and can be viewed in various ways\nusing Guild commands, including visualization tools for exploring runs\nand training logs.\n\n\nNext steps\n\n\n\n\nBrowse Guild AI documentation", 
            "title": "Introduction"
        }, 
        {
            "location": "/docs/intro/#guild-ai-introduction", 
            "text": "Projects  Example    Model operations  Example    Experiments  Example    End-to-end workflow  Example    Model tests  Example    Packages and code reuse  Example    Summary  Next steps     This introduction provides an overview of Guild AI core\nfunctionality. Follow the steps under the each  Example  section\nbelow to get hands-on experience with Guild. By following the\nexamples, you will implement a Keras image classifier as described in\nTensorFlow s  Train your first neural network: basic classification .  Refer to the  completed\nproject  for\nthe full example.   Fashion-MNIST dataset used in examples below", 
            "title": "Guild AI introduction"
        }, 
        {
            "location": "/docs/intro/#projects", 
            "text": "Guild features are be enabled for a TensorFlow or Keras project by\nadding a file named  guild.yml  to the project root directory. We\nrefer to  guild.yml  as a project  Guild file .  Guild files supplement TensorFlow and Keras projects. You often don t\nneed to modify your project source files to take advantage of Guild\nfeatures.  Guild files are YAML formatted files that define  models ,\nmodel  operations , model  resources , tests , and  packages .", 
            "title": "Projects"
        }, 
        {
            "location": "/docs/intro/#example", 
            "text": "In this example, we create a Guild project that contains a basic model\ndefinition.  If you haven t already done so,  install Guild AI .  To create a project, start by creating its directory:  mkdir sample-project   Tip  In any command example, you can click the word  COMMAND  in the\nupper right corner to copy the example text to your clipboard, which\nyou can paste into your console.   Create the file  sample-project/guild.yml  and modify it to be:  - model: fashion\n  description: Basic Fashion-MNIST image classifier.   Tip  As with command examples, you can click the word  YAML  to copy\nthe example to your clipboard, which you can paste into your text\neditor.   Save your changes to  guild.yml .  Confirm that the project structure is:    sample-project\n  \n  guild.yml \n      Change to the project directory and use Guild to list the project\nmodels:  cd sample-project\nguild models  Guild shows the project models:  ./fashion  Basic Fashion-MNIST image classifier.  The value  ./fashion  is the model source and name. The source ./  means that the model is defined in the current directory. Both\nthe model name and description come from the Guild file you just\ncreated.  Guild model definitions represent the TensorFlow or Keras models in\nyour project. In the examples that follow, we fill in details to\ncreate a fully functional classifier for the Fashion-MNIST dataset.", 
            "title": "Example"
        }, 
        {
            "location": "/docs/intro/#model-operations", 
            "text": "Model operations automate model related tasks. A common operation is train , which trains a model from scratch. As we ll see later in this\nintroduction, operations can be any task that you want to\nautomate. These may include:   prepare-data  Prepare a dataset for training.  transfer-learn  Train a model using transfer learning.  finetune  Fine tune a trained model.  evaluate  Evaluate a trained model on a test/validation dataset.  quantize  Quantize a trained model to use 8 bit integers.  predict  Use a trained model to make predictions.  serve  Run a trained model as an inference server.   You re free to define the operations that suit your model Guild does\nnot prescribe a set of operations that must be supported.  You run an operation using the  run  command. As we ll see in\nthe next section, each operation run is tracked as a separate\nexperiment.", 
            "title": "Model operations"
        }, 
        {
            "location": "/docs/intro/#example_1", 
            "text": "If you are following the examples, in this section we add a  train \noperation to our model and run that operation as an experiment.  Modify  guild.yml  to be:  - model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train  This change adds a  train  operation to the model with a description\nand a main module.  Save your changes to  guild.yml .  Use the  operations  command to list available operations:  guild operations   Tip  You can use  ops  as a short cut to the  operations  command. We use ops  through the rest of this introduction.   Guild displays the newly added  train  operation:  ./fashion:train  Train classifier from scratch.  The value  ./fashion:train  is the full operation name, which\ncontains the model as well as the operation name.  You can view help for the project using the  help  command:  guild help  Guild automatically generates help from the Guild file. This\ninformation is useful for working with the project, especially as it\nbecomes more complex over time.  Press  q  to exit the help screen.  Next, run the operation:  guild run train  Press  Enter  to confirm the operation.  The command fails with the message:  guild: No module named train  This is okay we expect this error because our project is missing the train  module.  Guild operations are implemented using Python main\nmodules i.e. Python modules that can be executed as a program (see Python help  for\ndetails). Any Python script can therefore be used for a Guild model\noperation.  Let s create the missing module.  Download  train.py \nand save it to the project directory. If you have  wget  installed,\nyou can download the file directly to the project directory by\nrunning:  wget https://raw.githubusercontent.com/guildai/examples/master/fashion/train.py  Confirm that the project structure is now:    sample-project\n  \n  guild.yml \n  train.py \n      The  train  module uses Keras to train a simple image classifer. The\nmodule is derived from the  TensorFlow getting started tutorial\nNotebook . The\nneural network used in  train  consists of three layers:   Input layer used to read images  Fully connected hidden layer  Fully connected output layer used generate image classes   For details on the network architecture, see  Build the model \nin the TensorFlow basic classification example.  Before we can train our model, we need to install the following Python\npackages, which are required by the  train  module:   matplotlib  h5py  numpy   Install those packages using pip:  pip install matplotlib h5py numpy  With the  train  module now available, run the operation again:  guild run train  Press  Enter  to confirm the operation.  Guild runs the train operation by executing the  train  module as a\nprogram the operation is implemented entirely by that module.  The operation run was captured as an  experiment . We examine\nexperiments next.", 
            "title": "Example"
        }, 
        {
            "location": "/docs/intro/#experiments", 
            "text": "Guild tracks each operation run as an isolated experiment that can be\nmanaged and used. Files generated by a run are written to their\nassociated  run directory  and can be accessed as normal\nfiles. Guild saves operation metadata, process output, and process\nexit status for each run.  Guild provides extensive support for managing and using runs:   View metadata, files, and output  List by operation, status, and label  Delete, restore, and purge  Export and import  Tag with custom labels  Copy to and from remote environments  Compare run performance  Diff run metadata, files, and output   Files generated by a run can be used as input to other runs. For\nexample, model checkpoints saved during a  train  operation can be\nused as input to an  evaluate  operation.  For information on managing runs, see  Runs .", 
            "title": "Experiments"
        }, 
        {
            "location": "/docs/intro/#example_2", 
            "text": "If you are following the examples, in this section we use Guild s run\nmanagement facility to examine the runs generated in the previous\nexample.  First, list available runs:  guild runs  Guild shows the two runs from the previous section (dates and IDs will\ndiffer):  [1:19c67a72]  ./fashion:train  2018-10-16 15:57:32  completed\n[2:1451e20c]  ./fashion:train  2018-10-16 15:57:23  error  The latest run is listed first and should have a status of completed , indicating that the operation exited without an\nerror. The previous run is listed second and should have a status of error  because the  train  module was not originally available (see\nprevious section).  Next, show output for the failed run:  guild runs info --output 2  The option  --output  tells Guild to include run output. The value 2  tells Guild to show information for the run with index  2  (see\nlisting above).  Guild shows information for the failed run (dates and IDs will\ndiffer):  id: 1451e20cd18611e88f52d017c2ab916f\noperation: ./fashion:train\nstatus: error\nstarted: 2018-10-16 15:57:23\nstopped: 2018-10-16 15:57:23\nrun_dir: ~/.guild/runs/1451e20cd18611e88f52d017c2ab916f\ncommand: /usr/bin/python -um guild.op_main train\nexit_status: 1\npid:\noutput:\n  guild: No module named train  Note the error message in the output. This information is retained as\na part of the tracked experiment.  Next, delete the failed run (we don t need it):  guild runs rm 2  As with the  runs info  command, the value  2  is a reference to the\nsecond run in the list.  Guild prompts you before deleting the run. Press  Enter  to\nconfirm. After deleting the run, you can verify that it was deleted by\nrunning  guild runs .  If you make a mistake and delete a run by accident, you can restore it\nusing  runs restore .  Next, view the files generated by the successful run:  guild ls  We can omit a reference to the run in this case Guild assumes you\nwant to show files for the latest run.  Guild show these files (file names will differ):  ~/.guild/runs/7d230c98d20811e88f52d017c2ab916f:\n  events.out.tfevents.1539779455.local\n  weights-0001-13.233.hdf5\n  weights-0002-13.080.hdf5\n  weights-0003-13.031.hdf5\n  weights-0004-12.996.hdf5\n  weights-0005-13.007.hdf5  These are the log file and trained model weights. Guild tracks these\nfiles along with all other run related metadata.   Tip  By default  ls  shows relative file paths. You can show full\npaths by including the  -f  option. This is useful if you need to\naccess a particular file on the file system.   Guild provides a number of commands for viewing runs. Try any of these\ncommands from the  sample-project  directory:   guild view  Open  Guild View .  guild tensorboard  View TensorFlow event logs in  TensorBoard .  guild runs info  Show basic run information (try  guild runs info --help  for a\n  list of options).  guild open  Open the run directory in your system file browser.    Note  For the commands  guild view  and  guild tensorflow , you must\npress  Ctrl-C  in the console to quit the application and return to a\ncommand prompt.", 
            "title": "Example"
        }, 
        {
            "location": "/docs/intro/#end-to-end-workflow", 
            "text": "Guild operations automate model related tasks. While  train  is a\ncommon operation, it s not the only operation a model may support. For\nexample, prior to training a model, you may need to prepare a dataset\nby processing raw data into a format that can be used efficiently for\ntraining. Your model may therefore have a  prepare-data  operation\nthat automates that task. Similarly, after training you may need to\nevaluate a trained model with test or validation data your model may\nhave an  evaluate  operation.  By running various operations, you use Guild to automate your\nworkflow.  Consider the following worflow, which generates TensorFLow Lite files\nfor deployment to mobile devices:   Each step can be automated using an operation:    Before training a model, run  prepare-data , which loads raw data\n  from a database and processes it using various transformations. You\n  can use operation  flags  to specify which\n  transformations should apply and how examples should be split\n  between train and validate.  $ guild run prepare-data transforms=all validation-split=20    Once the data is prepared, run  train . This is a  train from\n  scratch  operation, which means that model weights are initialized\n  with their starting values (e.g. randomly generated) without the\n  benefit of prior training. This is typically a long-running\n  operation that can take several hour or even days. As with\n   prepare-data  you can use flags to specify training parameters such\n  as learning rate.  $ guild run train learning-rate=0.001    As the model trains, run  evaluate  to check its status. This can be\n  a time consuming operation, depending on how thorough the evaluation\n  is. Run it alongside the train operation without having to stop\n  training.  $ guild run evaluate    Once a model is trained, you can fine-tune it with additional\n  training but with a lower learning rate. You run  finetune , which\n  initializes the model weights with the values from a previous\n   train  operation. As with  train  you can check progress by running\n   evaluate  and stop operation when the model accuracy is no longer\n  improving.  $ guild run finetune learning-rate=0.0001    When it s time to deploy a trained model for use in a mobile\n  application, run the  tflite  operation to generate a  TF Lite  file. The operation uses the\n  learned weights from the  finetune  operation to create a frozen\n  inference model and corresponding TF Lite file.  $ guild run tflite    This is just one example of a model workflow. Your workflow will be\ndifferent based on the type of model and the applications you build\nwith it.", 
            "title": "End-to-end workflow"
        }, 
        {
            "location": "/docs/intro/#example_3", 
            "text": "If you are following the examples, in this section we add a  predict \noperation to our Fashion-MNIST model. With the addition of this\noperation, our model supports this simple workflow:   Modify  guild.yml  to be:  - model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train\n    predict:\n      description: Use trained model to make predictions.\n      main: predict\n      requires: trained-model\n  resources:\n    trained-model:\n      path: model\n      sources:\n        - operation: train  This adds a new operation  predict . It also adds a resource  named  trained-model , which is required by predict . Resources are used to resolve source files needed by an\noperation. In this example, the  predict  operation needs files\ngenerated by the  train  operation.  Here s how it works:    predict  requires  trained-model , which means that all of the\n  sources defined for the  trained-model  resource must be available\n  to the  predict  operation when  predict  is run.    The  trained-model  resource defines a single  source , which is the\n  output generated by the  train  operation.    The  trained-model  resource  path  is  model , which means that\n  each of source files are located in the  model  run subdirectory of\n  requiring operations.    When  predict  runs, it looks for trained model files in a run\n  subdirectory named  model . It uses these to initialize the model\n  variables before making any predictions.    Next, we need to create the  predict  module. We ll download it along\nwith a second module  fig , which is required by  predict .  Download the following two files and save them to  sample-project :   predict.py  The  predict  module.  fig.py  A module required by  predict .   If you are using  wget  you can download the file directly to the\nproject directory by running:  wget https://raw.githubusercontent.com/guildai/examples/master/fashion/predict.py\nwget https://raw.githubusercontent.com/guildai/examples/master/fashion/fig.py  When the required files are downloaded, your project structure should\nbe:    sample-project\n  \n  fig.py \n  guild.yml \n  predict.py \n  train.py \n      Save your changes to  guild.yml  and confirm that the new operations\nare available:  guild ops  Guild now displays two operations:  ./fashion:predict       Use trained model to make predictions.\n./fashion:train         Train classifier from scratch.  Next, generate predictions by running  predict :  guild run predict  Press  Enter  to confirm.  Guild runs the operation, which selects five images at random from the\nFashion-MNIST test dataset and classifies them using the trained\nmodel. The prediction for each image is plotted in a  png  file\nlocated in the operation run directory.  To view the generated files from the  predict  operation, run:  guild ls  Guild shows these files (file names will differ):  ~/.guild/runs/bae908a4d25111e88f52d017c2ab916f:\n  00618.png\n  03100.png\n  03975.png\n  07868-error.png\n  09807.png\n  model/\n  model/events.out.tfevents.1539810834.dakota\n  model/weights-0001-0.494.hdf5\n  model/weights-0002-0.373.hdf5\n  model/weights-0003-0.332.hdf5\n  model/weights-0004-0.310.hdf5\n  model/weights-0005-0.292.hdf5  Each  png  file is an image generated by the  predict  operation. You\ncan view the images by running  guild view , clicking  Files , and\nthen clicking one of the generated image files.   Sample predicted image from Guild View  Press  Ctrl-C  in the console to quit Guild View and return to a\ncommand prompt.  Alternatively, run  guild open  to view the run directory in you\nsystem file browser. From there you can open images in the image\nviewer of choice.  If the model misclassifies an image, the image name contains the text error . Your run may not have errors as the images are randomly\nselected try running the operation a few more times to see if the\nmodel misclassifies an image.  The files under the  models  subdirectory (see file list above) are\nfrom the  train  operation. These are used to initialize the model\nweights for use in image class prediction. Guild makes these files\navailable when it resolves the  trained-model  resource, which is\nrequired by  predict .", 
            "title": "Example"
        }, 
        {
            "location": "/docs/intro/#model-tests", 
            "text": "Guild provides a test facility to verify model behavior. The primary\nmethod of testing is to run operations and to check the contents of\ngenerated files.  For more information, see  Tests .", 
            "title": "Model tests"
        }, 
        {
            "location": "/docs/intro/#example_4", 
            "text": "If you are following the examples, in this section we add a test to\nour project that can be run to verify model behavior.  Modify  guild.yml  to be:  - model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train\n    predict:\n      description: Use trained model to make predictions.\n      main: predict\n      requires: trained-model\n  resources:\n    trained-model:\n      path: model\n      sources:\n        - operation: train\n\n- test: fashion\n  steps:\n    - run: train\n    - run: predict  This change adds a test named  fashion  to the Guild file, which is\nused to check the model s  train  and  predict  operations. If the\noperations complete successfully the test will pass, otherwise it will\nfail.  Save your changes to  guild.yml .  Next, run the test:  guild test  Press  Enter  to confirm.  Guild runs  train  and  predict the operations should complete\nwithout error and Guild shows  All tests passed .", 
            "title": "Example"
        }, 
        {
            "location": "/docs/intro/#packages-and-code-reuse", 
            "text": "Guild supports packaging and distribution your models, which allow\nothers to use your models by simply installing a package. Once\ninstalled, packaged models and their operations are available just\nlike project models.  Similarly, you can install and use models developed by others.  For more information, see  Packages .", 
            "title": "Packages and code reuse"
        }, 
        {
            "location": "/docs/intro/#example_5", 
            "text": "If you re following the examples, in this section, we add package\nsupport to our project and create a package to facilitate using our\nmodel.  First, modify  guild.yml  to be:  - model: fashion\n  description: Basic Fashion-MNIST image classifier.\n  operations:\n    train:\n      description: Train classifier from scratch.\n      main: train\n    predict:\n      description: Use trained model to make predictions.\n      main: predict\n      requires: trained-model\n  resources:\n    trained-model:\n      path: model\n      sources:\n        - operation: train\n\n- test: fashion\n  steps:\n    - run: train\n    - run: predict\n\n- package: fashion\n  version: 1.0  This adds a top-level  package  element to  guild.yml  that provides\ninformation Guild uses to generate a package.  Next, create a package by running:  guild package  Guild creates a file  dist/fashion-1.0.0-py2.py3-none-any.whl . This\nis a Python  distribution archive \nthat is used to install the fashion model.  You can distribute this file to friends and colleagues who want to use\nyour model. For example, upload the package as a  release on GitHub .  To install the package, a user runs  guild install ,\nspecifying the path to  fashion-1.0.0-py2.py3-none-any.whl .  The steps below are optional follow them to experiment with your\npackaged model.  To simulate a user s experience when installing and using your\npackaged model, create a  Python virtual environment  that isolates the\npackage and its requirements. Use a temporary environment directory\n(you can delete the directory after you complete the steps below):  virtualenv /tmp/sample-package-test  Next, activate the virtual environment:  source /tmp/sample-package-test/bin/activate  Within the activated virtual environment, install Guild AI,\nTensorFlow, and the  fashion  package:  pip install guildai tensorflow dist/fashion-1.0-py2.py3-none-any.whl  Change to the environment directory:  cd /tmp/sample-package-test   Note  The last step is not required to use the installed  fashion \npackage. However, by changing out of the project directory\n(i.e.  sample-project ) you avoid displaying its Guild file contents\nin the commands below.   With the  fashion  package installed, list available models:  guild models  Guild shows the available models:  fashion/fashion  Basic Fashion-MNIST image classifier.  The value  fashion/fashion  is the full model name including the\nmodel source. In this case the model is defined in the  fashion \npackage.  Next, show available operations:  guild ops  Guild shows the model operations, again indicating that they are\ndefined in the  fashion  package:  fashion/fashion:predict  Use trained model to make predictions.\nfashion/fashion:train    Train classifier from scratch.  Next, test the model this runs both the  train  and  predict \noperations:  guild test fashion  In this case you must specify the package to test.  Press  Enter  to continue. Guild runs the two operations assoicated\nwith test.  When the two operations are completed, you may use the various Guild\nrun management commands to view the results.  List runs:  guild runs  Use Guild View to explore the run files, including prediction images:  guild view  Press  Ctrl-C  to quit Guild View and return to a command prompt.  Use TensorBoard to view training logs:  guild tensorboard  Press  Ctrl-C  to quit TensorBoard and return to a command prompt.  These steps simulate a user s experience when installing and using\nyour Fashion-MNIST image classifier. Once you package your model, you\nneed only distribute the package archive\n(e.g.  fashion-1.0.0-py2.py3-none-any.whl ) to users for them to\ninstall and use your model.", 
            "title": "Example"
        }, 
        {
            "location": "/docs/intro/#summary", 
            "text": "In this introduction we present Guild AI core functionality with\nstep-by-step examples for hands-on experience with the toolset.  Guild AI supports TensorFlow and Keras model automation and provides a\ncomprehensive set of features to improve developer productivity and\nfacilitate model reuse for application development.  Guild models can be both project based and package based. Project\nbased models are defined in Guild files (i.e. files named  guild.yml )\nthat reside in a project root directory. Guild files contain model\ndefinitions, including operations and resources used by\noperations. Guild files can also contain tests and package\ndefinitions.  Guild packages are used to distribute models to other users. Packages\nare standard Python package archives that can be installed with\npip. Package dependencies (e.g.  numpy ,  matplotlib , etc.) are\nautomatically installed with Guild packages, ensuring that operations\nwork without additional installation steps.  Guild supports experiment tracking and management. Experiments are\ncreated for each operation runs and can be viewed in various ways\nusing Guild commands, including visualization tools for exploring runs\nand training logs.", 
            "title": "Summary"
        }, 
        {
            "location": "/docs/intro/#next-steps", 
            "text": "Browse Guild AI documentation", 
            "title": "Next steps"
        }, 
        {
            "location": "/docs/models/", 
            "text": "Models\n\n\n\n\nCreate a model\n\n\nInstall models\n\n\nGet model help\n\n\nList models\n\n\nUninstall models\n\n\n\n\nA model in Guild AI is a representation of a machine learning model. A\nmodel may be as simple, like a linear regression, or complex, like a\ndeep neural network.\n\n\nModels in Guild are characterized by their support of\n\noperations\n, which are actions that can be performed\non the model. One of the most common model operations is \ntrain\n,\nwhich iteratively modifies model parameters to optimize the model\ns\npredictive or generative capability. Other common operations include\n\nevaluate\n, \npredict\n, \ndeploy\n, and \ngenerate\n.\n\n\nGuild does not implement model operations. That task is the\nresponsibility of the model developer. Guild instead manages the work\nflow associated with running operations and tracking results.\n\n\nConsider the following Guild command:\n\n\nguild train mnist\n\n\n\n\nWhen this command is run, Guild will look for a model named \nmnist\n\nand then for an operation associated with that model named\n\ntrain\n. With this information, Guild will start a \nrun\n,\nwhich is a Python session used to train the model. Guild will track\nsave run metadata and output so that you can access it later.\n\n\nGuild looks for models in \nGuild files\n, which are\nfiles named \nguild.yml\n that contain model definitions.\n\n\nHere\ns what a \nguild.yml\n that defines an \nmnist\n model might look\nlike:\n\n\nmodel: mnist\noperations:\n  train:\n    cmd: train_mnist\n\n\n\n\nThis file tells Guild that the model \nmnist\n has an operation \ntrain\n\nthat is performed by running a Python module \ntrain_mnist\n.\n\n\nHere\ns what \ntrain_mnist.py\nthe training module source file\n\nmight look like:\n\n\nimport mnist_data\nimport mnist_model\n\ndef train():\n    data = mnist_data.load()\n    model = mnist_model.init()\n    model.train(data)\n\nif __name__ == \n__main__\n:\n    train()\n\n\n\n\nModels in Guild are very flexible and can be used to manage any type\nof operation associated with the model.\n\n\nCreate a model\n\n\nTo create a model, create a file named \nguild.yml\n in your model\nproject directory.\n\n\n\n\nTip\n\n\nIf you\nre starting from scratch, use the \ninit\n command\nto initialize a new project, including a sample training script.\n\n\n\n\nUsing a text editor, paste the following code sample into \nguild.yml\n:\n\n\n- model: my-model\n  description: My model\n  operations:\n    train:\n      cmd: train_my_model\n\n\n\n\n\n\n\n\nReplace the values for \nmodel\n and \ndescription\n to reflect the\n  attributes of your model.\n\n\n\n\n\n\nReplace \ntrain_my_model\n with the Python module used to train your\n  model.\n\n\n\n\n\n\nSave \nguild.yml\n.\n\n\n\n\n\n\nFor more information on defining models and operations, see \nGuile\nfile reference\n.\n\n\nFor a detailed step-by-step example of creating a Guild model, see\n\nDevelop a model from\nscratch\n.\n\n\nYou may experiment with training your model by running:\n\n\nguild train\n\n\n\n\nFor information on working with runs generated by operations, see\n\nRuns\n.\n\n\nInstall models\n\n\nGuild AI is a model packaging and distribution system that can be used\nto install models from the deep learning ecosystem.\n\n\nYou install models by installing Guild packages that contain the\nmodels.\n\n\nTo install a package, run:\n\n\nguild install PACKAGE\n\n\n\n\nYou can lookup packages by running:\n\n\nguild search TERM\n\n\n\n\nFor example, to install a package that contains ResNet models, search\nfor \nresnet\n by running:\n\n\nguild search resnet\n\n\n\n\nYou can also browse \nGuild AI models\n.\n\n\nAfter reviewing the list of available packages, if you decide to\ninstall \ntensorflow.reset\n, you can install it by running:\n\n\nguild install tensorflow.resnet\n\n\n\n\nFor more information, see \nInstall\npackages\n and the \ninstall\n\ncommand.\n\n\nGet model help\n\n\nTo view help for models defined in the current directory (i.e. models\ndefined in \n./guild.yml\n) run:\n\n\nguild help\n\n\n\n\nTo view help for models defined in another directory, run:\n\n\nguild help DIRECTORY\n\n\n\n\n\n\nNote\n\n\nDIRECTORY\n must contain a Guild file (i.e. \nguild.yml\n).\n\n\n\n\nTo view help for models defined in a package, run:\n\n\nguild help PACKAGE\n\n\n\n\nFor example, to view help for the models provided by\n\ntensorflow.resnet\n, run:\n\n\nguild help tensorflow.resnet\n\n\n\n\nFor more information, see the \nhelp\n command.\n\n\nList models\n\n\nList available models by running:\n\n\nguild models\n\n\n\n\nYou can filter the results using a term. For example, to list\navailable models that contain \ncnn\n, run:\n\n\nguild models cnn\n\n\n\n\nFor more information, see the \nmodels\n command.\n\n\nUninstall models\n\n\nYou can remove models defined in packages by uninstalling the\npackages.\n\n\nguild uninstall PACKAGE\n\n\n\n\nThe package that a model is associated with is displayed when you run\n\nguild models\n in the form \nPACKAGE/MODEL\n.\n\n\nFor more information, see \nUninstall\npackages\n and the\n\nuninstall\n command.", 
            "title": "Models"
        }, 
        {
            "location": "/docs/models/#models", 
            "text": "Create a model  Install models  Get model help  List models  Uninstall models   A model in Guild AI is a representation of a machine learning model. A\nmodel may be as simple, like a linear regression, or complex, like a\ndeep neural network.  Models in Guild are characterized by their support of operations , which are actions that can be performed\non the model. One of the most common model operations is  train ,\nwhich iteratively modifies model parameters to optimize the model s\npredictive or generative capability. Other common operations include evaluate ,  predict ,  deploy , and  generate .  Guild does not implement model operations. That task is the\nresponsibility of the model developer. Guild instead manages the work\nflow associated with running operations and tracking results.  Consider the following Guild command:  guild train mnist  When this command is run, Guild will look for a model named  mnist \nand then for an operation associated with that model named train . With this information, Guild will start a  run ,\nwhich is a Python session used to train the model. Guild will track\nsave run metadata and output so that you can access it later.  Guild looks for models in  Guild files , which are\nfiles named  guild.yml  that contain model definitions.  Here s what a  guild.yml  that defines an  mnist  model might look\nlike:  model: mnist\noperations:\n  train:\n    cmd: train_mnist  This file tells Guild that the model  mnist  has an operation  train \nthat is performed by running a Python module  train_mnist .  Here s what  train_mnist.py the training module source file \nmight look like:  import mnist_data\nimport mnist_model\n\ndef train():\n    data = mnist_data.load()\n    model = mnist_model.init()\n    model.train(data)\n\nif __name__ ==  __main__ :\n    train()  Models in Guild are very flexible and can be used to manage any type\nof operation associated with the model.", 
            "title": "Models"
        }, 
        {
            "location": "/docs/models/#create-a-model", 
            "text": "To create a model, create a file named  guild.yml  in your model\nproject directory.   Tip  If you re starting from scratch, use the  init  command\nto initialize a new project, including a sample training script.   Using a text editor, paste the following code sample into  guild.yml :  - model: my-model\n  description: My model\n  operations:\n    train:\n      cmd: train_my_model    Replace the values for  model  and  description  to reflect the\n  attributes of your model.    Replace  train_my_model  with the Python module used to train your\n  model.    Save  guild.yml .    For more information on defining models and operations, see  Guile\nfile reference .  For a detailed step-by-step example of creating a Guild model, see Develop a model from\nscratch .  You may experiment with training your model by running:  guild train  For information on working with runs generated by operations, see Runs .", 
            "title": "Create a model"
        }, 
        {
            "location": "/docs/models/#install-models", 
            "text": "Guild AI is a model packaging and distribution system that can be used\nto install models from the deep learning ecosystem.  You install models by installing Guild packages that contain the\nmodels.  To install a package, run:  guild install PACKAGE  You can lookup packages by running:  guild search TERM  For example, to install a package that contains ResNet models, search\nfor  resnet  by running:  guild search resnet  You can also browse  Guild AI models .  After reviewing the list of available packages, if you decide to\ninstall  tensorflow.reset , you can install it by running:  guild install tensorflow.resnet  For more information, see  Install\npackages  and the  install \ncommand.", 
            "title": "Install models"
        }, 
        {
            "location": "/docs/models/#get-model-help", 
            "text": "To view help for models defined in the current directory (i.e. models\ndefined in  ./guild.yml ) run:  guild help  To view help for models defined in another directory, run:  guild help DIRECTORY   Note  DIRECTORY  must contain a Guild file (i.e.  guild.yml ).   To view help for models defined in a package, run:  guild help PACKAGE  For example, to view help for the models provided by tensorflow.resnet , run:  guild help tensorflow.resnet  For more information, see the  help  command.", 
            "title": "Get model help"
        }, 
        {
            "location": "/docs/models/#list-models", 
            "text": "List available models by running:  guild models  You can filter the results using a term. For example, to list\navailable models that contain  cnn , run:  guild models cnn  For more information, see the  models  command.", 
            "title": "List models"
        }, 
        {
            "location": "/docs/models/#uninstall-models", 
            "text": "You can remove models defined in packages by uninstalling the\npackages.  guild uninstall PACKAGE  The package that a model is associated with is displayed when you run guild models  in the form  PACKAGE/MODEL .  For more information, see  Uninstall\npackages  and the uninstall  command.", 
            "title": "Uninstall models"
        }, 
        {
            "location": "/docs/operations/", 
            "text": "Operations\n\n\n\n\nRun an operation\n\n\nOperation aliases\n\n\n\n\n\n\nGet operation help\n\n\nList operations\n\n\nFlags\n\n\nRequired resources\n\n\nImplementing an operation\n\n\n\n\nAn operation is an action performed on a \nmodel\n. When run, an\noperation generates a \nrun\n, which is persistent record of the\noperation.\n\n\nExamples of model operations include:\n\n\n\n\ntrain\n\n\nTrain a model\n\n\nevaluate\n\n\nEvaluate a trained model\n\n\nfinetune\n\n\nFine tune a pretrained model\n\n\nprepare\n\n\nPrepare a dataset for use in training\n\n\ngenerate\n\n\nUse a model to generate content\n\n\n\n\nWhile these operations are commonly used, model developers are free to\ndefine different operations as needed. For example, if a model\nsupports compression (e.g. by using quantization), it might define a\n\ncompress\n operation.\n\n\nRun an operation\n\n\nTo run an operation, use the \nrun\n command:\n\n\nguild run OPERATION [ARG...]\n\n\n\n\nOPERATION\n must include the complete operation name and may also\ninclude package and model information to disambiguate the operation.\n\n\nTo specify the model along with the operation name, use\n\nMODEL:OPERATION\n. For example, to run the \nprepare\n operation on a\nmodel named \niris-dataset\n, you would run:\n\n\nguild run iris-dataset:prepare\n\n\n\n\nFor more information, see the \nrun\n command.\n\n\nOperation aliases\n\n\nSome operations are so common that Guild provides\n\naliases\n for them. Aliases let you run commands\nthis way:\n\n\nguild OPERATION_ALIAS [MODEL] [ARG...]\n\n\n\n\nThe following operation aliases are supported:\n\n\n\n\ntrain\n\n\n\n\nFor example, to run the \ntrain\n operation on a model, use:\n\n\nguild train MODEL\n\n\n\n\nThis command is equivalent to running:\n\n\nguild run MODEL:train\n\n\n\n\nGet operation help\n\n\nOperation help is displayed for model help when run \nguild\nhelp\n. See \nGet model help\n and the\n\nhelp\n command for more information on general model help.\n\n\nYou can get help for a specific operation using the \n--help-op\n\noption with the \nrun\n command (or an operation alias).\n\n\nOperation help includes the list of flags you can specify for an\noperation. This is useful when you have started to type a run command\nand want help on available or required flags.\n\n\nFor example, to view operation help for the \ntrain\n operation, run:\n\n\nguild train --help-op\n\n\n\n\nList operations\n\n\nTo list available operations, run:\n\n\nguild operations\n\n\n\n\nFor more information, see the \noperations\n command.\n\n\nFlags\n\n\nFlags are operation parameters and are used to specify the behavior of\nan operation for a run.\n\n\nFlags are defined by the model operation. For more information on flag\ndefinitions, see \nFlags\n in the\nGuild file reference.\n\n\nFlag values are specified using \nNAME=VALUE\n arguments to the\n\nrun\n command (or operation alias).\n\n\nFor example, consider the operation help for\n\nkeras.mnist/mnist-mlp:train\n, which we can show by running:\n\n\nguild run mlp:train --help-op\n\n\n\n\nUsage: guild run [OPTIONS] mnist-mlp:train [FLAG]...\n\nTrain the MLP\n\nUse 'guild run --help' for a list of options.\n\nFlags:\n  batch-size  Training batch size (default is 128)\n  epochs      Number of epochs to train (default is 20)\n\n\n\n\nAs described in the operation help, \nmnist-mlp:train\n supports two\nflags: \nbatch-size\n and \nepochs\n. If we wanted to train the model over\n\n10\n epochs using a batch size of \n64\n, we would use:\n\n\nguild train batch-size=64 epochs=10\n\n\n\n\nRequired resources\n\n\nOperations may require \nresources\n. Required resources\nare listed in the operation\ns \nrequires\n attribute.\n\n\nWhen Guild starts an operation, it first resolves each required\nresource. If a resource cannot be resolved, the operation fails with\nan error message.\n\n\nResources are resolved by acquiring them (e.g. download a file from\nthe Internet), verifying them, and finally creating links to resources\nfiles in the run directory. In this way, operations can easily express\n\nI need these files to run\n and ensure that the correct files are\navailable for each run.\n\n\nIn most cases resources are automatically resolved, but in some cases\nan operation may require that the user specify a resource. Resources\ncan be specified the same way flag values are specified\nusing\n\nNAME=VALUE\n. In the case of a resource, \nVALUE\n is the name of the\nrequired resource.\n\n\nRequired resources are described in operation help, if applicable.\n\n\nImplementing an operation\n\n\nOperations are implemented in Python modules. If \nmain\n is specified,\nthe module must execute when loaded, and should use this pattern:\n\n\ndef main():\n    \nOperation code here.\n\n\nif __name__ == \n__main__\n:\n    main()\n\n\n\n\nOperations are executed in the context of the current run directory.\n\n\n\n\n\nOperations have access to a number of environment variables.\n\n\n\n\nCMD_DIR\n\n\nPath where the operation was run. This is the original working\n  directory that was changed to \nRUN_DIR\n for the operation.\n\n\nGUILD_HOME\n\n\nGuild install location.\n\n\nGUILD_OP\n\n\nName of the operation including the model.\n\n\nGUILD_PLUGINS\n\n\nComma separated list of active Guild plugins.\n\n\nLOG_LEVEL\n\n\nPython log level active for the run.\n\n\nMODEL_DIR\n\n\nThe directory containing the operation model definition. This is\n  where the Guild file is located and can be used to reference\n  relative files.\n\n\nRUN_DIR\n\n\nActive run directory path. This is the working directory during an\n  operation. See \nCMD_DIR\n for the original working directory -\n  i.e. where the operation was run from.\n\n\nRUN_ID\n\n\nActive run ID.", 
            "title": "Operations"
        }, 
        {
            "location": "/docs/operations/#operations", 
            "text": "Run an operation  Operation aliases    Get operation help  List operations  Flags  Required resources  Implementing an operation   An operation is an action performed on a  model . When run, an\noperation generates a  run , which is persistent record of the\noperation.  Examples of model operations include:   train  Train a model  evaluate  Evaluate a trained model  finetune  Fine tune a pretrained model  prepare  Prepare a dataset for use in training  generate  Use a model to generate content   While these operations are commonly used, model developers are free to\ndefine different operations as needed. For example, if a model\nsupports compression (e.g. by using quantization), it might define a compress  operation.", 
            "title": "Operations"
        }, 
        {
            "location": "/docs/operations/#run-an-operation", 
            "text": "To run an operation, use the  run  command:  guild run OPERATION [ARG...]  OPERATION  must include the complete operation name and may also\ninclude package and model information to disambiguate the operation.  To specify the model along with the operation name, use MODEL:OPERATION . For example, to run the  prepare  operation on a\nmodel named  iris-dataset , you would run:  guild run iris-dataset:prepare  For more information, see the  run  command.", 
            "title": "Run an operation"
        }, 
        {
            "location": "/docs/operations/#operation-aliases", 
            "text": "Some operations are so common that Guild provides aliases  for them. Aliases let you run commands\nthis way:  guild OPERATION_ALIAS [MODEL] [ARG...]  The following operation aliases are supported:   train   For example, to run the  train  operation on a model, use:  guild train MODEL  This command is equivalent to running:  guild run MODEL:train", 
            "title": "Operation aliases"
        }, 
        {
            "location": "/docs/operations/#get-operation-help", 
            "text": "Operation help is displayed for model help when run  guild\nhelp . See  Get model help  and the help  command for more information on general model help.  You can get help for a specific operation using the  --help-op \noption with the  run  command (or an operation alias).  Operation help includes the list of flags you can specify for an\noperation. This is useful when you have started to type a run command\nand want help on available or required flags.  For example, to view operation help for the  train  operation, run:  guild train --help-op", 
            "title": "Get operation help"
        }, 
        {
            "location": "/docs/operations/#list-operations", 
            "text": "To list available operations, run:  guild operations  For more information, see the  operations  command.", 
            "title": "List operations"
        }, 
        {
            "location": "/docs/operations/#flags", 
            "text": "Flags are operation parameters and are used to specify the behavior of\nan operation for a run.  Flags are defined by the model operation. For more information on flag\ndefinitions, see  Flags  in the\nGuild file reference.  Flag values are specified using  NAME=VALUE  arguments to the run  command (or operation alias).  For example, consider the operation help for keras.mnist/mnist-mlp:train , which we can show by running:  guild run mlp:train --help-op  Usage: guild run [OPTIONS] mnist-mlp:train [FLAG]...\n\nTrain the MLP\n\nUse 'guild run --help' for a list of options.\n\nFlags:\n  batch-size  Training batch size (default is 128)\n  epochs      Number of epochs to train (default is 20)  As described in the operation help,  mnist-mlp:train  supports two\nflags:  batch-size  and  epochs . If we wanted to train the model over 10  epochs using a batch size of  64 , we would use:  guild train batch-size=64 epochs=10", 
            "title": "Flags"
        }, 
        {
            "location": "/docs/operations/#required-resources", 
            "text": "Operations may require  resources . Required resources\nare listed in the operation s  requires  attribute.  When Guild starts an operation, it first resolves each required\nresource. If a resource cannot be resolved, the operation fails with\nan error message.  Resources are resolved by acquiring them (e.g. download a file from\nthe Internet), verifying them, and finally creating links to resources\nfiles in the run directory. In this way, operations can easily express I need these files to run  and ensure that the correct files are\navailable for each run.  In most cases resources are automatically resolved, but in some cases\nan operation may require that the user specify a resource. Resources\ncan be specified the same way flag values are specified using NAME=VALUE . In the case of a resource,  VALUE  is the name of the\nrequired resource.  Required resources are described in operation help, if applicable.", 
            "title": "Required resources"
        }, 
        {
            "location": "/docs/operations/#implementing-an-operation", 
            "text": "Operations are implemented in Python modules. If  main  is specified,\nthe module must execute when loaded, and should use this pattern:  def main():\n     Operation code here. \n\nif __name__ ==  __main__ :\n    main()  Operations are executed in the context of the current run directory.   Operations have access to a number of environment variables.   CMD_DIR  Path where the operation was run. This is the original working\n  directory that was changed to  RUN_DIR  for the operation.  GUILD_HOME  Guild install location.  GUILD_OP  Name of the operation including the model.  GUILD_PLUGINS  Comma separated list of active Guild plugins.  LOG_LEVEL  Python log level active for the run.  MODEL_DIR  The directory containing the operation model definition. This is\n  where the Guild file is located and can be used to reference\n  relative files.  RUN_DIR  Active run directory path. This is the working directory during an\n  operation. See  CMD_DIR  for the original working directory -\n  i.e. where the operation was run from.  RUN_ID  Active run ID.", 
            "title": "Implementing an operation"
        }, 
        {
            "location": "/docs/runs/", 
            "text": "Runs\n\n\n\n\nConcepts\n\n\nRun directory\n\n\nLimiting runs\n\n\nRun scope\n\n\nRun filtering\n\n\n\n\n\n\nSelecting runs\n\n\nExamples\n\n\n\n\n\n\n\n\n\n\nStart a run\n\n\nOperation aliases\n\n\n\n\n\n\nFlag values\n\n\nList runs\n\n\nGet run information\n\n\nCompare runs\n\n\nLabel runs\n\n\nDelete runs\n\n\nFrequently used delete commands\n\n\n\n\n\n\nRestore deleted runs\n\n\nPurge deleted runs\n\n\n\n\nRuns are generated in Guild AI by running an \noperation\n.\n\n\nWhen you train a model, you generate a \nrun\n, which contains the\ntrained model as well as training logs and other artifacts associated\nwith the operation.\n\n\nSimilarly, when you fine tune a model, you generate a run. When you\ntest a model, you generate a run. In fact, any operation that you run\ngenerates a distinct run. This is how Guild manages your work.\n\n\nHere is a common work flow:\n\n\n\n\nFind and install a model\n\n\nRun an operation on that model (e.g. \ntrain\n)\n\n\nMonitor the progress of the operation (e.g. \nview\n)\n\n\nRun another operation with different hyper-parameters (flags)\n\n\nCompare runs\n\n\nDelete runs that you\nre no longer interested in\n\n\nSelect successful runs for deployment or use in other operations\n\n\n\n\nThe work centers on \nruns\ncreating, comparing, and selecting.\n\n\nConcepts\n\n\nAs you work with runs in Guild it\ns important to understand some core\nconcepts. If you\nd prefer to skip this conceptual material, jump to\n\nStart a run\n below.\n\n\nRun directory\n\n\nA \nrun directory\n is a file system directory (or folder) that contains\nartifacts associated with a run. Guild creates a unique run directory\nfor every run. This directory contains a variety of important data:\n\n\n\n\nRun metadata\n\n\nRun sources such as datasets\n\n\nRun output such as event logs and saved models\n\n\n\n\nRun directories are located in \nGUILD_HOME/runs\n. For more information\nsee \nGuild home\n.\n\n\nRun related operations interact with run directories in various ways:\n\n\n\n\nguild run\n creates a new run directory\n\n\nguild runs info\n prints information read from a run directory\n\n\nguild runs list\n enumerates run directories\n\n\nguild runs delete\n deletes run directories\n\n\n\n\nLimiting runs\n\n\nOver time you\nll generate a large number of runs. This list can become\nunwieldy, especially when you\nre interested in a small subset\n\ne.g. runs associated with a particular model you\nre working with. For\nthis reason, Guild provides two ways of limiting the runs that apply\nto run related commands:\n\n\n\n\nLimit to runs associated with a model defined in the current\n  directory\n\n\nLimit to runs that match a filter\n\n\n\n\nRun scope\n\n\nThe first limit is known as \nrun scope\n. Scope can be either \nlocal\n\nor \nglobal\n. By default, scope is local when the current directory\ncontains a \nmodel definition\n, otherwise scope is\nglobal. Local scope limits runs to those associated with models\ndefined in the current directory. Global scope displays all runs.\n\n\nGlobal scope can be applied using the \n--all\n (or \n-a\n) option.\n\n\nRun scope is applied based on the directory that Guild commands are\nrun in. Consider the following directory structure:\n\n\n\n\n\n\nHome\nDoes not contain a model definition \n global scope applies\n\n\nModels\n \n\n \nmnist \nContains a model definition \n local scope applies\n\n  \n\n  \nMODELS \nModel definition\n\n  \n\n \n\n \n\n\n\n\n\n\n\n\n\nCommands run the from \n/Home\n have \nglobal\n run scope because \n/Home\n\ndoesn\nt contain a model definition. Commands run from \n/Models/mnist\n\nhowever have \nlocal\n scope because that directory contains a model\ndefinition (\n/Models/mnist/MODELS\n).\n\n\nRun scope defaults to \nlocal\n when a model definition is exists\nbecause Guild assumes that the user is working on models defined at\nthat location and is not interested in other runs, at least by\ndefault. This follows the pattern of command line tools such as \ngit\n\nthat apply operations locally when they find a project, repository,\netc. in the current directory.\n\n\nWhen a command is run in local scope, Guild prints a message to\nindicate that results are limited:\n\n\nLimiting runs to the current directory (use --all to include all)\n\n\n\nRun filtering\n\n\nThe other limit is \nrun filtering\n. Filters are applied with command\nline options that specify run attributes, which may include:\n\n\n\n\nOperation\n\n\nRun status\n\n\nDeleted status\n\n\n\n\nRun filtering is applied \nafter\n run scope (see above).\n\n\nFor example, to view runs that are associated with the \ntrain\n\noperation, use the \n--op\n (or \n-o\n) option:\n\n\nguild runs --op train\n\n\n\n\nIf the command is in local scope, Guild will limit runs to those\nassociated with models in the current directory otherwise it will use\nall runs. It will then filter those runs, limiting the result to those\nassociated with operations containing the string \ntrain\n.\n\n\nSelecting runs\n\n\nSome run related commands let you select one or more runs:\n\n\n\n\nruns delete\nruns purge\nruns restore\n\n\n\n\nFor these commands, runs can be specified in various ways:\n\n\n\n\nIndex as returned by \nguild runs\n or \nguild runs list\n\n\nRun ID (full or partial if unique)\n\n\n\n\nAdditionally, a range may be specified using run indexes in the form:\n\n\n[START]:[STOP]\n\n\n\nSTOP\n and \nSTART\n are inclusive\nruns are selected beginning with\nthe \nSTOP\n index up to and including those with the \nSTART\n index.\n\n\nBoth \nSTOP\n and \nSTART\n are optional. If \nSTART\n is omitted it is\nassumed to be \n0\n (i.e. the first run in the list). If \nSTOP\n is\nomitted it is assumed to be the index of the last run.\n\n\n\n\nImportant\n\n\nRun indexes are relative to the list of runs returned by \nguild\nruns\n or \nguild runs list\n for a given scope and filter (see\n\nLimiting runs\n above). The run associated with index\n\n0\n for one listing may not be the same run for another\nlisting. Always verify the selected runs before proceeding with a\ncommand.\n\n\nWhen in doubt, use a run ID to select a run.\n\n\n\n\nExamples\n\n\nConsider this output from \nguild runs\n:\n\n\nLimiting runs to the current directory (use --all to include all)\n[0:9734f85e]   ./slim-resnet-101:train        2017-12-14 07:56:32  terminated\n[1:d8cde0fc]   ./slim-resnet-50:export        2017-12-13 13:14:31  completed\n[2:0df943ac]   ./slim-resnet-50:predict       2017-12-06 11:51:15  completed\n[3:e150e44a]   ./slim-resnet-50:predict       2017-12-06 11:50:00  completed\n\n\n\n\n\n\nNote\n\n\nThe \nrun scope\n in the above command is \nlocal\n. If\nthe user had run \nguild runs --all\n the scope would be \nglobal\n\nthe list and run indexes would likely be different.\n\n\n\n\nBelow are various operations with run selectors applied to this\nlist.\n\n\n\n\nguild runs rm 0\n\n\nDelete run \n9734f85e\n (you can always use index \n0\n to select the\n  most recently started run in the list)\n\n\nguild runs rm 1:2\n\n\nDelete runs \nd8cde0fc\n and \n0df943ac\n\n\nguild runs rm :\n\n\nDelete all runs\n\n\nguild runs rm 0df943ac e150e44a\n\n\nDelete runs \n0df943ac\n and \ne150e44a\n\n\n\n\n\n\nNote\n\n\nThe following assumptions must hold for the above examples that use\nrun indexes:\n\n\n\n\n\n\nCommands must be executed in the same directory as the command\n  that generated the list and without scope modifiers or filters\n\n\n\n\n\n\nThe runs themselves must not change\ni.e. runs cannot be deleted\n  or started\n\n\n\n\n\n\n\n\nStart a run\n\n\nTo start a run, use the \nrun\n command. The basic format of a\n\nrun\n command looks like this:\n\n\nguild run OPERATION\nguild run MODEL:OPERATION\nguild run PACKAGE/MODEL:OPERATION\n\n\n\n\nYou can list available operations using the \noperations\n\ncommand.\n\n\nIn general, you can omit information about an operation name as long\nas Guild can uniquely identify the operation.\n\n\nFor example, if the output of \noperations\n looks like this:\n\n\niris/iris-cnn:train\niris/iris-cnn:finetune\niris/iris-cnn:test\n\n\n\n\nYou can start the \nfinetune\n operation by running:\n\n\nguild run finetune\n\n\n\n\nYou can always provide the model or package. For example, this form\nwill also start \nfinetune\n:\n\n\nguild run iris-cnn:finetune\n\n\n\n\nYou use part of the operation specification as long as Guild can\nuniquely identify the operation. For example, you can run the \ntest\n\non \niris-cnn\n using:\n\n\nguild run cnn:train\n\n\n\n\nOperation aliases\n\n\nSome operations are so common that Guild provides \nalias\n\ncommands. Aliases currently include:\n\n\n\n\ntrain\n\n\n\n\nAliases are used to start operation using these forms:\n\n\nguild ALIAS_CMD\nguild ALIAS_CMD MODEL\nguild ALIAS_CMD PACKAGE/MODEL\n\n\n\n\nThe \ntrain\n alias is used to run the \ntrain\n operation. In the example\nabove, the following commands can be used to train the iris model:\n\n\nguild train\nguild train iris-cnn\nguild train cnn\n\n\n\n\nFlag values\n\n\nSpecify operation flag values as \nNAME=VALUE\n arguments to \nrun\n.\n\n\nTo get help on available and required flags for an operation, run:\n\n\nguild run OPERATION --help-op\n\n\n\n\nYou can also view help for models defined in the current directory by\nrunning:\n\n\nguild help\n\n\n\n\nTo get help for a packaged model, run:\n\n\nguild help PACKAGE\n\n\n\n\nIf you omit a required flag, the \nrun\n command (or applicable alias)\nwill exit with an error message.\n\n\nList runs\n\n\nTo list Guild runs, use the \nruns\n or \nruns list\n\ncommand.\n\n\nguild runs\n is shorthand for \nguild runs list\n.\n\n\nWhen listing runs, be aware of \nrun scope\n and \nrun\nfiltering\nthese effect the runs that are\ndisplayed.\n\n\n\n\nguild runs\n\n\nList all runs with the run scope. If the current directory contain a\n  \nmodel definition\n the list is limited to runs\n  associated with the locally defined models, otherwise the list will\n  contain all runs.\n\n\nfoo\n\n\nAnother thing yo.\n\n\n\n\nThe command:\n\n\nguild runs\n\n\n\n\nwill display different lists depending on the directory it\ns run\nin. If the directory contains a model definition, runs will be limited\nto those associated with the locally defined models. If the directory\ndoes not contain a model definition, all runs are displayed.\n\n\nGet run information\n\n\nUse \nruns info\n to show information about a run.\n\n\nBy default, Guild shows information about the latest run:\n\n\nguild runs info\n\n\n\n\nYou can select a specific run by providing a run ID or index.\n\n\nRun indexes are displayed in run lists (see \nList runs\n\nabove).\n\n\nCompare runs\n\n\nCompare runs by running:\n\n\nguild compare\n\n\n\n\nGuild Compare is spreadsheet-like application that displays runs,\ntheir status, and metrics such as validation accuracy and training\nloss.\n\n\nTo display compare results as a table, use:\n\n\nguild compare --table\n\n\n\n\nTo display compare results in CSV format (e.g. for use in Excel), use:\n\n\nguild compare --csv\n\n\n\n\nFor more help, see the \ncompare\n command.\n\n\nLabel runs\n\n\nRuns can have \nlabels\n, which provide additional information about the\nrun. A label can used for filtering in the \nruns list\n\ncommand.\n\n\nUse \nruns label\n to set or clear a label for a run.\n\n\nUse \nguild runs list LABEL\n to list runs with the specified label.\n\n\nDelete runs\n\n\nDelete runs using \nguild runs delete\n or \nguild runs rm\n. See\n\nruns delete\n for command details.\n\n\nGuild will display the list of runs to be deleted and ask you to\nconfirm the operation. You must type \ny\n and then press \nEnter\n to\nconfirm.\n\n\nDeleted runs can be restored using the \nruns\nrestore\n command. Refer to \nRestoring deleted\nruns\n below for details.\n\n\nFrequently used delete commands\n\n\nTo delete all failed runs, use:\n\n\nguild runs rm -E\n\n\n\n\nTo permanently delete all failed runs, use:\n\n\nguild runs rm -Ep\n\n\n\n\n\n\nImportant\n\n\nPermanently deleted runs cannot be recovered!\n\n\n\n\nTo delete all failed and terminated runs, use:\n\n\nguild runs -ET\n\n\n\n\nRestore deleted runs\n\n\nDeleted runs can be recovered by running:\n\n\nguild runs restore [RUN...]\n\n\n\n\nFor more help, see the \nruns restore\n command.\n\n\nPurge deleted runs\n\n\nThe disk space used by deleted runs can be recovered by permanently\ndeleting them using \nruns purge\n.\n\n\n\n\nTip\n\n\nYou can show the list deleted runs using \nguild runs --deleted\n.\n\n\n\n\nFor example, to permanently delete all deleted runs, use:\n\n\nguild runs purge\n\n\n\n\nGuild will prompt you before proceeding.\n\n\n\n\nImportant\n\n\nPurging deleted runs will permanently delete them! Be certain that\nyou don\nt need a run before permanently deleting it.\n\n\n\n\nFor more help, see the \nruns purge\n command.", 
            "title": "Runs"
        }, 
        {
            "location": "/docs/runs/#runs", 
            "text": "Concepts  Run directory  Limiting runs  Run scope  Run filtering    Selecting runs  Examples      Start a run  Operation aliases    Flag values  List runs  Get run information  Compare runs  Label runs  Delete runs  Frequently used delete commands    Restore deleted runs  Purge deleted runs   Runs are generated in Guild AI by running an  operation .  When you train a model, you generate a  run , which contains the\ntrained model as well as training logs and other artifacts associated\nwith the operation.  Similarly, when you fine tune a model, you generate a run. When you\ntest a model, you generate a run. In fact, any operation that you run\ngenerates a distinct run. This is how Guild manages your work.  Here is a common work flow:   Find and install a model  Run an operation on that model (e.g.  train )  Monitor the progress of the operation (e.g.  view )  Run another operation with different hyper-parameters (flags)  Compare runs  Delete runs that you re no longer interested in  Select successful runs for deployment or use in other operations   The work centers on  runs creating, comparing, and selecting.", 
            "title": "Runs"
        }, 
        {
            "location": "/docs/runs/#concepts", 
            "text": "As you work with runs in Guild it s important to understand some core\nconcepts. If you d prefer to skip this conceptual material, jump to Start a run  below.", 
            "title": "Concepts"
        }, 
        {
            "location": "/docs/runs/#run-directory", 
            "text": "A  run directory  is a file system directory (or folder) that contains\nartifacts associated with a run. Guild creates a unique run directory\nfor every run. This directory contains a variety of important data:   Run metadata  Run sources such as datasets  Run output such as event logs and saved models   Run directories are located in  GUILD_HOME/runs . For more information\nsee  Guild home .  Run related operations interact with run directories in various ways:   guild run  creates a new run directory  guild runs info  prints information read from a run directory  guild runs list  enumerates run directories  guild runs delete  deletes run directories", 
            "title": "Run directory"
        }, 
        {
            "location": "/docs/runs/#limiting-runs", 
            "text": "Over time you ll generate a large number of runs. This list can become\nunwieldy, especially when you re interested in a small subset \ne.g. runs associated with a particular model you re working with. For\nthis reason, Guild provides two ways of limiting the runs that apply\nto run related commands:   Limit to runs associated with a model defined in the current\n  directory  Limit to runs that match a filter", 
            "title": "Limiting runs"
        }, 
        {
            "location": "/docs/runs/#run-scope", 
            "text": "The first limit is known as  run scope . Scope can be either  local \nor  global . By default, scope is local when the current directory\ncontains a  model definition , otherwise scope is\nglobal. Local scope limits runs to those associated with models\ndefined in the current directory. Global scope displays all runs.  Global scope can be applied using the  --all  (or  -a ) option.  Run scope is applied based on the directory that Guild commands are\nrun in. Consider the following directory structure:    Home Does not contain a model definition   global scope applies  Models\n  \n  mnist  Contains a model definition   local scope applies \n   \n   MODELS  Model definition \n   \n  \n      Commands run the from  /Home  have  global  run scope because  /Home \ndoesn t contain a model definition. Commands run from  /Models/mnist \nhowever have  local  scope because that directory contains a model\ndefinition ( /Models/mnist/MODELS ).  Run scope defaults to  local  when a model definition is exists\nbecause Guild assumes that the user is working on models defined at\nthat location and is not interested in other runs, at least by\ndefault. This follows the pattern of command line tools such as  git \nthat apply operations locally when they find a project, repository,\netc. in the current directory.  When a command is run in local scope, Guild prints a message to\nindicate that results are limited:  Limiting runs to the current directory (use --all to include all)", 
            "title": "Run scope"
        }, 
        {
            "location": "/docs/runs/#run-filtering", 
            "text": "The other limit is  run filtering . Filters are applied with command\nline options that specify run attributes, which may include:   Operation  Run status  Deleted status   Run filtering is applied  after  run scope (see above).  For example, to view runs that are associated with the  train \noperation, use the  --op  (or  -o ) option:  guild runs --op train  If the command is in local scope, Guild will limit runs to those\nassociated with models in the current directory otherwise it will use\nall runs. It will then filter those runs, limiting the result to those\nassociated with operations containing the string  train .", 
            "title": "Run filtering"
        }, 
        {
            "location": "/docs/runs/#selecting-runs", 
            "text": "Some run related commands let you select one or more runs:   runs delete runs purge runs restore   For these commands, runs can be specified in various ways:   Index as returned by  guild runs  or  guild runs list  Run ID (full or partial if unique)   Additionally, a range may be specified using run indexes in the form:  [START]:[STOP]  STOP  and  START  are inclusive runs are selected beginning with\nthe  STOP  index up to and including those with the  START  index.  Both  STOP  and  START  are optional. If  START  is omitted it is\nassumed to be  0  (i.e. the first run in the list). If  STOP  is\nomitted it is assumed to be the index of the last run.   Important  Run indexes are relative to the list of runs returned by  guild\nruns  or  guild runs list  for a given scope and filter (see Limiting runs  above). The run associated with index 0  for one listing may not be the same run for another\nlisting. Always verify the selected runs before proceeding with a\ncommand.  When in doubt, use a run ID to select a run.", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/runs/#examples", 
            "text": "Consider this output from  guild runs :  Limiting runs to the current directory (use --all to include all)\n[0:9734f85e]   ./slim-resnet-101:train        2017-12-14 07:56:32  terminated\n[1:d8cde0fc]   ./slim-resnet-50:export        2017-12-13 13:14:31  completed\n[2:0df943ac]   ./slim-resnet-50:predict       2017-12-06 11:51:15  completed\n[3:e150e44a]   ./slim-resnet-50:predict       2017-12-06 11:50:00  completed   Note  The  run scope  in the above command is  local . If\nthe user had run  guild runs --all  the scope would be  global \nthe list and run indexes would likely be different.   Below are various operations with run selectors applied to this\nlist.   guild runs rm 0  Delete run  9734f85e  (you can always use index  0  to select the\n  most recently started run in the list)  guild runs rm 1:2  Delete runs  d8cde0fc  and  0df943ac  guild runs rm :  Delete all runs  guild runs rm 0df943ac e150e44a  Delete runs  0df943ac  and  e150e44a    Note  The following assumptions must hold for the above examples that use\nrun indexes:    Commands must be executed in the same directory as the command\n  that generated the list and without scope modifiers or filters    The runs themselves must not change i.e. runs cannot be deleted\n  or started", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/runs/#start-a-run", 
            "text": "To start a run, use the  run  command. The basic format of a run  command looks like this:  guild run OPERATION\nguild run MODEL:OPERATION\nguild run PACKAGE/MODEL:OPERATION  You can list available operations using the  operations \ncommand.  In general, you can omit information about an operation name as long\nas Guild can uniquely identify the operation.  For example, if the output of  operations  looks like this:  iris/iris-cnn:train\niris/iris-cnn:finetune\niris/iris-cnn:test  You can start the  finetune  operation by running:  guild run finetune  You can always provide the model or package. For example, this form\nwill also start  finetune :  guild run iris-cnn:finetune  You use part of the operation specification as long as Guild can\nuniquely identify the operation. For example, you can run the  test \non  iris-cnn  using:  guild run cnn:train", 
            "title": "Start a run"
        }, 
        {
            "location": "/docs/runs/#operation-aliases", 
            "text": "Some operations are so common that Guild provides  alias \ncommands. Aliases currently include:   train   Aliases are used to start operation using these forms:  guild ALIAS_CMD\nguild ALIAS_CMD MODEL\nguild ALIAS_CMD PACKAGE/MODEL  The  train  alias is used to run the  train  operation. In the example\nabove, the following commands can be used to train the iris model:  guild train\nguild train iris-cnn\nguild train cnn", 
            "title": "Operation aliases"
        }, 
        {
            "location": "/docs/runs/#flag-values", 
            "text": "Specify operation flag values as  NAME=VALUE  arguments to  run .  To get help on available and required flags for an operation, run:  guild run OPERATION --help-op  You can also view help for models defined in the current directory by\nrunning:  guild help  To get help for a packaged model, run:  guild help PACKAGE  If you omit a required flag, the  run  command (or applicable alias)\nwill exit with an error message.", 
            "title": "Flag values"
        }, 
        {
            "location": "/docs/runs/#list-runs", 
            "text": "To list Guild runs, use the  runs  or  runs list \ncommand.  guild runs  is shorthand for  guild runs list .  When listing runs, be aware of  run scope  and  run\nfiltering these effect the runs that are\ndisplayed.   guild runs  List all runs with the run scope. If the current directory contain a\n   model definition  the list is limited to runs\n  associated with the locally defined models, otherwise the list will\n  contain all runs.  foo  Another thing yo.   The command:  guild runs  will display different lists depending on the directory it s run\nin. If the directory contains a model definition, runs will be limited\nto those associated with the locally defined models. If the directory\ndoes not contain a model definition, all runs are displayed.", 
            "title": "List runs"
        }, 
        {
            "location": "/docs/runs/#get-run-information", 
            "text": "Use  runs info  to show information about a run.  By default, Guild shows information about the latest run:  guild runs info  You can select a specific run by providing a run ID or index.  Run indexes are displayed in run lists (see  List runs \nabove).", 
            "title": "Get run information"
        }, 
        {
            "location": "/docs/runs/#compare-runs", 
            "text": "Compare runs by running:  guild compare  Guild Compare is spreadsheet-like application that displays runs,\ntheir status, and metrics such as validation accuracy and training\nloss.  To display compare results as a table, use:  guild compare --table  To display compare results in CSV format (e.g. for use in Excel), use:  guild compare --csv  For more help, see the  compare  command.", 
            "title": "Compare runs"
        }, 
        {
            "location": "/docs/runs/#label-runs", 
            "text": "Runs can have  labels , which provide additional information about the\nrun. A label can used for filtering in the  runs list \ncommand.  Use  runs label  to set or clear a label for a run.  Use  guild runs list LABEL  to list runs with the specified label.", 
            "title": "Label runs"
        }, 
        {
            "location": "/docs/runs/#delete-runs", 
            "text": "Delete runs using  guild runs delete  or  guild runs rm . See runs delete  for command details.  Guild will display the list of runs to be deleted and ask you to\nconfirm the operation. You must type  y  and then press  Enter  to\nconfirm.  Deleted runs can be restored using the  runs\nrestore  command. Refer to  Restoring deleted\nruns  below for details.", 
            "title": "Delete runs"
        }, 
        {
            "location": "/docs/runs/#frequently-used-delete-commands", 
            "text": "To delete all failed runs, use:  guild runs rm -E  To permanently delete all failed runs, use:  guild runs rm -Ep   Important  Permanently deleted runs cannot be recovered!   To delete all failed and terminated runs, use:  guild runs -ET", 
            "title": "Frequently used delete commands"
        }, 
        {
            "location": "/docs/runs/#restore-deleted-runs", 
            "text": "Deleted runs can be recovered by running:  guild runs restore [RUN...]  For more help, see the  runs restore  command.", 
            "title": "Restore deleted runs"
        }, 
        {
            "location": "/docs/runs/#purge-deleted-runs", 
            "text": "The disk space used by deleted runs can be recovered by permanently\ndeleting them using  runs purge .   Tip  You can show the list deleted runs using  guild runs --deleted .   For example, to permanently delete all deleted runs, use:  guild runs purge  Guild will prompt you before proceeding.   Important  Purging deleted runs will permanently delete them! Be certain that\nyou don t need a run before permanently deleting it.   For more help, see the  runs purge  command.", 
            "title": "Purge deleted runs"
        }, 
        {
            "location": "/docs/resources/", 
            "text": "Resources\n\n\n\n\nResource sources\n\n\nResolving resources\n\n\nUnpacking sources\n\n\nSelecting source files\n\n\nOperation output\n\n\n\n\nA resource is named set of files that are used by model\n\noperations\n.\n\n\nResources may be defined at two levels:\n\n\n\n\nModel resource\n\n\nPackage resource\n\n\n\n\nModel resources are defined by a model. Here\ns an example:\n\n\n# MODEL\nname: simple-model\noperations:\n  train: train\n  requires: data\nresources:\n  data: data.csv\n\n\n\n\nResource sources\n\n\nResources are comprised of one or more \nsources\n. A source may be a\nstring or an object.\n\n\nA source string is equivalent to a source object with the value used\nfor the \nfile\n attribute (see below).\n\n\nA source object may define these attributes:\n\n\n\n\nurl\n\n\nSource is located on a remote server and is accessible via a\n  URL. The protocols \nhttp\n and \nhttps\n are supported. \nurl\n cannot be\n  used with either \nfile\n or \noperation\nthey are mutually\n  exclusive.\n\n\nfile\n\n\nSource is a file or directory located relative to the model or\n  package file. \nfile\n cannot be used with \nurl\n or \noperation\n\n  they are mutually exclusive.\n\n\noperation\n\n\nSource is a file generated by a model operation. Operations must be\n  specified as \n[[PACKAGE/]MODEL:]OPERATION\n. Multiple operations may\n  be specified by separating them with a comma. For more information\n  see \nOperation output\n below. \noperation\n cannot\n  be used with \nurl\n or \nfile\nthey are mutually exclusive.\n\n\nselect\n\n\nA regular expression used to select files from a local directory,\n  archive, or a run directory if the source is an operation. For more\n  information see \nSelecting source files\n\n  below. \nselect\n is required if \noperation\n is used.\n\n\nsha256\n\n\nA \nSHA-256\n hash of the\n  resource source. If specified, the source SHA-256 hash must match\n  this value for the resource to resolve.\n\n\nunpack\n\n\nA boolean flag (\ntrue\n or \nfalse\n) indicating whether or not to\n  unpack the source. If unspecified, sources are unpacked if they are\n  archives. For more information see \nUnpacking\n  sources\n below.\n\n\n\n\nThe attributes \nurl\n, \nfile\n, and \noperation\n collectively represent\nthe source \ntype\n. One and only one of these attributes must be\nspecified for each source object.\n\n\nResolving resources\n\n\nBefore an operation is started, each required resource must be\n\nresolved\n. Resource resolution consists of these steps for each\nresource source:\n\n\n\n\nAcquire the source\n\n\nIf a SHA-256 hash is available, verify the source\n\n\nIf the source is an archive and \nunpack\n is not \nno\n, unpack the\n  archive\n\n\nCreate link to the source within the operation run directory or, if\n  \nselect\n is specified, create a link for each matching path within\n  the source\n\n\n\n\nWhen all required resources are resolved, Guild will start the\noperation.\n\n\nURL sources are stored in Guild\ns \nresource\ncache\n. If a source\n\n\nUnpacking sources\n\n\nSource archives may be unpacked to access their constituent files. A\nfile is considered an archive if it has one of the following\nextensions: \n.zip\n, \n.tar\n, \n.tgz\n, \n.tar.*\n.\n\n\nBy default, archives are unpacked. You can explicitly disable\nunpacking by setting the \nunpack\n source attribute to \nno\n.\n\n\nSelecting source files\n\n\nA source may indicate that files within a directory or archive should\nbe \nselected\n for use by specifying the source \nselect\n attribute. The\nvalue of \nselect\n must be a value regular expression. When specified,\nGuild will create links to each matching path within the source\ndirectory or archive.\n\n\nArchives must be unpacked to select source files.\n\n\nLinks use the basename of each matching file and do not contain parent\npaths. To illustrate, consider this structure, which may apply to\neither a file system directory or the contents of an archive:\n\n\n\n\n\n\nmodels-master\n \n\n \nsrc\n  \n\n  \nmnist\n  \n\n \n\n \n\n\n\n\n\n\n\n\n\nTo create a link to \nmnist\n in the operation run directory, use a\n\nselect\n value of \nmodels-master/src/mnist\n.\n\n\nHere\ns a model definition that illustrates this scheme.\n\n\nname: example\noperations:\n  train:\n    cmd: train\n    requires: mnist\nresources:\n  mnist:\n    sources:\n    - url: https://github.com/acme/models/archive/master.zip\n      select: models-master/src/mnist\n\n\n\n\nOperation output\n\n\nIt\ns common for an operation to require the output of another\noperation. Examples include:\n\n\n\n\nModel training requires a prepared dataset\n\n\nModel compression requires a trained model\n\n\nModel deployment requires a compressed model\n\n\n\n\nBy using required resources with \noperation\n sources, model developers\ncan effectively link operations together in a pipeline.\n\n\nGuild resolves operations using these steps:\n\n\n\n\n\n\nIf the user specifies a run ID as an argument to the \nrun\n\n  command in the form \nRESOURCE_NAME=RUN_ID\n Guild will resolve the\n  operation source using the target run directory.\n\n\n\n\n\n\nIf the user does not specify a run ID, Guild uses the latest\n  non-error run for any of the specified operations. Multiple\n  operations may be specified by separating the operation specs with a\n  comma.\n\n\n\n\n\n\nConsider the following model definition:\n\n\nname: example\noperations:\n  prepare:\n    cmd: prepare\n  train:\n    cmd: train\n    requires: data\nresources:\n  data:\n    sources:\n    - operation: prepare\n      select: data.csv\n\n\n\n\nIn this example, the \ntrain\n operation requires output from the\n\nprepare\n operation. This requirement is expressed using the\n\nrequires\n operation attribute, which references the named resource\n\ndata\n. The \ndata\n resource consists of a single source:\n\ndata.csv\n, which is generated by the \nprepare\n operation.", 
            "title": "Resources"
        }, 
        {
            "location": "/docs/resources/#resources", 
            "text": "Resource sources  Resolving resources  Unpacking sources  Selecting source files  Operation output   A resource is named set of files that are used by model operations .  Resources may be defined at two levels:   Model resource  Package resource   Model resources are defined by a model. Here s an example:  # MODEL\nname: simple-model\noperations:\n  train: train\n  requires: data\nresources:\n  data: data.csv", 
            "title": "Resources"
        }, 
        {
            "location": "/docs/resources/#resource-sources", 
            "text": "Resources are comprised of one or more  sources . A source may be a\nstring or an object.  A source string is equivalent to a source object with the value used\nfor the  file  attribute (see below).  A source object may define these attributes:   url  Source is located on a remote server and is accessible via a\n  URL. The protocols  http  and  https  are supported.  url  cannot be\n  used with either  file  or  operation they are mutually\n  exclusive.  file  Source is a file or directory located relative to the model or\n  package file.  file  cannot be used with  url  or  operation \n  they are mutually exclusive.  operation  Source is a file generated by a model operation. Operations must be\n  specified as  [[PACKAGE/]MODEL:]OPERATION . Multiple operations may\n  be specified by separating them with a comma. For more information\n  see  Operation output  below.  operation  cannot\n  be used with  url  or  file they are mutually exclusive.  select  A regular expression used to select files from a local directory,\n  archive, or a run directory if the source is an operation. For more\n  information see  Selecting source files \n  below.  select  is required if  operation  is used.  sha256  A  SHA-256  hash of the\n  resource source. If specified, the source SHA-256 hash must match\n  this value for the resource to resolve.  unpack  A boolean flag ( true  or  false ) indicating whether or not to\n  unpack the source. If unspecified, sources are unpacked if they are\n  archives. For more information see  Unpacking\n  sources  below.   The attributes  url ,  file , and  operation  collectively represent\nthe source  type . One and only one of these attributes must be\nspecified for each source object.", 
            "title": "Resource sources"
        }, 
        {
            "location": "/docs/resources/#resolving-resources", 
            "text": "Before an operation is started, each required resource must be resolved . Resource resolution consists of these steps for each\nresource source:   Acquire the source  If a SHA-256 hash is available, verify the source  If the source is an archive and  unpack  is not  no , unpack the\n  archive  Create link to the source within the operation run directory or, if\n   select  is specified, create a link for each matching path within\n  the source   When all required resources are resolved, Guild will start the\noperation.  URL sources are stored in Guild s  resource\ncache . If a source", 
            "title": "Resolving resources"
        }, 
        {
            "location": "/docs/resources/#unpacking-sources", 
            "text": "Source archives may be unpacked to access their constituent files. A\nfile is considered an archive if it has one of the following\nextensions:  .zip ,  .tar ,  .tgz ,  .tar.* .  By default, archives are unpacked. You can explicitly disable\nunpacking by setting the  unpack  source attribute to  no .", 
            "title": "Unpacking sources"
        }, 
        {
            "location": "/docs/resources/#selecting-source-files", 
            "text": "A source may indicate that files within a directory or archive should\nbe  selected  for use by specifying the source  select  attribute. The\nvalue of  select  must be a value regular expression. When specified,\nGuild will create links to each matching path within the source\ndirectory or archive.  Archives must be unpacked to select source files.  Links use the basename of each matching file and do not contain parent\npaths. To illustrate, consider this structure, which may apply to\neither a file system directory or the contents of an archive:    models-master\n  \n  src\n   \n   mnist\n   \n  \n      To create a link to  mnist  in the operation run directory, use a select  value of  models-master/src/mnist .  Here s a model definition that illustrates this scheme.  name: example\noperations:\n  train:\n    cmd: train\n    requires: mnist\nresources:\n  mnist:\n    sources:\n    - url: https://github.com/acme/models/archive/master.zip\n      select: models-master/src/mnist", 
            "title": "Selecting source files"
        }, 
        {
            "location": "/docs/resources/#operation-output", 
            "text": "It s common for an operation to require the output of another\noperation. Examples include:   Model training requires a prepared dataset  Model compression requires a trained model  Model deployment requires a compressed model   By using required resources with  operation  sources, model developers\ncan effectively link operations together in a pipeline.  Guild resolves operations using these steps:    If the user specifies a run ID as an argument to the  run \n  command in the form  RESOURCE_NAME=RUN_ID  Guild will resolve the\n  operation source using the target run directory.    If the user does not specify a run ID, Guild uses the latest\n  non-error run for any of the specified operations. Multiple\n  operations may be specified by separating the operation specs with a\n  comma.    Consider the following model definition:  name: example\noperations:\n  prepare:\n    cmd: prepare\n  train:\n    cmd: train\n    requires: data\nresources:\n  data:\n    sources:\n    - operation: prepare\n      select: data.csv  In this example, the  train  operation requires output from the prepare  operation. This requirement is expressed using the requires  operation attribute, which references the named resource data . The  data  resource consists of a single source: data.csv , which is generated by the  prepare  operation.", 
            "title": "Operation output"
        }, 
        {
            "location": "/docs/packages/", 
            "text": "Packages\n\n\n\n\nFind packages\n\n\nInstall packages\n\n\nList installed packages\n\n\nUninstall packages\n\n\nCreate package\n\n\n\n\nA Guild AI \npackage\n is a container for \nmodels\n and\n\nresources\n. Packages let developers easily publish\ntheir work for users to discover. They let users easily find, install,\nand use models. Packages are the central feature of Guild\ns support\nfor model collaboration, sharing and reuse.\n\n\nFind packages\n\n\nYou can find Guild packages in various ways:\n\n\n\n\nVisit Guild\ns \nmodel repository\n\n\nSearch for a model using the \nsearch\n command\n\n\n\n\nFor example, to find models that support the ImageNet dataset, simply run:\n\n\nguild search imagenet\n\n\n\n\nNew models are being published all the time so if you don\nt find what\nyou\nre looking for, let the community know by \nsubmitting a request on\nGuild\ns issue tracker\n.\n\n\nIt\ns also easy to create and publish your own models.\n\n\nInstall packages\n\n\nInstall a package by running:\n\n\nguild install PACKAGE\n\n\n\n\nYou can find package names using \nsearch\n (see \nFind\npackages\n above).\n\n\nYou can also browse \nGuild AI models\n.\n\n\nList installed packages\n\n\nTo list installed Guild AI packages, run:\n\n\nguild packages\n\n\n\n\nYou can list specific packages using \npackages\nlist\n:\n\n\nguild packages list FILTER\n\n\n\n\nFor example, to list installed packages containing \nmagenta\n, run:\n\n\nguild packages list magenta\n\n\n\n\nUninstall packages\n\n\nUninstall a package by running:\n\n\nguild uninstall PACKAGE\n\n\n\n\nGuild will prompt you before deleting package files.\n\n\nIf you\nd prefer to skip the prompt, use the \n-y\n option:\n\n\nguild uninstall PACKAGE -y\n\n\n\n\nCreate package\n\n\nCreating packages is an advanced topic that is not currently covered\nin this documentation.\n\n\nYou may however review the package definitions at\n\nhttps://github.com/guildai/packages\n for examples of packages.\n\n\nIf you need help creating a package, drop us a line at\n\nniceperson@guild.ai\n and we\nll be happy\nto help!", 
            "title": "Packages"
        }, 
        {
            "location": "/docs/packages/#packages", 
            "text": "Find packages  Install packages  List installed packages  Uninstall packages  Create package   A Guild AI  package  is a container for  models  and resources . Packages let developers easily publish\ntheir work for users to discover. They let users easily find, install,\nand use models. Packages are the central feature of Guild s support\nfor model collaboration, sharing and reuse.", 
            "title": "Packages"
        }, 
        {
            "location": "/docs/packages/#find-packages", 
            "text": "You can find Guild packages in various ways:   Visit Guild s  model repository  Search for a model using the  search  command   For example, to find models that support the ImageNet dataset, simply run:  guild search imagenet  New models are being published all the time so if you don t find what\nyou re looking for, let the community know by  submitting a request on\nGuild s issue tracker .  It s also easy to create and publish your own models.", 
            "title": "Find packages"
        }, 
        {
            "location": "/docs/packages/#install-packages", 
            "text": "Install a package by running:  guild install PACKAGE  You can find package names using  search  (see  Find\npackages  above).  You can also browse  Guild AI models .", 
            "title": "Install packages"
        }, 
        {
            "location": "/docs/packages/#list-installed-packages", 
            "text": "To list installed Guild AI packages, run:  guild packages  You can list specific packages using  packages\nlist :  guild packages list FILTER  For example, to list installed packages containing  magenta , run:  guild packages list magenta", 
            "title": "List installed packages"
        }, 
        {
            "location": "/docs/packages/#uninstall-packages", 
            "text": "Uninstall a package by running:  guild uninstall PACKAGE  Guild will prompt you before deleting package files.  If you d prefer to skip the prompt, use the  -y  option:  guild uninstall PACKAGE -y", 
            "title": "Uninstall packages"
        }, 
        {
            "location": "/docs/packages/#create-package", 
            "text": "Creating packages is an advanced topic that is not currently covered\nin this documentation.  You may however review the package definitions at https://github.com/guildai/packages  for examples of packages.  If you need help creating a package, drop us a line at niceperson@guild.ai  and we ll be happy\nto help!", 
            "title": "Create package"
        }, 
        {
            "location": "/docs/tests/", 
            "text": "Tests", 
            "title": "Tests"
        }, 
        {
            "location": "/docs/tests/#tests", 
            "text": "", 
            "title": "Tests"
        }, 
        {
            "location": "/docs/environments/", 
            "text": "Environments\n\n\nA Guild environment is a Python virtual environment used to isolate\nmodels and runs. Each environment is a separate file system directory\nthat contains its own set of runs and Python packages.\n\n\nEnvironments generally correspond to a project workflow. We recommend\nusing them for your work with Guild as they provide a number of\nbenefits:\n\n\n\n\nRestrict models to those you\nre interested in working with\n\n\nIsolate runs associated with a particular project or worflow\n\n\nMinimize software package version conflicts and broken dependencies\n\n\n\n\nBlah", 
            "title": "Environments"
        }, 
        {
            "location": "/docs/environments/#environments", 
            "text": "A Guild environment is a Python virtual environment used to isolate\nmodels and runs. Each environment is a separate file system directory\nthat contains its own set of runs and Python packages.  Environments generally correspond to a project workflow. We recommend\nusing them for your work with Guild as they provide a number of\nbenefits:   Restrict models to those you re interested in working with  Isolate runs associated with a particular project or worflow  Minimize software package version conflicts and broken dependencies", 
            "title": "Environments"
        }, 
        {
            "location": "/docs/environments/#blah", 
            "text": "", 
            "title": "Blah"
        }, 
        {
            "location": "/docs/remotes/", 
            "text": "Remotes\n\n\nA \nremote\n is an non-local environment that can be used for various\nGuild commands. Remotes are defined in \nuser\nconfiguration\n.\n\n\nGuild supports three types of remotes:\n\n\n\n\nSSH\n\n\nUse to run operations on a remote server over SSH.\n\n\nAWS EC2\n\n\nUse to create AWS EC2 instances and use them to run operation over\n  SSH.\n\n\nAWS S3\n\n\nUse to store and manage runs in an AWS S3 bucket.\n\n\n\n\nRemotes\n\n\nSSH\n\n\nSSH remotes are used to run operations on remote servers over\nSSH. This is useful for taking advantage of powerful GPU servers while\nusing Guild commands.\n\n\nHere\ns an example of an SSH remote named \nv100\n (e.g. it might host\nan NVIDIA Tesla V100 GPU):\n\n\nremotes:\n  v100:\n    type: ssh\n    host: v100.company.net\n\n\n\n\nSupported commands\n\n\nSSH remotes support the following Guild commands:\n\n\n\n\nremote status\n\n\nrun\n\n\nruns list\n\n\n\n\nSSH remotes cannot be started or stopped using Guild.\n\n\nEC2\n\n\nS3", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/remotes/#remotes", 
            "text": "A  remote  is an non-local environment that can be used for various\nGuild commands. Remotes are defined in  user\nconfiguration .  Guild supports three types of remotes:   SSH  Use to run operations on a remote server over SSH.  AWS EC2  Use to create AWS EC2 instances and use them to run operation over\n  SSH.  AWS S3  Use to store and manage runs in an AWS S3 bucket.   Remotes", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/remotes/#ssh_1", 
            "text": "SSH remotes are used to run operations on remote servers over\nSSH. This is useful for taking advantage of powerful GPU servers while\nusing Guild commands.  Here s an example of an SSH remote named  v100  (e.g. it might host\nan NVIDIA Tesla V100 GPU):  remotes:\n  v100:\n    type: ssh\n    host: v100.company.net", 
            "title": "SSH"
        }, 
        {
            "location": "/docs/remotes/#supported-commands", 
            "text": "SSH remotes support the following Guild commands:   remote status  run  runs list   SSH remotes cannot be started or stopped using Guild.", 
            "title": "Supported commands"
        }, 
        {
            "location": "/docs/remotes/#ec2", 
            "text": "", 
            "title": "EC2"
        }, 
        {
            "location": "/docs/remotes/#s3", 
            "text": "", 
            "title": "S3"
        }, 
        {
            "location": "/docs/visual/guild-view/", 
            "text": "Guild View\n\n\nGuild View is a visual application provided with the Guild AI\ntoolkit. It can be used to view run results and browse run\nartifacts. It also integrates with TensorBoard to let you view\nTensorFlow event logs generated for runs.\n\n\n\n\nGuild View\n\n\n\n\nStarting Guild View\n\n\nViewing specific runs\n\n\nFiltering runs within Guild View\n\n\nViewing run files\n\n\nView runs in TensorBoard\n\n\nAutomatic updates\n\n\nStopping Guild View\n\n\n\n\nStarting Guild View\n\n\nStart Guild View by running:\n\n\nguild view\n\n\n\n\nThis will start Guild View an a randomly selected port and open it in\nyour browser.\n\n\n\n\nImportant\n\n\nIf you\nre running Guild View on a remote server, Guild will not be\nable to open it on your workstation. Instead, manually open the link\ndisplayed by the \nguild view\n command.\n\n\n\n\nIf you\nd like to run Guild View on a specific port, use:\n\n\nguild view --port PORT\n\n\n\n\nIf you\nd like to start Guild View without opening a new browser\nwindow, use:\n\n\nguild view --no-open\n\n\n\n\nFor more help, see the \nview\n command.\n\n\nViewing specific runs\n\n\nYou can limit the runs that you view using various Guild View options.\n\n\nFor example, to view only runs for operations associated with a\nparticular model, use the \n-o\n (or \n--operation\n) option and specify\nthe model:\n\n\nguild view -o MODEL\n\n\n\n\nFor example, if you\nre working with the \nresnet-50\n model, you can\ntell Guild View to only show runs for that model by running:\n\n\nguild view -o resnet-50\n\n\n\n\nFor a complete list of options, see the \nview\n command.\n\n\nFiltering runs within Guild View\n\n\nYou can further filter runs in Guild View using the \nFilter\n input\nin the upper left of the window.\n\n\nRuns can be filtered using:\n\n\n\n\nPackage\n\n\nModel\n\n\nOperation name\n\n\nRun ID\n\n\n\n\nViewing run files\n\n\nYou can browse run files\nboth those used as run input and those\ngenerated as output\nby clicking on the \nFILES\n tab.\n\n\n\n\nGuild View - \nFILES\n tab\n\n\nUse the \nFilter\n input at the top of the files list to view only\nfiles you\nre interested in.\n\n\nGuild View provides a built-in file viewer for some file types:\n\n\n\n\nImages\n\n\nMusic\n\n\n\n\nIf a file can be opened in Guild View, its name will appear as a light\ngrey button. When you click the button, Guild will open a file viewer.\n\n\n\n\nMedia file names have have grey buttons, which can be clicked to\n  view the file.\n\n\nWhen you\nre viewing files in Guild View, you can navigate through them\nusing \nNEXT\n and \nPREV\n buttons.\n\n\n\n\nUse Guild View to view generated artifacts like images and music\n\n\nView runs in TensorBoard\n\n\nGuild View provides integration with TensorBoard. To view TensorFlow\nevent logs, click \n in the upper left of\nthe window.\n\n\n\n\nImportant\n\n\nIf you\nre running Guild View on a remote server, the \nView in\nTensorBoard\n feature will work. This is a known issue and will be\nfixed in upcoming releases of Guild AI. To view runs in\nTensorBoard on a remote server, use the\n\ntensorboard\n command from the remote server\ninstead of Guild View.\n\n\n\n\nAutomatic updates\n\n\nGuild View and TensorBoard will automatically update to show the\nlatest runs and run files.\n\n\nStopping Guild View\n\n\nGuild View will run until it\ns stopped. To stop Guild View, type\n\nCTRL-C\n in the console window where Guild View is running.\n\n\n\n\nNote\n\n\nWhen you\nve stopped Guild View, the associated browser window will\nno longer update or respond.", 
            "title": "Guild View"
        }, 
        {
            "location": "/docs/visual/guild-view/#guild-view", 
            "text": "Guild View is a visual application provided with the Guild AI\ntoolkit. It can be used to view run results and browse run\nartifacts. It also integrates with TensorBoard to let you view\nTensorFlow event logs generated for runs.   Guild View   Starting Guild View  Viewing specific runs  Filtering runs within Guild View  Viewing run files  View runs in TensorBoard  Automatic updates  Stopping Guild View", 
            "title": "Guild View"
        }, 
        {
            "location": "/docs/visual/guild-view/#starting-guild-view", 
            "text": "Start Guild View by running:  guild view  This will start Guild View an a randomly selected port and open it in\nyour browser.   Important  If you re running Guild View on a remote server, Guild will not be\nable to open it on your workstation. Instead, manually open the link\ndisplayed by the  guild view  command.   If you d like to run Guild View on a specific port, use:  guild view --port PORT  If you d like to start Guild View without opening a new browser\nwindow, use:  guild view --no-open  For more help, see the  view  command.", 
            "title": "Starting Guild View"
        }, 
        {
            "location": "/docs/visual/guild-view/#viewing-specific-runs", 
            "text": "You can limit the runs that you view using various Guild View options.  For example, to view only runs for operations associated with a\nparticular model, use the  -o  (or  --operation ) option and specify\nthe model:  guild view -o MODEL  For example, if you re working with the  resnet-50  model, you can\ntell Guild View to only show runs for that model by running:  guild view -o resnet-50  For a complete list of options, see the  view  command.", 
            "title": "Viewing specific runs"
        }, 
        {
            "location": "/docs/visual/guild-view/#filtering-runs-within-guild-view", 
            "text": "You can further filter runs in Guild View using the  Filter  input\nin the upper left of the window.  Runs can be filtered using:   Package  Model  Operation name  Run ID", 
            "title": "Filtering runs within Guild View"
        }, 
        {
            "location": "/docs/visual/guild-view/#viewing-run-files", 
            "text": "You can browse run files both those used as run input and those\ngenerated as output by clicking on the  FILES  tab.   Guild View -  FILES  tab  Use the  Filter  input at the top of the files list to view only\nfiles you re interested in.  Guild View provides a built-in file viewer for some file types:   Images  Music   If a file can be opened in Guild View, its name will appear as a light\ngrey button. When you click the button, Guild will open a file viewer.   Media file names have have grey buttons, which can be clicked to\n  view the file.  When you re viewing files in Guild View, you can navigate through them\nusing  NEXT  and  PREV  buttons.   Use Guild View to view generated artifacts like images and music", 
            "title": "Viewing run files"
        }, 
        {
            "location": "/docs/visual/guild-view/#view-runs-in-tensorboard", 
            "text": "Guild View provides integration with TensorBoard. To view TensorFlow\nevent logs, click   in the upper left of\nthe window.   Important  If you re running Guild View on a remote server, the  View in\nTensorBoard  feature will work. This is a known issue and will be\nfixed in upcoming releases of Guild AI. To view runs in\nTensorBoard on a remote server, use the tensorboard  command from the remote server\ninstead of Guild View.", 
            "title": "View runs in TensorBoard"
        }, 
        {
            "location": "/docs/visual/guild-view/#automatic-updates", 
            "text": "Guild View and TensorBoard will automatically update to show the\nlatest runs and run files.", 
            "title": "Automatic updates"
        }, 
        {
            "location": "/docs/visual/guild-view/#stopping-guild-view", 
            "text": "Guild View will run until it s stopped. To stop Guild View, type CTRL-C  in the console window where Guild View is running.   Note  When you ve stopped Guild View, the associated browser window will\nno longer update or respond.", 
            "title": "Stopping Guild View"
        }, 
        {
            "location": "/docs/visual/tensorboard/", 
            "text": "TensorBoard\n\n\n\n\nTensorBoard\n\n\nTensorBoard is a visualization tool from the TensorFlow team. It\ns a\nweb based application that lets you view TensorFlow event logs, which\ncontain a variety of useful information associated with a run:\n\n\n\n\nMetrics (scalars)\n\n\nImages, audio, and text generated during training\n\n\nModel graph\n\n\nModel statistics\n\n\n\n\nFor more information, see \nTensorBoard: Visualizing\nLearning\n.\n\n\nTensorBoard and Guild\n\n\nGuild integrates TensorBoard to make it easy to visualize TensorFlow\nevent logs. To visualize events for a set of runs, you can launch\nTensorBoard by running:\n\n\nguild tensorboard\n\n\n\n\nFor more information, see \ntensorboard\ncommand\n.\n\n\nTensorBoard is also integrated with \nGuild\nView\n. You can launch TensorBoard from Guild\nView by clicking \n which is located in\nthe upper left of the screen.\n\n\nRun synchronization\n\n\nWhen you run TensorBoard from Guild, by either the \ntensorboard\n\ncommand or from Guild View, the list of runs is automatically\nsynchronized with the current \nrun view\n.", 
            "title": "TensorBoard"
        }, 
        {
            "location": "/docs/visual/tensorboard/#tensorboard", 
            "text": "TensorBoard  TensorBoard is a visualization tool from the TensorFlow team. It s a\nweb based application that lets you view TensorFlow event logs, which\ncontain a variety of useful information associated with a run:   Metrics (scalars)  Images, audio, and text generated during training  Model graph  Model statistics   For more information, see  TensorBoard: Visualizing\nLearning .", 
            "title": "TensorBoard"
        }, 
        {
            "location": "/docs/visual/tensorboard/#tensorboard-and-guild", 
            "text": "Guild integrates TensorBoard to make it easy to visualize TensorFlow\nevent logs. To visualize events for a set of runs, you can launch\nTensorBoard by running:  guild tensorboard  For more information, see  tensorboard\ncommand .  TensorBoard is also integrated with  Guild\nView . You can launch TensorBoard from Guild\nView by clicking   which is located in\nthe upper left of the screen.", 
            "title": "TensorBoard and Guild"
        }, 
        {
            "location": "/docs/visual/tensorboard/#run-synchronization", 
            "text": "When you run TensorBoard from Guild, by either the  tensorboard \ncommand or from Guild View, the list of runs is automatically\nsynchronized with the current  run view .", 
            "title": "Run synchronization"
        }, 
        {
            "location": "/docs/commands/", 
            "text": "Commands\n\n\n\n\nGeneral\n\n\nModel info\n\n\nRun management\n\n\nRuns command alias\n\n\nRun info and analysis\n\n\nPackaging and distribution\n\n\nRemote\n\n\nVisualization\n\n\nUtilities\n\n\nRunning commands\n\n\nCommand options\n\n\nRunning commands in a separate console\n\n\n\n\n\n\nCommand help\n\n\n\n\n\n\n\n\nGeneral\n\n\ncheck\nhelp\ninit\nnew\n\n\n\n\nModel info\n\n\nhelp\nmodels\noperations\n\n\n\n\nRun management\n\n\nrun\nruns\nruns delete\nruns diff\nruns export\nruns import\nruns info\nruns label\nruns list\nruns pull\nruns purge\nruns push\nruns restore\nruns stop\n\n\n\n\nRuns command alias\n\n\ndiff\nexport\nimport\nlabel\npull\npush\nstop\n\n\n\n\nRun info and analysis\n\n\ncat\ncompare\ndiff\nls\nopen\nruns info\ntensorboard\nview\n\n\n\n\nPackaging and distribution\n\n\ninstall\npackage\npackages\npackages delete\npackages info\npackages list\nsearch\nuninstall\n\n\n\n\nRemote\n\n\npull\npush\nremote\nremote start\nremote status\nremote stop\nremotes\nruns pull\nruns push\nsync\nwatch\n\n\n\n\nVisualization\n\n\nopen\ntensorboard\nview\n\n\n\n\nUtilities\n\n\ndownload\nindex\nshell\ntensorflow inspect\ntest\n\n\n\n\nRunning commands\n\n\nGuild commands must be executed on a command line. If you\nre\nunfamiliar with running commands on your system, refer to \nGetting to\nKnow the Command Line\n for a\nprimer.\n\n\nAt a command line, run a Guild command using this convention:\n\n\nguild COMMAND\n\n\n\n\nwhere \nCOMMAND\n is one of the commands above. For a list of commands,\nrefer to this page or run \nguild --help\n on the command line. For\nmore information on getting see \nCommand help\n below.\n\n\nAll Guild commands run in the foreground and terminate when the\ncommand succeeds or an error occurs. You can stop a command at any\ntime by typing \nCTRL-c\n (i.e. hold down the \ncontrol\nkey\n for your system and press \nc\n).\n\n\nCommand options\n\n\nCommands accept \noptions\n, which may be provided as command line\narguments in the format \n--OPTION [VALUE]\n or \n-OPTION_CHAR\n[VALUE]\n where \nOPTION\n is the full name of the option and\n\nOPTION_CHAR\n is the single character option shortcut. \nVALUE\n may be\nrequired, optional, or considered invalid depending on the specific\ncommand option.\n\n\nOptions for each command are printed when you run \nguild COMMAND\n--help\n. They are also listed and described in more details in this\nguide.\n\n\nRunning commands in a separate console\n\n\nThere are some commands that will not terminate until you explicitly\nstop them:\n\n\n\n\ncompare\n\n\nview\n\n\ntensorboard\n\n\n\n\nTo run another command while one of these is still running, run the\nnew command in a separate console. There are various strategies for\nmanaging separate consoles:\n\n\n\n\nOpen another console/terminal\n\n\nUse a console/terminal application that supports multiple tabs\n\n\nUse an integrated developer environment (IDE) that supports running\n  commands in different terminals\n\n\nUse a multiplexer like \ntmux\n\n  (advanced)\n\n\n\n\nCommand help\n\n\nThe Guild CLI provides two levels of help:\n\n\n\n\nGeneral help\n\n\nCommand specific help\n\n\n\n\nGeneral help is available by running:\n\n\nguild --help\n\n\n\n\nThis will print Guild\ns global options as well as available commands.\n\n\nGlobal options may be specified for any command but must be specified\nbefore the command.\n\n\nCommand help is available by running:\n\n\nguild COMMAND --help\n\n\n\n\nThis will print details about what the command does and how it can be\nconfigured including details about its options.", 
            "title": "Commands"
        }, 
        {
            "location": "/docs/commands/#commands", 
            "text": "General  Model info  Run management  Runs command alias  Run info and analysis  Packaging and distribution  Remote  Visualization  Utilities  Running commands  Command options  Running commands in a separate console    Command help", 
            "title": "Commands"
        }, 
        {
            "location": "/docs/commands/#general", 
            "text": "check help init new", 
            "title": "General"
        }, 
        {
            "location": "/docs/commands/#model-info", 
            "text": "help models operations", 
            "title": "Model info"
        }, 
        {
            "location": "/docs/commands/#run-management", 
            "text": "run runs runs delete runs diff runs export runs import runs info runs label runs list runs pull runs purge runs push runs restore runs stop", 
            "title": "Run management"
        }, 
        {
            "location": "/docs/commands/#runs-command-alias", 
            "text": "diff export import label pull push stop", 
            "title": "Runs command alias"
        }, 
        {
            "location": "/docs/commands/#run-info-and-analysis", 
            "text": "cat compare diff ls open runs info tensorboard view", 
            "title": "Run info and analysis"
        }, 
        {
            "location": "/docs/commands/#packaging-and-distribution", 
            "text": "install package packages packages delete packages info packages list search uninstall", 
            "title": "Packaging and distribution"
        }, 
        {
            "location": "/docs/commands/#remote", 
            "text": "pull push remote remote start remote status remote stop remotes runs pull runs push sync watch", 
            "title": "Remote"
        }, 
        {
            "location": "/docs/commands/#visualization", 
            "text": "open tensorboard view", 
            "title": "Visualization"
        }, 
        {
            "location": "/docs/commands/#utilities", 
            "text": "download index shell tensorflow inspect test", 
            "title": "Utilities"
        }, 
        {
            "location": "/docs/commands/#running-commands", 
            "text": "Guild commands must be executed on a command line. If you re\nunfamiliar with running commands on your system, refer to  Getting to\nKnow the Command Line  for a\nprimer.  At a command line, run a Guild command using this convention:  guild COMMAND  where  COMMAND  is one of the commands above. For a list of commands,\nrefer to this page or run  guild --help  on the command line. For\nmore information on getting see  Command help  below.  All Guild commands run in the foreground and terminate when the\ncommand succeeds or an error occurs. You can stop a command at any\ntime by typing  CTRL-c  (i.e. hold down the  control\nkey  for your system and press  c ).", 
            "title": "Running commands"
        }, 
        {
            "location": "/docs/commands/#command-options", 
            "text": "Commands accept  options , which may be provided as command line\narguments in the format  --OPTION [VALUE]  or  -OPTION_CHAR\n[VALUE]  where  OPTION  is the full name of the option and OPTION_CHAR  is the single character option shortcut.  VALUE  may be\nrequired, optional, or considered invalid depending on the specific\ncommand option.  Options for each command are printed when you run  guild COMMAND\n--help . They are also listed and described in more details in this\nguide.", 
            "title": "Command options"
        }, 
        {
            "location": "/docs/commands/#running-commands-in-a-separate-console", 
            "text": "There are some commands that will not terminate until you explicitly\nstop them:   compare  view  tensorboard   To run another command while one of these is still running, run the\nnew command in a separate console. There are various strategies for\nmanaging separate consoles:   Open another console/terminal  Use a console/terminal application that supports multiple tabs  Use an integrated developer environment (IDE) that supports running\n  commands in different terminals  Use a multiplexer like  tmux \n  (advanced)", 
            "title": "Running commands in a separate console"
        }, 
        {
            "location": "/docs/commands/#command-help", 
            "text": "The Guild CLI provides two levels of help:   General help  Command specific help   General help is available by running:  guild --help  This will print Guild s global options as well as available commands.  Global options may be specified for any command but must be specified\nbefore the command.  Command help is available by running:  guild COMMAND --help  This will print details about what the command does and how it can be\nconfigured including details about its options.", 
            "title": "Command help"
        }, 
        {
            "location": "/docs/commands/cat-cmd/", 
            "text": "cat command\n\n\n\n\nUsage\n\n\nSelecting a run\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild cat [OPTIONS] PATH [RUN]\n\n  \n\n    \nShow contents of a run file.\n\n\nPATH\n must be a relative path to a file in the specified run\ndirectory.\n\n\nSelecting a run\n\n\nYou may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.\n\n\nIf \nRUN\n isn't specified, the latest run is selected.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-p, --page\n\n        \nShow file in pager.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "cat command"
        }, 
        {
            "location": "/docs/commands/cat-cmd/#cat-command", 
            "text": "Usage  Selecting a run    Options", 
            "title": "cat command"
        }, 
        {
            "location": "/docs/commands/cat-cmd/#usage", 
            "text": "guild cat [OPTIONS] PATH [RUN] \n   \n     Show contents of a run file.  PATH  must be a relative path to a file in the specified run\ndirectory.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/cat-cmd/#selecting-a-run", 
            "text": "You may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.  If  RUN  isn't specified, the latest run is selected.", 
            "title": "Selecting a run"
        }, 
        {
            "location": "/docs/commands/cat-cmd/#options", 
            "text": "-p, --page \n         Show file in pager. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/check-cmd/", 
            "text": "check command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild check [OPTIONS]\n\n  \n\n    \nCheck the Guild setup.\n\n\nThis command performs a number of checks and prints information\nabout the Guild setup.\n\n\nYou can also run the Guild test suite by specifying the \n--tests\n\noption.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-T, --tests\n\n        \nRun Guild test suite.\n\n      \n\n      \n      \n\n        \n-t, --test TEST\n\n        \nRun \nTEST\n (may be used multiple times).\n\n      \n\n      \n      \n\n        \n-n, --no-info\n\n        \nDon't print info (useful when just running tests).\n\n      \n\n      \n      \n\n        \n-s, --skip TEST\n\n        \nSkip \nTEST\n when running Guild test suite. Ignored otherwise.\n\n      \n\n      \n      \n\n        \n-v, --verbose\n\n        \nShow more information.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nCheck remote environment.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "check command"
        }, 
        {
            "location": "/docs/commands/check-cmd/#check-command", 
            "text": "Usage  Options", 
            "title": "check command"
        }, 
        {
            "location": "/docs/commands/check-cmd/#usage", 
            "text": "guild check [OPTIONS] \n   \n     Check the Guild setup.  This command performs a number of checks and prints information\nabout the Guild setup.  You can also run the Guild test suite by specifying the  --tests \noption.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/check-cmd/#options", 
            "text": "-T, --tests \n         Run Guild test suite. \n       \n      \n       \n         -t, --test TEST \n         Run  TEST  (may be used multiple times). \n       \n      \n       \n         -n, --no-info \n         Don't print info (useful when just running tests). \n       \n      \n       \n         -s, --skip TEST \n         Skip  TEST  when running Guild test suite. Ignored otherwise. \n       \n      \n       \n         -v, --verbose \n         Show more information. \n       \n      \n       \n         -r, --remote REMOTE \n         Check remote environment. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/compare-cmd/", 
            "text": "compare command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild compare [OPTIONS] [RUN...]\n\n  \n\n    \nCompare run results.\n\n\nGuild Compare is a console based application that displays a table\nof runs with their current accuracy and loss. The application will\ncontinue to run until you exit it by pressing \nq\n (for quit).\n\n\nGuild Compare supports a number of commands. Commands are\nactivated by pressing a letter. To view the list of commands,\npress \n?\n.\n\n\nGuild Compare does not automatically update to display the latest\navailable data. If you want to update the list of runs and their\nstatus, press \nr\n (for refresh).\n\n\nYou may alternative use this command to generate CSV output for\nrun. Use the \n--csv\n option to print data to standard output\ninstead of running as an application. You can redirect this output\nto a file using:\n\n\nguild compare --csv \n RUNS.csv\n\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-t, --table\n\n        \nGenerate comparison data as a table.\n\n      \n\n      \n      \n\n        \n-c, --csv\n\n        \nGenerate comparison data as a CSV file.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "compare command"
        }, 
        {
            "location": "/docs/commands/compare-cmd/#compare-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status    Options", 
            "title": "compare command"
        }, 
        {
            "location": "/docs/commands/compare-cmd/#usage", 
            "text": "guild compare [OPTIONS] [RUN...] \n   \n     Compare run results.  Guild Compare is a console based application that displays a table\nof runs with their current accuracy and loss. The application will\ncontinue to run until you exit it by pressing  q  (for quit).  Guild Compare supports a number of commands. Commands are\nactivated by pressing a letter. To view the list of commands,\npress  ? .  Guild Compare does not automatically update to display the latest\navailable data. If you want to update the list of runs and their\nstatus, press  r  (for refresh).  You may alternative use this command to generate CSV output for\nrun. Use the  --csv  option to print data to standard output\ninstead of running as an application. You can redirect this output\nto a file using:  guild compare --csv   RUNS.csv", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/compare-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/compare-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/compare-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/compare-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -t, --table \n         Generate comparison data as a table. \n       \n      \n       \n         -c, --csv \n         Generate comparison data as a CSV file. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/diff-cmd/", 
            "text": "diff command\n\n\n\n\nUsage\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nDiff command\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild diff [OPTIONS] [RUN1 RUN2]\n\n  \n\n    \nDiff two runs.\n\n\nIf \nRUN1\n and \nRUN2\n are omitted, the latest two filtered runs are\ndiffed. See FILTERING topics below for details on filtering runs\nto diff.\n\n\nIf \nRUN1\n or \nRUN2\n is specified, both must be specified.\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nDiff command\n\n\nBy default the \ndiff\n program is used to diff run details. An\nalternative default command may be specified in\n\n~/.guild/config.yml\n using the \ncommand\n attribute of the\n\ndiff\n section.\n\n\nTo use a specific diff program with the command, use \n--cmd\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-O, --output\n\n        \nDiff run output.\n\n      \n\n      \n      \n\n        \n-e, --env\n\n        \nDiff run environment.\n\n      \n\n      \n      \n\n        \n-g, --flags\n\n        \nDiff run flags.\n\n      \n\n      \n      \n\n        \n-a, --attrs\n\n        \nDiff all run attributes; if specified other attribute options are ignored.\n\n      \n\n      \n      \n\n        \n-d, --deps\n\n        \nDiff run dependencies.\n\n      \n\n      \n      \n\n        \n-p, --path PATH\n\n        \nDiff specified path; may be used more than once.\n\n      \n\n      \n      \n\n        \n-c, --cmd CMD\n\n        \nCommand used to diff runs.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "diff command"
        }, 
        {
            "location": "/docs/commands/diff-cmd/#diff-command", 
            "text": "Usage  Filtering by operation and label  Filtering by run status  Diff command    Options", 
            "title": "diff command"
        }, 
        {
            "location": "/docs/commands/diff-cmd/#usage", 
            "text": "guild diff [OPTIONS] [RUN1 RUN2] \n   \n     Diff two runs.  If  RUN1  and  RUN2  are omitted, the latest two filtered runs are\ndiffed. See FILTERING topics below for details on filtering runs\nto diff.  If  RUN1  or  RUN2  is specified, both must be specified.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/diff-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/diff-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/diff-cmd/#diff-command_1", 
            "text": "By default the  diff  program is used to diff run details. An\nalternative default command may be specified in ~/.guild/config.yml  using the  command  attribute of the diff  section.  To use a specific diff program with the command, use  --cmd .", 
            "title": "Diff command"
        }, 
        {
            "location": "/docs/commands/diff-cmd/#options", 
            "text": "-O, --output \n         Diff run output. \n       \n      \n       \n         -e, --env \n         Diff run environment. \n       \n      \n       \n         -g, --flags \n         Diff run flags. \n       \n      \n       \n         -a, --attrs \n         Diff all run attributes; if specified other attribute options are ignored. \n       \n      \n       \n         -d, --deps \n         Diff run dependencies. \n       \n      \n       \n         -p, --path PATH \n         Diff specified path; may be used more than once. \n       \n      \n       \n         -c, --cmd CMD \n         Command used to diff runs. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/download-cmd/", 
            "text": "download command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild download [OPTIONS] URL\n\n  \n\n    \nDownload a file resource.\n\n\nURL\n is downloaded as a Guild resource in the current\nenvironment. Once downloaded, it is available as a resource using\nthe same URL.\n\n\nNOTE:\n When used in a Guild file, \nURL\n must be specified\nexactly as used in this command. Guild will treat any changes as a\ndifferent resource.\n\n\nIMPORTANT:\n Independently verify SHA 256 digests for downloaded\nresources, especially those that will be executed, including\nPython libraries.\n\n\nExisting resources are not re-downloaded. To force a resource to\nbe re-downloaded, delete the resource file and run \ndownload\n\nagain.\n\n\nThe commands prints the SHA 256 digest with the full path to the\ndownloaded file.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "download command"
        }, 
        {
            "location": "/docs/commands/download-cmd/#download-command", 
            "text": "Usage  Options", 
            "title": "download command"
        }, 
        {
            "location": "/docs/commands/download-cmd/#usage", 
            "text": "guild download [OPTIONS] URL \n   \n     Download a file resource.  URL  is downloaded as a Guild resource in the current\nenvironment. Once downloaded, it is available as a resource using\nthe same URL.  NOTE:  When used in a Guild file,  URL  must be specified\nexactly as used in this command. Guild will treat any changes as a\ndifferent resource.  IMPORTANT:  Independently verify SHA 256 digests for downloaded\nresources, especially those that will be executed, including\nPython libraries.  Existing resources are not re-downloaded. To force a resource to\nbe re-downloaded, delete the resource file and run  download \nagain.  The commands prints the SHA 256 digest with the full path to the\ndownloaded file.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/download-cmd/#options", 
            "text": "--help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/export-cmd/", 
            "text": "export command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild export [OPTIONS] [RUN...] LOCATION\n\n  \n\n    \nExport one or more runs.\n\n\nLOCATION\n must be a writeable directory.\n\n\nBy default, runs are copied to \nLOCATION\n. Use \n--move\n to move\nthem instead.\n\n\nBy default, resources are NOT copied with each exported run, but\ntheir links are maintained. To copy resources, use\n\n--copy-resources\n.\n\n\nWARNING\n: Use \n--copy-resources\n with care as each exported run\nwill contain a separate copy of each resource!\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-m, --move\n\n        \nMove exported runs rather than copy.\n\n      \n\n      \n      \n\n        \n--copy-resources\n\n        \nCopy resources for each exported run.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before exporting.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "export command"
        }, 
        {
            "location": "/docs/commands/export-cmd/#export-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status    Options", 
            "title": "export command"
        }, 
        {
            "location": "/docs/commands/export-cmd/#usage", 
            "text": "guild export [OPTIONS] [RUN...] LOCATION \n   \n     Export one or more runs.  LOCATION  must be a writeable directory.  By default, runs are copied to  LOCATION . Use  --move  to move\nthem instead.  By default, resources are NOT copied with each exported run, but\ntheir links are maintained. To copy resources, use --copy-resources .  WARNING : Use  --copy-resources  with care as each exported run\nwill contain a separate copy of each resource!", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/export-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/export-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/export-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/export-cmd/#options", 
            "text": "-m, --move \n         Move exported runs rather than copy. \n       \n      \n       \n         --copy-resources \n         Copy resources for each exported run. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -y, --yes \n         Do not prompt before exporting. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/help-cmd/", 
            "text": "help command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild help [OPTIONS] [PATH_OR_PACKAGE]\n\n  \n\n    \nShow help for a path or package.\n\n\nBy default shows information about the models defined in the\nproject.\n\n\nTo display the description for distributions generated using the\npackage command, specify the \n--package-description\n option.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--package-description\n\n        \nShow the package description.\n\n      \n\n      \n      \n\n        \n-n, --no-pager\n\n        \nDo not use a pager when showing help.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "help command"
        }, 
        {
            "location": "/docs/commands/help-cmd/#help-command", 
            "text": "Usage  Options", 
            "title": "help command"
        }, 
        {
            "location": "/docs/commands/help-cmd/#usage", 
            "text": "guild help [OPTIONS] [PATH_OR_PACKAGE] \n   \n     Show help for a path or package.  By default shows information about the models defined in the\nproject.  To display the description for distributions generated using the\npackage command, specify the  --package-description  option.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/help-cmd/#options", 
            "text": "--package-description \n         Show the package description. \n       \n      \n       \n         -n, --no-pager \n         Do not use a pager when showing help. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/import-cmd/", 
            "text": "import command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild import [OPTIONS] [RUN...] ARCHIVE\n\n  \n\n    \nImport one or more runs from \nARCHIVE\n.\n\n\nYou may use \nguild runs list --archive ARCHIVE\n to view runs in\n\nARCHIVE\n.\n\n\nBy default, resources are NOT copied with each imported run, but\ntheir links are maintained. To copy resources, use\n\n--copy-resources\n.\n\n\nWARNING\n: Use \n--copy-resources\n with care as each imported run\nwill contain a separate copy of each resource!\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-m, --move\n\n        \nMove imported runs rather than copy.\n\n      \n\n      \n      \n\n        \n--copy-resources\n\n        \nCopy resources for each imported run.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before importing.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "import command"
        }, 
        {
            "location": "/docs/commands/import-cmd/#import-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status    Options", 
            "title": "import command"
        }, 
        {
            "location": "/docs/commands/import-cmd/#usage", 
            "text": "guild import [OPTIONS] [RUN...] ARCHIVE \n   \n     Import one or more runs from  ARCHIVE .  You may use  guild runs list --archive ARCHIVE  to view runs in ARCHIVE .  By default, resources are NOT copied with each imported run, but\ntheir links are maintained. To copy resources, use --copy-resources .  WARNING : Use  --copy-resources  with care as each imported run\nwill contain a separate copy of each resource!", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/import-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/import-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/import-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/import-cmd/#options", 
            "text": "-m, --move \n         Move imported runs rather than copy. \n       \n      \n       \n         --copy-resources \n         Copy resources for each imported run. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -y, --yes \n         Do not prompt before importing. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/index-cmd/", 
            "text": "index command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild index [OPTIONS]\n\n  \n\n    \nMange the run index.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-s, --sync\n\n        \nSynchronize index with current runs.\n\n      \n\n      \n      \n\n        \n-r, --raw-fields\n\n        \nShow raw (unformatted) index fields as JSON.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "index command"
        }, 
        {
            "location": "/docs/commands/index-cmd/#index-command", 
            "text": "Usage  Options", 
            "title": "index command"
        }, 
        {
            "location": "/docs/commands/index-cmd/#usage", 
            "text": "guild index [OPTIONS] \n   \n     Mange the run index.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/index-cmd/#options", 
            "text": "-s, --sync \n         Synchronize index with current runs. \n       \n      \n       \n         -r, --raw-fields \n         Show raw (unformatted) index fields as JSON. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/init-cmd/", 
            "text": "init command\n\n\n\n\nUsage\n\n\nRequirements\n\n\nTensorFlow\n\n\nGuild AI\n\n\nResource cache\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild init [OPTIONS] [DIR]\n\n  \n\n    \nInitialize a Guild environment.\n\n\ninit\n initializes a Guild environment in \nDIR\n, which is the\ncurrent directory by default.\n\n\ninit\n creates a virtual environment in \nDIR\n using \nvirtualenv\n.\n\n\nUse \n--python\n to specify the Python interpreter to use within the\ngenerated virtual environment. If \nno-venv\n is specified,\n\n--python\n is ignored.\n\n\nRequirements\n\n\nBy default, any required packages listed under packages.requires\nin \nguild.yml\n in the environment parent directory are installed\ninto the environment. Use \n--no-reqs\n to suppress this behavior.\n\n\nAdditionally, packages defined in \nrequirements.txt\n in the\nenvironment parent directory will be installed. Use \n--no-reqs\n to\nsuppress this behavior.\n\n\nNote that packages defined in \nguild.yml\n use Guild package names\nwhile packages defined in \nrequirements.txt\n use PyPI package\nnames.\n\n\nFor information in requirements files, see:\n\n\nhttps://pip.readthedocs.io/en/1.1/requirements.html\n\n\nYou may explicitly specify requirements file using \n-r\n or\n\n--requirement\n. If \n-r, --requirement\n is specified, Guild will\nnot automatically install packages in \nrequirements.txt\n -- that\nfile must be specified explicitly in the command.\n\n\nTensorFlow\n\n\nBy default \ninit\n installs TensorFlow in the initialized\nenvironment if it's not already installed. When Guild installs\nTensorFlow, it detects GPU support on the system and selects the\nappropriate package: \ntensorflow-gpu\n for GPU support, otherwise\n\ntensorflow\n.\n\n\nTo override the default package, use \n--gpu\n to install the\n\ntensorflow-gpu\n package or \n--no-gpu\n to install the \ntensorflow\n\npackage.\n\n\nTo skip installing TensorFlow, use \n--no-tensorflow\n.\n\n\nIf TensorFlow was installed by way of a requirements file, either\n\nrequirements.txt\n located in the environment parent directory or\na file specified by a \n--requirement\n option, Guild will not\nreinstall it.\n\n\nGuild AI\n\n\nBy default \ninit\n installs the active version of Guild AI in the\ninitialized environment. To install a different version, or to\ninstall a Guild wheel distribution file use the \n--guild\n option.\n\n\nResource cache\n\n\nBy default resources are cached and shared at the user level in\n\n~/.guild/cache/resources\n so that resources downloaded from one\nenvironment are available to other environments. You can modify\nthis behavior to have all resources downloaded local to the\nenvironment by specifying \n--local-resource-cache\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-n, --name NAME\n\n        \nEnvironment name (default is env parent directory name).\n\n      \n\n      \n      \n\n        \n--python VERSION\n\n        \nVersion of Python to use for the environment.\n\n      \n\n      \n      \n\n        \n--guild VERSION_OR_PATH\n\n        \nVersion of Guild AI to use for the environment. By default, the active version of Guild is installed. This value may alternatively be a path to a Guild wheel distribution.\n\n      \n\n      \n      \n\n        \n--gpu\n\n        \nUse the GPU enabled tensorflow package for the environment.\n\n      \n\n      \n      \n\n        \n--no-gpu\n\n        \nUse the non-GPU tensorflow package for the environment.\n\n      \n\n      \n      \n\n        \n--no-tensorflow\n\n        \nDo not install TensorFlow in the environment.\n\n      \n\n      \n      \n\n        \n-r, --requirement FILE\n\n        \nInstall packages defined in FILE. May be used multiple times.\n\n      \n\n      \n      \n\n        \n-p, --path DIR\n\n        \nInclude DIR as a Python path in the environment.\n\n      \n\n      \n      \n\n        \n--no-reqs\n\n        \nDon't install from requirements.txt or guild.yml in environment parent directory.\n\n      \n\n      \n      \n\n        \n--local-resource-cache\n\n        \nUse a local cache when initializing an environment.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nInitialize a Guild environment without prompting.\n\n      \n\n      \n      \n\n        \n--no-progress\n\n        \nDon't show progress when installing environment packages.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "init command"
        }, 
        {
            "location": "/docs/commands/init-cmd/#init-command", 
            "text": "Usage  Requirements  TensorFlow  Guild AI  Resource cache    Options", 
            "title": "init command"
        }, 
        {
            "location": "/docs/commands/init-cmd/#usage", 
            "text": "guild init [OPTIONS] [DIR] \n   \n     Initialize a Guild environment.  init  initializes a Guild environment in  DIR , which is the\ncurrent directory by default.  init  creates a virtual environment in  DIR  using  virtualenv .  Use  --python  to specify the Python interpreter to use within the\ngenerated virtual environment. If  no-venv  is specified, --python  is ignored.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/init-cmd/#requirements", 
            "text": "By default, any required packages listed under packages.requires\nin  guild.yml  in the environment parent directory are installed\ninto the environment. Use  --no-reqs  to suppress this behavior.  Additionally, packages defined in  requirements.txt  in the\nenvironment parent directory will be installed. Use  --no-reqs  to\nsuppress this behavior.  Note that packages defined in  guild.yml  use Guild package names\nwhile packages defined in  requirements.txt  use PyPI package\nnames.  For information in requirements files, see:  https://pip.readthedocs.io/en/1.1/requirements.html  You may explicitly specify requirements file using  -r  or --requirement . If  -r, --requirement  is specified, Guild will\nnot automatically install packages in  requirements.txt  -- that\nfile must be specified explicitly in the command.", 
            "title": "Requirements"
        }, 
        {
            "location": "/docs/commands/init-cmd/#tensorflow", 
            "text": "By default  init  installs TensorFlow in the initialized\nenvironment if it's not already installed. When Guild installs\nTensorFlow, it detects GPU support on the system and selects the\nappropriate package:  tensorflow-gpu  for GPU support, otherwise tensorflow .  To override the default package, use  --gpu  to install the tensorflow-gpu  package or  --no-gpu  to install the  tensorflow \npackage.  To skip installing TensorFlow, use  --no-tensorflow .  If TensorFlow was installed by way of a requirements file, either requirements.txt  located in the environment parent directory or\na file specified by a  --requirement  option, Guild will not\nreinstall it.", 
            "title": "TensorFlow"
        }, 
        {
            "location": "/docs/commands/init-cmd/#guild-ai", 
            "text": "By default  init  installs the active version of Guild AI in the\ninitialized environment. To install a different version, or to\ninstall a Guild wheel distribution file use the  --guild  option.", 
            "title": "Guild AI"
        }, 
        {
            "location": "/docs/commands/init-cmd/#resource-cache", 
            "text": "By default resources are cached and shared at the user level in ~/.guild/cache/resources  so that resources downloaded from one\nenvironment are available to other environments. You can modify\nthis behavior to have all resources downloaded local to the\nenvironment by specifying  --local-resource-cache .", 
            "title": "Resource cache"
        }, 
        {
            "location": "/docs/commands/init-cmd/#options", 
            "text": "-n, --name NAME \n         Environment name (default is env parent directory name). \n       \n      \n       \n         --python VERSION \n         Version of Python to use for the environment. \n       \n      \n       \n         --guild VERSION_OR_PATH \n         Version of Guild AI to use for the environment. By default, the active version of Guild is installed. This value may alternatively be a path to a Guild wheel distribution. \n       \n      \n       \n         --gpu \n         Use the GPU enabled tensorflow package for the environment. \n       \n      \n       \n         --no-gpu \n         Use the non-GPU tensorflow package for the environment. \n       \n      \n       \n         --no-tensorflow \n         Do not install TensorFlow in the environment. \n       \n      \n       \n         -r, --requirement FILE \n         Install packages defined in FILE. May be used multiple times. \n       \n      \n       \n         -p, --path DIR \n         Include DIR as a Python path in the environment. \n       \n      \n       \n         --no-reqs \n         Don't install from requirements.txt or guild.yml in environment parent directory. \n       \n      \n       \n         --local-resource-cache \n         Use a local cache when initializing an environment. \n       \n      \n       \n         -y, --yes \n         Initialize a Guild environment without prompting. \n       \n      \n       \n         --no-progress \n         Don't show progress when installing environment packages. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/install-cmd/", 
            "text": "install command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild install [OPTIONS] PACKAGE...\n\n  \n\n    \nInstall one or more packages.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-U, --upgrade\n\n        \nUpgrade specified packages to the newest available version.\n\n      \n\n      \n      \n\n        \n--reinstall\n\n        \nResinstall the package if it's already installed. Implies --upgrade.\n\n      \n\n      \n      \n\n        \n--no-cache\n\n        \nDon't use cached packages.\n\n      \n\n      \n      \n\n        \n--no-deps\n\n        \nDon't install dependencies.\n\n      \n\n      \n      \n\n        \n--pre\n\n        \nInstall pre-release versions.\n\n      \n\n      \n      \n\n        \n--target DIR\n\n        \nInstall package and requirements in DIR.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "install command"
        }, 
        {
            "location": "/docs/commands/install-cmd/#install-command", 
            "text": "Usage  Options", 
            "title": "install command"
        }, 
        {
            "location": "/docs/commands/install-cmd/#usage", 
            "text": "guild install [OPTIONS] PACKAGE... \n   \n     Install one or more packages.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/install-cmd/#options", 
            "text": "-U, --upgrade \n         Upgrade specified packages to the newest available version. \n       \n      \n       \n         --reinstall \n         Resinstall the package if it's already installed. Implies --upgrade. \n       \n      \n       \n         --no-cache \n         Don't use cached packages. \n       \n      \n       \n         --no-deps \n         Don't install dependencies. \n       \n      \n       \n         --pre \n         Install pre-release versions. \n       \n      \n       \n         --target DIR \n         Install package and requirements in DIR. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/label-cmd/", 
            "text": "label command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nLabeling remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild label [OPTIONS] [RUN...] [LABEL]\n\n  \n\n    \nSet run labels.\n\n\nIf \nLABEL\n is provided, the command will label the selected\nruns. To clear a run label, use the \n--clear\n option.\n\n\nSelect runs to modify using one or more \nRUN\n arguments. See\nSELECT RUNS below for information on selecting runs.\n\n\nIf \nRUN\n isn't specified, the most recent run is selected.\n\n\nBy default Guild will prompt you before making any changes. If you\nwant to apply the changes without being prompted, use the\n\n--yes\n option.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n0\n is assumed (the most\nrecent run).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nLabeling remote runs\n\n\nTo label remote runs, use \n--remote\n.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-c, --clear\n\n        \nClear the run's label.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nLabel remote runs.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before modifying labels.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "label command"
        }, 
        {
            "location": "/docs/commands/label-cmd/#label-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status  Labeling remote runs    Options", 
            "title": "label command"
        }, 
        {
            "location": "/docs/commands/label-cmd/#usage", 
            "text": "guild label [OPTIONS] [RUN...] [LABEL] \n   \n     Set run labels.  If  LABEL  is provided, the command will label the selected\nruns. To clear a run label, use the  --clear  option.  Select runs to modify using one or more  RUN  arguments. See\nSELECT RUNS below for information on selecting runs.  If  RUN  isn't specified, the most recent run is selected.  By default Guild will prompt you before making any changes. If you\nwant to apply the changes without being prompted, use the --yes  option.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/label-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  0  is assumed (the most\nrecent run).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/label-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/label-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/label-cmd/#labeling-remote-runs", 
            "text": "To label remote runs, use  --remote .  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Labeling remote runs"
        }, 
        {
            "location": "/docs/commands/label-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -c, --clear \n         Clear the run's label. \n       \n      \n       \n         -r, --remote REMOTE \n         Label remote runs. \n       \n      \n       \n         -y, --yes \n         Do not prompt before modifying labels. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/ls-cmd/", 
            "text": "ls command\n\n\n\n\nUsage\n\n\nSelecting a run\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild ls [OPTIONS] [RUN]\n\n  \n\n    \nList run files.\n\n\n--path\n may be specified as a relative path to a file within the\nrun directory to list.\n\n\nSelecting a run\n\n\nYou may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.\n\n\nIf \nRUN\n isn't specified, the latest run is selected.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-p, --path PATH\n\n        \nPath to list.\n\n      \n\n      \n      \n\n        \n-f, --full-path\n\n        \nShow full path for files.\n\n      \n\n      \n      \n\n        \n-L, --follow-links\n\n        \nFollow links.\n\n      \n\n      \n      \n\n        \n-a, --all\n\n        \nShow all files including Guild files.\n\n      \n\n      \n      \n\n        \n-n, --no-format\n\n        \nShow files without additional formatting.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "ls command"
        }, 
        {
            "location": "/docs/commands/ls-cmd/#ls-command", 
            "text": "Usage  Selecting a run    Options", 
            "title": "ls command"
        }, 
        {
            "location": "/docs/commands/ls-cmd/#usage", 
            "text": "guild ls [OPTIONS] [RUN] \n   \n     List run files.  --path  may be specified as a relative path to a file within the\nrun directory to list.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/ls-cmd/#selecting-a-run", 
            "text": "You may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.  If  RUN  isn't specified, the latest run is selected.", 
            "title": "Selecting a run"
        }, 
        {
            "location": "/docs/commands/ls-cmd/#options", 
            "text": "-p, --path PATH \n         Path to list. \n       \n      \n       \n         -f, --full-path \n         Show full path for files. \n       \n      \n       \n         -L, --follow-links \n         Follow links. \n       \n      \n       \n         -a, --all \n         Show all files including Guild files. \n       \n      \n       \n         -n, --no-format \n         Show files without additional formatting. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/models-cmd/", 
            "text": "models command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild models [OPTIONS] [FILTER]...\n\n  \n\n    \nShow available models.\n\n\nUse one or more \nFILTER\n arguments to show only models that match\nthe specified values.\n\n\nFILTER\n may a directory to indicate that only models defined in\nthat location are included in the list.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-v, --verbose\n\n        \nShow model details.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "models command"
        }, 
        {
            "location": "/docs/commands/models-cmd/#models-command", 
            "text": "Usage  Options", 
            "title": "models command"
        }, 
        {
            "location": "/docs/commands/models-cmd/#usage", 
            "text": "guild models [OPTIONS] [FILTER]... \n   \n     Show available models.  Use one or more  FILTER  arguments to show only models that match\nthe specified values.  FILTER  may a directory to indicate that only models defined in\nthat location are included in the list.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/models-cmd/#options", 
            "text": "-v, --verbose \n         Show model details. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/new-cmd/", 
            "text": "new command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild new [OPTIONS] [DIR]\n\n  \n\n    \nCreate a new Guild project.\n\n\nGuild\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-t, --template SRC\n\n        \nCreate project from a template.\n\n      \n\n      \n      \n\n        \n-n, --notebook SRC\n\n        \nCreate project from a Jupyter Notebook.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "new command"
        }, 
        {
            "location": "/docs/commands/new-cmd/#new-command", 
            "text": "Usage  Options", 
            "title": "new command"
        }, 
        {
            "location": "/docs/commands/new-cmd/#usage", 
            "text": "guild new [OPTIONS] [DIR] \n   \n     Create a new Guild project.  Guild", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/new-cmd/#options", 
            "text": "-t, --template SRC \n         Create project from a template. \n       \n      \n       \n         -n, --notebook SRC \n         Create project from a Jupyter Notebook. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/open-cmd/", 
            "text": "open command\n\n\n\n\nUsage\n\n\nSelecting a run\n\n\nRun paths\n\n\nOpen command\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild open [OPTIONS] [RUN]\n\n  \n\n    \nOpen a run path.\n\n\nThis command opens a path a single run.\n\n\nSelecting a run\n\n\nYou may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.\n\n\nIf \nRUN\n isn't specified, the latest run is selected.\n\n\nRun paths\n\n\n--path\n may be used to open a path within the run directory. By\ndefault the run directory itself is opened. PATH must be relative.\n\n\nOpen command\n\n\n--cmd\n may be used to specify the command used to open the\npath. By default the system-defined program is used.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-p, --path PATH\n\n        \nPath to open under run directory.\n\n      \n\n      \n      \n\n        \n-c, --cmd CMD\n\n        \nCommand used to open run.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "open command"
        }, 
        {
            "location": "/docs/commands/open-cmd/#open-command", 
            "text": "Usage  Selecting a run  Run paths  Open command    Options", 
            "title": "open command"
        }, 
        {
            "location": "/docs/commands/open-cmd/#usage", 
            "text": "guild open [OPTIONS] [RUN] \n   \n     Open a run path.  This command opens a path a single run.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/open-cmd/#selecting-a-run", 
            "text": "You may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.  If  RUN  isn't specified, the latest run is selected.", 
            "title": "Selecting a run"
        }, 
        {
            "location": "/docs/commands/open-cmd/#run-paths", 
            "text": "--path  may be used to open a path within the run directory. By\ndefault the run directory itself is opened. PATH must be relative.", 
            "title": "Run paths"
        }, 
        {
            "location": "/docs/commands/open-cmd/#open-command_1", 
            "text": "--cmd  may be used to specify the command used to open the\npath. By default the system-defined program is used.", 
            "title": "Open command"
        }, 
        {
            "location": "/docs/commands/open-cmd/#options", 
            "text": "-p, --path PATH \n         Path to open under run directory. \n       \n      \n       \n         -c, --cmd CMD \n         Command used to open run. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/operations-cmd/", 
            "text": "operations command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild operations [OPTIONS] [FILTER]...\n\n  \n\n    \nShow model operations.\n\n\nUse one or more \nFILTER\n arguments to show only operations whose\nnames or models match the specified values.\n\n\nFILTER\n may a directory to indicate that only operations of\nmodels defined in that location are included in the list.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-v, --verbose\n\n        \nShow operation details.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "operations command"
        }, 
        {
            "location": "/docs/commands/operations-cmd/#operations-command", 
            "text": "Usage  Options", 
            "title": "operations command"
        }, 
        {
            "location": "/docs/commands/operations-cmd/#usage", 
            "text": "guild operations [OPTIONS] [FILTER]... \n   \n     Show model operations.  Use one or more  FILTER  arguments to show only operations whose\nnames or models match the specified values.  FILTER  may a directory to indicate that only operations of\nmodels defined in that location are included in the list.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/operations-cmd/#options", 
            "text": "-v, --verbose \n         Show operation details. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/package-cmd/", 
            "text": "package command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild package [OPTIONS]\n\n  \n\n    \nCreate a package for distribution.\n\n\nPackages are built from projects that contain guildfile with a\npackage definition, which describes the package to be built.\n\n\nYou may upload the generated package distribution to a PyPI\nrepository by using the \n--upload\n option or to the PyPI test site\nby using \n--upload-test\n.\n\n\nYou may upload to an alternative repository using\n\n--upload-repo\n. \nREPO\n may be a URL or the name of a section in\n\n~/.pypirc\n. For more information on the \n.pypirc\n file, see:\n\n\nhttps://docs.python.org/2/distutils/packageindex.html#pypirc\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-d, --dist-dir DIR\n\n        \nDirectory to create the package distribution in.\n\n      \n\n      \n      \n\n        \n--upload\n\n        \nUpload to PyPI after creating the package.\n\n      \n\n      \n      \n\n        \n--upload-test\n\n        \nUpload to the PyPI test site after creating the package.\n\n      \n\n      \n      \n\n        \n--repo REPO\n\n        \nUpload to \nREPO\n after creating the package.\n\n      \n\n      \n      \n\n        \n-s, --sign\n\n        \nSign a package distribution upload with gpg.\n\n      \n\n      \n      \n\n        \n-i, --identity IDENTITY\n\n        \nGPG identity used to sign upload.\n\n      \n\n      \n      \n\n        \n-u, --user USERNAME\n\n        \nPyPI user name for upload.\n\n      \n\n      \n      \n\n        \n-p, --password PASSWORD\n\n        \nPyPI password for upload.\n\n      \n\n      \n      \n\n        \n-e, --skip-existing\n\n        \nDon't upload if package already exists.\n\n      \n\n      \n      \n\n        \n-c, --comment COMMENT\n\n        \nComment to include with upload.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "package command"
        }, 
        {
            "location": "/docs/commands/package-cmd/#package-command", 
            "text": "Usage  Options", 
            "title": "package command"
        }, 
        {
            "location": "/docs/commands/package-cmd/#usage", 
            "text": "guild package [OPTIONS] \n   \n     Create a package for distribution.  Packages are built from projects that contain guildfile with a\npackage definition, which describes the package to be built.  You may upload the generated package distribution to a PyPI\nrepository by using the  --upload  option or to the PyPI test site\nby using  --upload-test .  You may upload to an alternative repository using --upload-repo .  REPO  may be a URL or the name of a section in ~/.pypirc . For more information on the  .pypirc  file, see:  https://docs.python.org/2/distutils/packageindex.html#pypirc", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/package-cmd/#options", 
            "text": "-d, --dist-dir DIR \n         Directory to create the package distribution in. \n       \n      \n       \n         --upload \n         Upload to PyPI after creating the package. \n       \n      \n       \n         --upload-test \n         Upload to the PyPI test site after creating the package. \n       \n      \n       \n         --repo REPO \n         Upload to  REPO  after creating the package. \n       \n      \n       \n         -s, --sign \n         Sign a package distribution upload with gpg. \n       \n      \n       \n         -i, --identity IDENTITY \n         GPG identity used to sign upload. \n       \n      \n       \n         -u, --user USERNAME \n         PyPI user name for upload. \n       \n      \n       \n         -p, --password PASSWORD \n         PyPI password for upload. \n       \n      \n       \n         -e, --skip-existing \n         Don't upload if package already exists. \n       \n      \n       \n         -c, --comment COMMENT \n         Comment to include with upload. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/packages-cmd/", 
            "text": "packages command\n\n\n\n\nUsage\n\n\nOptions\n\n\nSubcommands\n\n\n\n\n\n  \nUsage\n\n  \nguild packages [OPTIONS] COMMAND [ARGS]...\n\n  \n\n    \nShow or manage packages.\n\n\nIf \nCOMMAND\n is not specified, lists packages.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-a, --all\n\n        \nShow all packages.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nSubcommands\n\n  \n\n    \n\n      \n      \n\n        \ndelete, rm\n\n        \nUninstall one or more packages.\n\n      \n\n      \n      \n\n        \ninfo\n\n        \nShow information for one or more packages.\n\n      \n\n      \n      \n\n        \nlist, ls\n\n        \nList installed packages.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "packages command"
        }, 
        {
            "location": "/docs/commands/packages-cmd/#packages-command", 
            "text": "Usage  Options  Subcommands", 
            "title": "packages command"
        }, 
        {
            "location": "/docs/commands/packages-cmd/#usage", 
            "text": "guild packages [OPTIONS] COMMAND [ARGS]... \n   \n     Show or manage packages.  If  COMMAND  is not specified, lists packages.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/packages-cmd/#options", 
            "text": "-a, --all \n         Show all packages. \n       \n      \n       \n         --help \n         Show command help and exit.", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/packages-cmd/#subcommands", 
            "text": "delete, rm \n         Uninstall one or more packages. \n       \n      \n       \n         info \n         Show information for one or more packages. \n       \n      \n       \n         list, ls \n         List installed packages. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Subcommands"
        }, 
        {
            "location": "/docs/commands/packages-delete-cmd/", 
            "text": "packages delete command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild packages delete [OPTIONS] PACKAGE...\n\n  \n\n    \nUninstall one or more packages.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before uninstalling.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "packages delete command"
        }, 
        {
            "location": "/docs/commands/packages-delete-cmd/#packages-delete-command", 
            "text": "Usage  Options", 
            "title": "packages delete command"
        }, 
        {
            "location": "/docs/commands/packages-delete-cmd/#usage", 
            "text": "guild packages delete [OPTIONS] PACKAGE... \n   \n     Uninstall one or more packages.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/packages-delete-cmd/#options", 
            "text": "-y, --yes \n         Do not prompt before uninstalling. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/packages-info-cmd/", 
            "text": "packages info command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild packages info [OPTIONS] PACKAGE...\n\n  \n\n    \nShow information for one or more packages.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-v, --verbose\n\n        \nShow more information.\n\n      \n\n      \n      \n\n        \n-f, --files\n\n        \nShow packages files.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "packages info command"
        }, 
        {
            "location": "/docs/commands/packages-info-cmd/#packages-info-command", 
            "text": "Usage  Options", 
            "title": "packages info command"
        }, 
        {
            "location": "/docs/commands/packages-info-cmd/#usage", 
            "text": "guild packages info [OPTIONS] PACKAGE... \n   \n     Show information for one or more packages.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/packages-info-cmd/#options", 
            "text": "-v, --verbose \n         Show more information. \n       \n      \n       \n         -f, --files \n         Show packages files. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/packages-list-cmd/", 
            "text": "packages list command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild packages list [OPTIONS] [TERM]...\n\n  \n\n    \nList installed packages.\n\n\nSpecify one or more \nTERM\n arguments to show packages matching any\nof the specified values.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-a, --all\n\n        \nShow all packages.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "packages list command"
        }, 
        {
            "location": "/docs/commands/packages-list-cmd/#packages-list-command", 
            "text": "Usage  Options", 
            "title": "packages list command"
        }, 
        {
            "location": "/docs/commands/packages-list-cmd/#usage", 
            "text": "guild packages list [OPTIONS] [TERM]... \n   \n     List installed packages.  Specify one or more  TERM  arguments to show packages matching any\nof the specified values.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/packages-list-cmd/#options", 
            "text": "-a, --all \n         Show all packages. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/pull-cmd/", 
            "text": "pull command\n\n\n\n\nUsage\n\n\nRemotes\n\n\nssh remote\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild pull [OPTIONS] [RUN...] REMOTE\n\n  \n\n    \nCopy one or more runs from a remote location.\n\n\nRUN\n must be the complete run ID of the remote run.\n\n\nNOTE:\n Guild does not currently support listing remote runs. To\npull specific runs, query the remote server for the full run ID of\neach run you want to pull.\n\n\nYou may alternatively use \n--all\n to pull all remote runs. If\n\n--all\n is specified, \nRUN\n arguments cannot be specified.\n\n\n--verbose\n is always enabled when \n--all\n is specified.\n\n\nREMOTE\n must be define in \n~/.guild/config.yml\n. See REMOTES\nbelow for more information.\n\n\nBy default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the \n--yes\n\noption.\n\n\nRemotes\n\n\nRemotes are non-local systems that Guild can interact with. They\nare defined in \n~/.guild/config.yml\n under the \nremotes\n\nsection.\n\n\nEach remote must specify a \ntype\n attributes. Guild currently\nsupports one remote type: \nssh\n.\n\n\nssh remote\n\n\nAn \nssh\n remote is accessed using \nssh\n and supports file copies\nusing \nrsync\n. Both \nssh\n and \nrsync\n programs must be installed\nand configured on the local system to run commands for this type\nof remote.\n\n\nssh remotes support the following attributes:\n\n\nhost\n - hostname of the remote system (required)\n\n\nuser\n - user account on the remote host (defaults to current user)\n\n\nguild-home\n - path to Guild home relative to home directory\nassociated with remote user (defaults to \n.guild\n)\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-n, --no-delete\n\n        \nDon't delete local files missing on remote.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before copying.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "pull command"
        }, 
        {
            "location": "/docs/commands/pull-cmd/#pull-command", 
            "text": "Usage  Remotes  ssh remote    Options", 
            "title": "pull command"
        }, 
        {
            "location": "/docs/commands/pull-cmd/#usage", 
            "text": "guild pull [OPTIONS] [RUN...] REMOTE \n   \n     Copy one or more runs from a remote location.  RUN  must be the complete run ID of the remote run.  NOTE:  Guild does not currently support listing remote runs. To\npull specific runs, query the remote server for the full run ID of\neach run you want to pull.  You may alternatively use  --all  to pull all remote runs. If --all  is specified,  RUN  arguments cannot be specified.  --verbose  is always enabled when  --all  is specified.  REMOTE  must be define in  ~/.guild/config.yml . See REMOTES\nbelow for more information.  By default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the  --yes \noption.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/pull-cmd/#remotes", 
            "text": "Remotes are non-local systems that Guild can interact with. They\nare defined in  ~/.guild/config.yml  under the  remotes \nsection.  Each remote must specify a  type  attributes. Guild currently\nsupports one remote type:  ssh .", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/commands/pull-cmd/#ssh-remote", 
            "text": "An  ssh  remote is accessed using  ssh  and supports file copies\nusing  rsync . Both  ssh  and  rsync  programs must be installed\nand configured on the local system to run commands for this type\nof remote.  ssh remotes support the following attributes:  host  - hostname of the remote system (required)  user  - user account on the remote host (defaults to current user)  guild-home  - path to Guild home relative to home directory\nassociated with remote user (defaults to  .guild )", 
            "title": "ssh remote"
        }, 
        {
            "location": "/docs/commands/pull-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -n, --no-delete \n         Don't delete local files missing on remote. \n       \n      \n       \n         -y, --yes \n         Do not prompt before copying. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/push-cmd/", 
            "text": "push command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nRemotes\n\n\nssh remote\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild push [OPTIONS] [RUN...] REMOTE\n\n  \n\n    \nCopy one or more runs to a remote location.\n\n\nREMOTE\n must be define in \n~/.guild/config.yml\n. See REMOTES\nbelow for more information.\n\n\nBy default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the \n--yes\n\noption.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nRemotes\n\n\nRemotes are non-local systems that Guild can interact with. They\nare defined in \n~/.guild/config.yml\n under the \nremotes\n\nsection.\n\n\nEach remote must specify a \ntype\n attributes. Guild currently\nsupports one remote type: \nssh\n.\n\n\nssh remote\n\n\nAn \nssh\n remote is accessed using \nssh\n and supports file copies\nusing \nrsync\n. Both \nssh\n and \nrsync\n programs must be installed\nand configured on the local system to run commands for this type\nof remote.\n\n\nssh remotes support the following attributes:\n\n\nhost\n - hostname of the remote system (required)\n\n\nuser\n - user account on the remote host (defaults to current user)\n\n\nguild-home\n - path to Guild home relative to home directory\nassociated with remote user (defaults to \n.guild\n)\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-n, --no-delete\n\n        \nDon't delete remote files missing locally.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before copying.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "push command"
        }, 
        {
            "location": "/docs/commands/push-cmd/#push-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status  Remotes  ssh remote    Options", 
            "title": "push command"
        }, 
        {
            "location": "/docs/commands/push-cmd/#usage", 
            "text": "guild push [OPTIONS] [RUN...] REMOTE \n   \n     Copy one or more runs to a remote location.  REMOTE  must be define in  ~/.guild/config.yml . See REMOTES\nbelow for more information.  By default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the  --yes \noption.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/push-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/push-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/push-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/push-cmd/#remotes", 
            "text": "Remotes are non-local systems that Guild can interact with. They\nare defined in  ~/.guild/config.yml  under the  remotes \nsection.  Each remote must specify a  type  attributes. Guild currently\nsupports one remote type:  ssh .", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/commands/push-cmd/#ssh-remote", 
            "text": "An  ssh  remote is accessed using  ssh  and supports file copies\nusing  rsync . Both  ssh  and  rsync  programs must be installed\nand configured on the local system to run commands for this type\nof remote.  ssh remotes support the following attributes:  host  - hostname of the remote system (required)  user  - user account on the remote host (defaults to current user)  guild-home  - path to Guild home relative to home directory\nassociated with remote user (defaults to  .guild )", 
            "title": "ssh remote"
        }, 
        {
            "location": "/docs/commands/push-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -n, --no-delete \n         Don't delete remote files missing locally. \n       \n      \n       \n         -y, --yes \n         Do not prompt before copying. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/remote-cmd/", 
            "text": "remote command\n\n\n\n\nUsage\n\n\nOptions\n\n\nSubcommands\n\n\n\n\n\n  \nUsage\n\n  \nguild remote [OPTIONS] COMMAND [ARGS]...\n\n  \n\n    \nManage remote status.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nSubcommands\n\n  \n\n    \n\n      \n      \n\n        \nstart\n\n        \nStart a remote.\n\n      \n\n      \n      \n\n        \nstatus\n\n        \nShow remote status.\n\n      \n\n      \n      \n\n        \nstop\n\n        \nStop a remote.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "remote command"
        }, 
        {
            "location": "/docs/commands/remote-cmd/#remote-command", 
            "text": "Usage  Options  Subcommands", 
            "title": "remote command"
        }, 
        {
            "location": "/docs/commands/remote-cmd/#usage", 
            "text": "guild remote [OPTIONS] COMMAND [ARGS]... \n   \n     Manage remote status.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/remote-cmd/#options", 
            "text": "--help \n         Show command help and exit.", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/remote-cmd/#subcommands", 
            "text": "start \n         Start a remote. \n       \n      \n       \n         status \n         Show remote status. \n       \n      \n       \n         stop \n         Stop a remote. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Subcommands"
        }, 
        {
            "location": "/docs/commands/remote-start-cmd/", 
            "text": "remote start command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild remote start [OPTIONS] REMOTE\n\n  \n\n    \nStart a remote.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--reinit\n\n        \nReinitialize a started remote.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nStart without prompting.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "remote start command"
        }, 
        {
            "location": "/docs/commands/remote-start-cmd/#remote-start-command", 
            "text": "Usage  Options", 
            "title": "remote start command"
        }, 
        {
            "location": "/docs/commands/remote-start-cmd/#usage", 
            "text": "guild remote start [OPTIONS] REMOTE \n   \n     Start a remote.  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/remote-start-cmd/#options", 
            "text": "--reinit \n         Reinitialize a started remote. \n       \n      \n       \n         -y, --yes \n         Start without prompting. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/remote-status-cmd/", 
            "text": "remote status command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild remote status [OPTIONS] REMOTE\n\n  \n\n    \nShow remote status.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-v, --verbose\n\n        \nShow more status information.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "remote status command"
        }, 
        {
            "location": "/docs/commands/remote-status-cmd/#remote-status-command", 
            "text": "Usage  Options", 
            "title": "remote status command"
        }, 
        {
            "location": "/docs/commands/remote-status-cmd/#usage", 
            "text": "guild remote status [OPTIONS] REMOTE \n   \n     Show remote status.  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/remote-status-cmd/#options", 
            "text": "-v, --verbose \n         Show more status information. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/remote-stop-cmd/", 
            "text": "remote stop command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild remote stop [OPTIONS] REMOTE\n\n  \n\n    \nStop a remote.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-y, --yes\n\n        \nStop without prompting.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "remote stop command"
        }, 
        {
            "location": "/docs/commands/remote-stop-cmd/#remote-stop-command", 
            "text": "Usage  Options", 
            "title": "remote stop command"
        }, 
        {
            "location": "/docs/commands/remote-stop-cmd/#usage", 
            "text": "guild remote stop [OPTIONS] REMOTE \n   \n     Stop a remote.  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/remote-stop-cmd/#options", 
            "text": "-y, --yes \n         Stop without prompting. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/remotes-cmd/", 
            "text": "remotes command\n\n\n\n\nUsage\n\n\nRemotes\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild remotes [OPTIONS]\n\n  \n\n    \nShow available remotes.\n\n\nRemotes\n\n\nRemotes are non-local systems that Guild can interact with. They\nare defined in \n~/.guild/config.yml\n under the \nremotes\n\nsection.\n\n\nFor a list of supported remotes, see\n\nhttps://guild.ai/docs/remotes/\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "remotes command"
        }, 
        {
            "location": "/docs/commands/remotes-cmd/#remotes-command", 
            "text": "Usage  Remotes    Options", 
            "title": "remotes command"
        }, 
        {
            "location": "/docs/commands/remotes-cmd/#usage", 
            "text": "guild remotes [OPTIONS] \n   \n     Show available remotes.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/remotes-cmd/#remotes", 
            "text": "Remotes are non-local systems that Guild can interact with. They\nare defined in  ~/.guild/config.yml  under the  remotes \nsection.  For a list of supported remotes, see https://guild.ai/docs/remotes/", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/commands/remotes-cmd/#options", 
            "text": "--help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/run-cmd/", 
            "text": "run command\n\n\n\n\nUsage\n\n\nRe-running operations\n\n\nRestarting operations\n\n\nAlternate run directory\n\n\nControlling visible GPU devices\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild run [OPTIONS] [[MODEL:]OPERATION] [ARG...]\n\n  \n\n    \nRun a model operation.\n\n\nBy default Guild will try to run \nOPERATION\n for the default model\ndefined in a project. If a project location is not specified (see\n\n--project\n option below), Guild looks for a project in the\ncurrent directory.\n\n\nIf \nMODEL\n is specified, Guild will use it instead of the default\nmodel defined in a project.\n\n\n[MODEL]:OPERATION\n may be omitted if \n--rerun\n is specified, in\nwhich case the operation used in \nRUN\n will be used.\n\n\nRe-running operations\n\n\nIf \n--rerun\n is specified, the operation and flags used in \nRUN\n\nwill be applied to the new operation. You may add or redefine\nflags in the new operation. You may also use an alternative\noperation, in which case only the flag values from \nRUN\n will be\napplied. \nRUN\n must be a run ID or unique run ID prefix or the\nspecial value \n0\n, which indicates the latest run.\n\n\nRestarting operations\n\n\nIf \n--restart\n is specified, the specified \nRUN\n is restarted\nin-place using its operation and flags. Unlike rerun, restart does\nnot create a new run, but instead reuses the run directory of\n\nRUN\n. Like a rerun, a restart may specify a different operation\nand additional flags and may use \n0\n for the value of \nRUN\n to\nrestart the latest run. \n--run-dir\n may not be used with\n\n--restart\n.\n\n\n--rerun\n and \n--restart\n may not both be used.\n\n\nAlternate run directory\n\n\nTo run an operation outside of Guild's run management facility,\nuse \n--run-dir\n or \n--stage\n to specify an alternative run\ndirectory. These options are useful when developing or debugging\nan operation. Use \n--stage\n to prepare a run directory for an\noperation without running the operation itself. This is useful\nwhen you want to verify dependency resolution and pre-processing\nor manually run an operation in a prepared directory.\n\n\nNOTE:\n Runs started with \n--run-dir\n are not visible to Guild\nand will not appear in run listings.\n\n\nControlling visible GPU devices\n\n\nBy default, operations have access to all available GPU\ndevices. To limit the GPU devices available to a run, use\n\n--gpus\n.\n\n\nFor example, to limit visible GPU devices to \n0\n and \n1\n, run:\n\n\nguild run --gpus 0,1 ...\n\n\n\nTo disable all available GPUs, use \n--no-gpus\n.\n\n\nNOTE:\n \n--gpus\n and \n--no-gpus\n are used to construct the\n\nCUDA_VISIBLE_DEVICES\n environment variable used for the run\nprocess. If \nCUDA_VISIBLE_DEVICES\n is set, using either of these\noptions will cause it to be redefined for the run.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-l, --label LABEL\n\n        \nSet a label for the run.\n\n      \n\n      \n      \n\n        \n-d, --run-dir DIR\n\n        \nUse alternative run directory DIR. Cannot be used with --stage.\n\n      \n\n      \n      \n\n        \n--stage DIR\n\n        \nStage an operation in DIR but do not run. Cannot be used with --run-dir.\n\n      \n\n      \n      \n\n        \n--rerun RUN\n\n        \nUse the operation and flags from RUN. Flags may be added or redefined in this operation. Cannot be used with --restart.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nRun the operation remotely.\n\n      \n\n      \n      \n\n        \n--restart RUN\n\n        \nRestart RUN in-place without creating a new run. Cannot be used with --rerun or --run-dir.\n\n      \n\n      \n      \n\n        \n--disable-plugins LIST\n\n        \nA comma separated list of plugin names to disable. Use 'all' to disable all plugins.\n\n      \n\n      \n      \n\n        \n--gpus DEVICES\n\n        \nLimit availabe GPUs to DEVICES, a comma separated list of device IDs. By default all GPUs are available. Cannot beused with --no-gpus.\n\n      \n\n      \n      \n\n        \n--no-gpus\n\n        \nDisable GPUs for run. Cannot be used with --gpu.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before running operation.\n\n      \n\n      \n      \n\n        \n--background PIDFILE\n\n        \nRun operation in background. PIDFILE must be a path to a file where the background process ID is written.\n\n      \n\n      \n      \n\n        \n-n, --no-wait\n\n        \nDon't wait for a remote operation to complete. Ignored if run is local.\n\n      \n\n      \n      \n\n        \n--set-trace\n\n        \nEnter the Python debugger at the operation entry point.\n\n      \n\n      \n      \n\n        \n-q, --quiet\n\n        \nDo not show output.\n\n      \n\n      \n      \n\n        \n--print-cmd\n\n        \nShow operation command and exit.\n\n      \n\n      \n      \n\n        \n--print-env\n\n        \nShow operation environment and exit.\n\n      \n\n      \n      \n\n        \n--help-model\n\n        \nShow model help and exit.\n\n      \n\n      \n      \n\n        \n--help-op\n\n        \nShow operation help and exit.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "run command"
        }, 
        {
            "location": "/docs/commands/run-cmd/#run-command", 
            "text": "Usage  Re-running operations  Restarting operations  Alternate run directory  Controlling visible GPU devices    Options", 
            "title": "run command"
        }, 
        {
            "location": "/docs/commands/run-cmd/#usage", 
            "text": "guild run [OPTIONS] [[MODEL:]OPERATION] [ARG...] \n   \n     Run a model operation.  By default Guild will try to run  OPERATION  for the default model\ndefined in a project. If a project location is not specified (see --project  option below), Guild looks for a project in the\ncurrent directory.  If  MODEL  is specified, Guild will use it instead of the default\nmodel defined in a project.  [MODEL]:OPERATION  may be omitted if  --rerun  is specified, in\nwhich case the operation used in  RUN  will be used.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/run-cmd/#re-running-operations", 
            "text": "If  --rerun  is specified, the operation and flags used in  RUN \nwill be applied to the new operation. You may add or redefine\nflags in the new operation. You may also use an alternative\noperation, in which case only the flag values from  RUN  will be\napplied.  RUN  must be a run ID or unique run ID prefix or the\nspecial value  0 , which indicates the latest run.", 
            "title": "Re-running operations"
        }, 
        {
            "location": "/docs/commands/run-cmd/#restarting-operations", 
            "text": "If  --restart  is specified, the specified  RUN  is restarted\nin-place using its operation and flags. Unlike rerun, restart does\nnot create a new run, but instead reuses the run directory of RUN . Like a rerun, a restart may specify a different operation\nand additional flags and may use  0  for the value of  RUN  to\nrestart the latest run.  --run-dir  may not be used with --restart .  --rerun  and  --restart  may not both be used.", 
            "title": "Restarting operations"
        }, 
        {
            "location": "/docs/commands/run-cmd/#alternate-run-directory", 
            "text": "To run an operation outside of Guild's run management facility,\nuse  --run-dir  or  --stage  to specify an alternative run\ndirectory. These options are useful when developing or debugging\nan operation. Use  --stage  to prepare a run directory for an\noperation without running the operation itself. This is useful\nwhen you want to verify dependency resolution and pre-processing\nor manually run an operation in a prepared directory.  NOTE:  Runs started with  --run-dir  are not visible to Guild\nand will not appear in run listings.", 
            "title": "Alternate run directory"
        }, 
        {
            "location": "/docs/commands/run-cmd/#controlling-visible-gpu-devices", 
            "text": "By default, operations have access to all available GPU\ndevices. To limit the GPU devices available to a run, use --gpus .  For example, to limit visible GPU devices to  0  and  1 , run:  guild run --gpus 0,1 ...  To disable all available GPUs, use  --no-gpus .  NOTE:   --gpus  and  --no-gpus  are used to construct the CUDA_VISIBLE_DEVICES  environment variable used for the run\nprocess. If  CUDA_VISIBLE_DEVICES  is set, using either of these\noptions will cause it to be redefined for the run.", 
            "title": "Controlling visible GPU devices"
        }, 
        {
            "location": "/docs/commands/run-cmd/#options", 
            "text": "-l, --label LABEL \n         Set a label for the run. \n       \n      \n       \n         -d, --run-dir DIR \n         Use alternative run directory DIR. Cannot be used with --stage. \n       \n      \n       \n         --stage DIR \n         Stage an operation in DIR but do not run. Cannot be used with --run-dir. \n       \n      \n       \n         --rerun RUN \n         Use the operation and flags from RUN. Flags may be added or redefined in this operation. Cannot be used with --restart. \n       \n      \n       \n         -r, --remote REMOTE \n         Run the operation remotely. \n       \n      \n       \n         --restart RUN \n         Restart RUN in-place without creating a new run. Cannot be used with --rerun or --run-dir. \n       \n      \n       \n         --disable-plugins LIST \n         A comma separated list of plugin names to disable. Use 'all' to disable all plugins. \n       \n      \n       \n         --gpus DEVICES \n         Limit availabe GPUs to DEVICES, a comma separated list of device IDs. By default all GPUs are available. Cannot beused with --no-gpus. \n       \n      \n       \n         --no-gpus \n         Disable GPUs for run. Cannot be used with --gpu. \n       \n      \n       \n         -y, --yes \n         Do not prompt before running operation. \n       \n      \n       \n         --background PIDFILE \n         Run operation in background. PIDFILE must be a path to a file where the background process ID is written. \n       \n      \n       \n         -n, --no-wait \n         Don't wait for a remote operation to complete. Ignored if run is local. \n       \n      \n       \n         --set-trace \n         Enter the Python debugger at the operation entry point. \n       \n      \n       \n         -q, --quiet \n         Do not show output. \n       \n      \n       \n         --print-cmd \n         Show operation command and exit. \n       \n      \n       \n         --print-env \n         Show operation environment and exit. \n       \n      \n       \n         --help-model \n         Show model help and exit. \n       \n      \n       \n         --help-op \n         Show operation help and exit. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-cmd/", 
            "text": "runs command\n\n\n\n\nUsage\n\n\nOptions\n\n\nSubcommands\n\n\n\n\n\n  \nUsage\n\n  \nguild runs [OPTIONS] COMMAND [ARGS]...\n\n  \n\n    \nShow or manage runs.\n\n\nIf \nCOMMAND\n is omitted, lists runs. Refer to \nruns list\n for more information on the \nlist\n command.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-d, --deleted\n\n        \nShow deleted runs.\n\n      \n\n      \n      \n\n        \n--archive DIR\n\n        \nShow archived runs in DIR\n\n      \n\n      \n      \n\n        \n-a, --all\n\n        \nShow all runs (by default only the last 20 runs are shown)\n\n      \n\n      \n      \n\n        \n-m, --more\n\n        \nShow 20 more runs. Maybe used multiple times.\n\n      \n\n      \n      \n\n        \n--json\n\n        \nFormat runs as JSON.\n\n      \n\n      \n      \n\n        \n-v, --verbose\n\n        \nShow run details.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nList runs on REMOTE rather than local runs.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nSubcommands\n\n  \n\n    \n\n      \n      \n\n        \ndelete, rm\n\n        \nDelete one or more runs.\n\n      \n\n      \n      \n\n        \ndiff\n\n        \nDiff two runs.\n\n      \n\n      \n      \n\n        \nexport\n\n        \nExport one or more runs.\n\n      \n\n      \n      \n\n        \nimport\n\n        \nImport one or more runs from \nARCHIVE\n.\n\n      \n\n      \n      \n\n        \ninfo\n\n        \nShow run information.\n\n      \n\n      \n      \n\n        \nlabel\n\n        \nSet run labels.\n\n      \n\n      \n      \n\n        \nlist, ls\n\n        \nList runs.\n\n      \n\n      \n      \n\n        \npull\n\n        \nCopy one or more runs from a remote location.\n\n      \n\n      \n      \n\n        \npurge\n\n        \nPermanentaly delete one or more deleted runs.\n\n      \n\n      \n      \n\n        \npush\n\n        \nCopy one or more runs to a remote location.\n\n      \n\n      \n      \n\n        \nrestore\n\n        \nRestore one or more deleted runs.\n\n      \n\n      \n      \n\n        \nstop\n\n        \nStop one or more runs.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs command"
        }, 
        {
            "location": "/docs/commands/runs-cmd/#runs-command", 
            "text": "Usage  Options  Subcommands", 
            "title": "runs command"
        }, 
        {
            "location": "/docs/commands/runs-cmd/#usage", 
            "text": "guild runs [OPTIONS] COMMAND [ARGS]... \n   \n     Show or manage runs.  If  COMMAND  is omitted, lists runs. Refer to  runs list  for more information on the  list  command.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -d, --deleted \n         Show deleted runs. \n       \n      \n       \n         --archive DIR \n         Show archived runs in DIR \n       \n      \n       \n         -a, --all \n         Show all runs (by default only the last 20 runs are shown) \n       \n      \n       \n         -m, --more \n         Show 20 more runs. Maybe used multiple times. \n       \n      \n       \n         --json \n         Format runs as JSON. \n       \n      \n       \n         -v, --verbose \n         Show run details. \n       \n      \n       \n         -r, --remote REMOTE \n         List runs on REMOTE rather than local runs. \n       \n      \n       \n         --help \n         Show command help and exit.", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-cmd/#subcommands", 
            "text": "delete, rm \n         Delete one or more runs. \n       \n      \n       \n         diff \n         Diff two runs. \n       \n      \n       \n         export \n         Export one or more runs. \n       \n      \n       \n         import \n         Import one or more runs from  ARCHIVE . \n       \n      \n       \n         info \n         Show run information. \n       \n      \n       \n         label \n         Set run labels. \n       \n      \n       \n         list, ls \n         List runs. \n       \n      \n       \n         pull \n         Copy one or more runs from a remote location. \n       \n      \n       \n         purge \n         Permanentaly delete one or more deleted runs. \n       \n      \n       \n         push \n         Copy one or more runs to a remote location. \n       \n      \n       \n         restore \n         Restore one or more deleted runs. \n       \n      \n       \n         stop \n         Stop one or more runs. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Subcommands"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/", 
            "text": "runs delete command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nDeleting remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs delete [OPTIONS] [RUN...]\n\n  \n\n    \nDelete one or more runs.\n\n\nRuns are deleting by selecting them with \nRUN\n arguments. If a\n\nRUN\n argument is not specified, all runs matching the filter\ncriteria are deleted. See SELECTING RUNS and FILTERING topics\nbelow for more information on how runs are selected.\n\n\nBy default, Guild will display the list of runs to be deleted and\nask you to confirm the operation. If you want to delete the runs\nwithout being prompted, use the \n--yes\n option.\n\n\nWARNING\n: Take care when deleting runs using indexes as the\nruns selected with indexes can change. Review the list of runs\ncarefully before confirming a delete operation.\n\n\nIf a run is still running, Guild will stop it first before\ndeleting it.\n\n\nIf you delete a run by mistake, provided you didn't use the\n\n--permanent\n option, you can restore it using \nguild runs\nrestore\n.\n\n\nIf you want to permanently delete runs, use the \n--permanent\n\noption.\n\n\nWARNING\n: Permanentaly deleted runs cannot be restored.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nDeleting remote runs\n\n\nTo delete runs on a remote, use \n--remote\n.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nDelete remote runs.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before deleting.\n\n      \n\n      \n      \n\n        \n-p, --permanent\n\n        \nPermanentaly delete runs so they cannot be recovered.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs delete command"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/#runs-delete-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status  Deleting remote runs    Options", 
            "title": "runs delete command"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/#usage", 
            "text": "guild runs delete [OPTIONS] [RUN...] \n   \n     Delete one or more runs.  Runs are deleting by selecting them with  RUN  arguments. If a RUN  argument is not specified, all runs matching the filter\ncriteria are deleted. See SELECTING RUNS and FILTERING topics\nbelow for more information on how runs are selected.  By default, Guild will display the list of runs to be deleted and\nask you to confirm the operation. If you want to delete the runs\nwithout being prompted, use the  --yes  option.  WARNING : Take care when deleting runs using indexes as the\nruns selected with indexes can change. Review the list of runs\ncarefully before confirming a delete operation.  If a run is still running, Guild will stop it first before\ndeleting it.  If you delete a run by mistake, provided you didn't use the --permanent  option, you can restore it using  guild runs\nrestore .  If you want to permanently delete runs, use the  --permanent \noption.  WARNING : Permanentaly deleted runs cannot be restored.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/#deleting-remote-runs", 
            "text": "To delete runs on a remote, use  --remote .  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Deleting remote runs"
        }, 
        {
            "location": "/docs/commands/runs-delete-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -r, --remote REMOTE \n         Delete remote runs. \n       \n      \n       \n         -y, --yes \n         Do not prompt before deleting. \n       \n      \n       \n         -p, --permanent \n         Permanentaly delete runs so they cannot be recovered. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-diff-cmd/", 
            "text": "runs diff command\n\n\n\n\nUsage\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nDiff command\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs diff [OPTIONS] [RUN1 RUN2]\n\n  \n\n    \nDiff two runs.\n\n\nIf \nRUN1\n and \nRUN2\n are omitted, the latest two filtered runs are\ndiffed. See FILTERING topics below for details on filtering runs\nto diff.\n\n\nIf \nRUN1\n or \nRUN2\n is specified, both must be specified.\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nDiff command\n\n\nBy default the \ndiff\n program is used to diff run details. An\nalternative default command may be specified in\n\n~/.guild/config.yml\n using the \ncommand\n attribute of the\n\ndiff\n section.\n\n\nTo use a specific diff program with the command, use \n--cmd\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-O, --output\n\n        \nDiff run output.\n\n      \n\n      \n      \n\n        \n-e, --env\n\n        \nDiff run environment.\n\n      \n\n      \n      \n\n        \n-g, --flags\n\n        \nDiff run flags.\n\n      \n\n      \n      \n\n        \n-a, --attrs\n\n        \nDiff all run attributes; if specified other attribute options are ignored.\n\n      \n\n      \n      \n\n        \n-d, --deps\n\n        \nDiff run dependencies.\n\n      \n\n      \n      \n\n        \n-p, --path PATH\n\n        \nDiff specified path; may be used more than once.\n\n      \n\n      \n      \n\n        \n-c, --cmd CMD\n\n        \nCommand used to diff runs.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs diff command"
        }, 
        {
            "location": "/docs/commands/runs-diff-cmd/#runs-diff-command", 
            "text": "Usage  Filtering by operation and label  Filtering by run status  Diff command    Options", 
            "title": "runs diff command"
        }, 
        {
            "location": "/docs/commands/runs-diff-cmd/#usage", 
            "text": "guild runs diff [OPTIONS] [RUN1 RUN2] \n   \n     Diff two runs.  If  RUN1  and  RUN2  are omitted, the latest two filtered runs are\ndiffed. See FILTERING topics below for details on filtering runs\nto diff.  If  RUN1  or  RUN2  is specified, both must be specified.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-diff-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-diff-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-diff-cmd/#diff-command", 
            "text": "By default the  diff  program is used to diff run details. An\nalternative default command may be specified in ~/.guild/config.yml  using the  command  attribute of the diff  section.  To use a specific diff program with the command, use  --cmd .", 
            "title": "Diff command"
        }, 
        {
            "location": "/docs/commands/runs-diff-cmd/#options", 
            "text": "-O, --output \n         Diff run output. \n       \n      \n       \n         -e, --env \n         Diff run environment. \n       \n      \n       \n         -g, --flags \n         Diff run flags. \n       \n      \n       \n         -a, --attrs \n         Diff all run attributes; if specified other attribute options are ignored. \n       \n      \n       \n         -d, --deps \n         Diff run dependencies. \n       \n      \n       \n         -p, --path PATH \n         Diff specified path; may be used more than once. \n       \n      \n       \n         -c, --cmd CMD \n         Command used to diff runs. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-export-cmd/", 
            "text": "runs export command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs export [OPTIONS] [RUN...] LOCATION\n\n  \n\n    \nExport one or more runs.\n\n\nLOCATION\n must be a writeable directory.\n\n\nBy default, runs are copied to \nLOCATION\n. Use \n--move\n to move\nthem instead.\n\n\nBy default, resources are NOT copied with each exported run, but\ntheir links are maintained. To copy resources, use\n\n--copy-resources\n.\n\n\nWARNING\n: Use \n--copy-resources\n with care as each exported run\nwill contain a separate copy of each resource!\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-m, --move\n\n        \nMove exported runs rather than copy.\n\n      \n\n      \n      \n\n        \n--copy-resources\n\n        \nCopy resources for each exported run.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before exporting.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs export command"
        }, 
        {
            "location": "/docs/commands/runs-export-cmd/#runs-export-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status    Options", 
            "title": "runs export command"
        }, 
        {
            "location": "/docs/commands/runs-export-cmd/#usage", 
            "text": "guild runs export [OPTIONS] [RUN...] LOCATION \n   \n     Export one or more runs.  LOCATION  must be a writeable directory.  By default, runs are copied to  LOCATION . Use  --move  to move\nthem instead.  By default, resources are NOT copied with each exported run, but\ntheir links are maintained. To copy resources, use --copy-resources .  WARNING : Use  --copy-resources  with care as each exported run\nwill contain a separate copy of each resource!", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-export-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-export-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-export-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-export-cmd/#options", 
            "text": "-m, --move \n         Move exported runs rather than copy. \n       \n      \n       \n         --copy-resources \n         Copy resources for each exported run. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -y, --yes \n         Do not prompt before exporting. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-import-cmd/", 
            "text": "runs import command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs import [OPTIONS] [RUN...] ARCHIVE\n\n  \n\n    \nImport one or more runs from \nARCHIVE\n.\n\n\nYou may use \nguild runs list --archive ARCHIVE\n to view runs in\n\nARCHIVE\n.\n\n\nBy default, resources are NOT copied with each imported run, but\ntheir links are maintained. To copy resources, use\n\n--copy-resources\n.\n\n\nWARNING\n: Use \n--copy-resources\n with care as each imported run\nwill contain a separate copy of each resource!\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-m, --move\n\n        \nMove imported runs rather than copy.\n\n      \n\n      \n      \n\n        \n--copy-resources\n\n        \nCopy resources for each imported run.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before importing.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs import command"
        }, 
        {
            "location": "/docs/commands/runs-import-cmd/#runs-import-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status    Options", 
            "title": "runs import command"
        }, 
        {
            "location": "/docs/commands/runs-import-cmd/#usage", 
            "text": "guild runs import [OPTIONS] [RUN...] ARCHIVE \n   \n     Import one or more runs from  ARCHIVE .  You may use  guild runs list --archive ARCHIVE  to view runs in ARCHIVE .  By default, resources are NOT copied with each imported run, but\ntheir links are maintained. To copy resources, use --copy-resources .  WARNING : Use  --copy-resources  with care as each imported run\nwill contain a separate copy of each resource!", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-import-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-import-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-import-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-import-cmd/#options", 
            "text": "-m, --move \n         Move imported runs rather than copy. \n       \n      \n       \n         --copy-resources \n         Copy resources for each imported run. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -y, --yes \n         Do not prompt before importing. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/", 
            "text": "runs info command\n\n\n\n\nUsage\n\n\nSelecting a run\n\n\nAdditional information\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nRemote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs info [OPTIONS] [RUN]\n\n  \n\n    \nShow run information.\n\n\nThis command shows information for a single run.\n\n\nSelecting a run\n\n\nYou may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.\n\n\nIf RUN isn't specified, the latest run is selected.\n\n\nAdditional information\n\n\nYou can show additional run information by specifying option\nflags. You may use multiple flags to show more information. Refer\nto the options below for what additional information is available.\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nRemote runs\n\n\nUse \n--remote\n to show info for a remote run.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-f, --files\n\n        \nShow run files. Use twice (-ff) to show full paths.\n\n      \n\n      \n      \n\n        \n-O, --output\n\n        \nShow run output.\n\n      \n\n      \n      \n\n        \n-e, --env\n\n        \nShow run environment.\n\n      \n\n      \n      \n\n        \n-g, --flags\n\n        \nShow run flags.\n\n      \n\n      \n      \n\n        \n-d, --deps\n\n        \nShow resolved dependencies.\n\n      \n\n      \n      \n\n        \n-p, --page-output\n\n        \nShow only run output in a pager.\n\n      \n\n      \n      \n\n        \n-L, --follow-links\n\n        \nFollow links when showing files.\n\n      \n\n      \n      \n\n        \n-a, --all-files\n\n        \nShow all run files including those generated by Guild.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nShow info for remote run.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs info command"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#runs-info-command", 
            "text": "Usage  Selecting a run  Additional information  Filtering by operation and label  Filtering by run status  Remote runs    Options", 
            "title": "runs info command"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#usage", 
            "text": "guild runs info [OPTIONS] [RUN] \n   \n     Show run information.  This command shows information for a single run.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#selecting-a-run", 
            "text": "You may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.  If RUN isn't specified, the latest run is selected.", 
            "title": "Selecting a run"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#additional-information", 
            "text": "You can show additional run information by specifying option\nflags. You may use multiple flags to show more information. Refer\nto the options below for what additional information is available.", 
            "title": "Additional information"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#remote-runs", 
            "text": "Use  --remote  to show info for a remote run.  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Remote runs"
        }, 
        {
            "location": "/docs/commands/runs-info-cmd/#options", 
            "text": "-f, --files \n         Show run files. Use twice (-ff) to show full paths. \n       \n      \n       \n         -O, --output \n         Show run output. \n       \n      \n       \n         -e, --env \n         Show run environment. \n       \n      \n       \n         -g, --flags \n         Show run flags. \n       \n      \n       \n         -d, --deps \n         Show resolved dependencies. \n       \n      \n       \n         -p, --page-output \n         Show only run output in a pager. \n       \n      \n       \n         -L, --follow-links \n         Follow links when showing files. \n       \n      \n       \n         -a, --all-files \n         Show all run files including those generated by Guild. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -r, --remote REMOTE \n         Show info for remote run. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/", 
            "text": "runs label command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nLabeling remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs label [OPTIONS] [RUN...] [LABEL]\n\n  \n\n    \nSet run labels.\n\n\nIf \nLABEL\n is provided, the command will label the selected\nruns. To clear a run label, use the \n--clear\n option.\n\n\nSelect runs to modify using one or more \nRUN\n arguments. See\nSELECT RUNS below for information on selecting runs.\n\n\nIf \nRUN\n isn't specified, the most recent run is selected.\n\n\nBy default Guild will prompt you before making any changes. If you\nwant to apply the changes without being prompted, use the\n\n--yes\n option.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n0\n is assumed (the most\nrecent run).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nLabeling remote runs\n\n\nTo label remote runs, use \n--remote\n.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-c, --clear\n\n        \nClear the run's label.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nLabel remote runs.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before modifying labels.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs label command"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/#runs-label-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status  Labeling remote runs    Options", 
            "title": "runs label command"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/#usage", 
            "text": "guild runs label [OPTIONS] [RUN...] [LABEL] \n   \n     Set run labels.  If  LABEL  is provided, the command will label the selected\nruns. To clear a run label, use the  --clear  option.  Select runs to modify using one or more  RUN  arguments. See\nSELECT RUNS below for information on selecting runs.  If  RUN  isn't specified, the most recent run is selected.  By default Guild will prompt you before making any changes. If you\nwant to apply the changes without being prompted, use the --yes  option.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  0  is assumed (the most\nrecent run).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/#labeling-remote-runs", 
            "text": "To label remote runs, use  --remote .  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Labeling remote runs"
        }, 
        {
            "location": "/docs/commands/runs-label-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -c, --clear \n         Clear the run's label. \n       \n      \n       \n         -r, --remote REMOTE \n         Label remote runs. \n       \n      \n       \n         -y, --yes \n         Do not prompt before modifying labels. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/", 
            "text": "runs list command\n\n\n\n\nUsage\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nShow deleted runs\n\n\nShow archives runs\n\n\nShow remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs list [OPTIONS]\n\n  \n\n    \nList runs.\n\n\nRun lists may be filtered using a variety of options. See below\nfor details.\n\n\nBy default, the last 20 runs are shown. Use \n-a, --all\n to show\nall runs, or \n-m\n to show more 20 more runs. You may use \n-m\n\nmultiple times.\n\n\nRun indexes are included in list output for a specific listing,\nwhich is based on the available runs, their states, and the\nspecified filters. You may use the indexes in run selection\ncommands (e.g. \nruns delete\n, \ncompare\n, etc.) but note that\nthese indexes will change as runs are started, deleted, or run\nstatus changes.\n\n\nTo show run detail, use \n--verbose\n.\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nShow deleted runs\n\n\nUse \n--deleted\n to show deleted runs. You can use the listing for\nrun IDs and indexes to use in \nruns restore\n (restore runs) and\n\nruns purge\n (permanently delete runs).\n\n\nShow archives runs\n\n\nUse \n--archive\n to show runs in an archive directory. This option\nmay not be used with \n--delete\n.\n\n\nShow remote runs\n\n\nTo list runs on a remote, specify \n--remote REMOTE\n. Use \nguild\nremotes\n to list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-d, --deleted\n\n        \nShow deleted runs.\n\n      \n\n      \n      \n\n        \n--archive DIR\n\n        \nShow archived runs in DIR\n\n      \n\n      \n      \n\n        \n-a, --all\n\n        \nShow all runs (by default only the last 20 runs are shown)\n\n      \n\n      \n      \n\n        \n-m, --more\n\n        \nShow 20 more runs. Maybe used multiple times.\n\n      \n\n      \n      \n\n        \n--json\n\n        \nFormat runs as JSON.\n\n      \n\n      \n      \n\n        \n-v, --verbose\n\n        \nShow run details.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nList runs on REMOTE rather than local runs.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs list command"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#runs-list-command", 
            "text": "Usage  Filtering by operation and label  Filtering by run status  Show deleted runs  Show archives runs  Show remote runs    Options", 
            "title": "runs list command"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#usage", 
            "text": "guild runs list [OPTIONS] \n   \n     List runs.  Run lists may be filtered using a variety of options. See below\nfor details.  By default, the last 20 runs are shown. Use  -a, --all  to show\nall runs, or  -m  to show more 20 more runs. You may use  -m \nmultiple times.  Run indexes are included in list output for a specific listing,\nwhich is based on the available runs, their states, and the\nspecified filters. You may use the indexes in run selection\ncommands (e.g.  runs delete ,  compare , etc.) but note that\nthese indexes will change as runs are started, deleted, or run\nstatus changes.  To show run detail, use  --verbose .", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#show-deleted-runs", 
            "text": "Use  --deleted  to show deleted runs. You can use the listing for\nrun IDs and indexes to use in  runs restore  (restore runs) and runs purge  (permanently delete runs).", 
            "title": "Show deleted runs"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#show-archives-runs", 
            "text": "Use  --archive  to show runs in an archive directory. This option\nmay not be used with  --delete .", 
            "title": "Show archives runs"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#show-remote-runs", 
            "text": "To list runs on a remote, specify  --remote REMOTE . Use  guild\nremotes  to list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Show remote runs"
        }, 
        {
            "location": "/docs/commands/runs-list-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -d, --deleted \n         Show deleted runs. \n       \n      \n       \n         --archive DIR \n         Show archived runs in DIR \n       \n      \n       \n         -a, --all \n         Show all runs (by default only the last 20 runs are shown) \n       \n      \n       \n         -m, --more \n         Show 20 more runs. Maybe used multiple times. \n       \n      \n       \n         --json \n         Format runs as JSON. \n       \n      \n       \n         -v, --verbose \n         Show run details. \n       \n      \n       \n         -r, --remote REMOTE \n         List runs on REMOTE rather than local runs. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-pull-cmd/", 
            "text": "runs pull command\n\n\n\n\nUsage\n\n\nRemotes\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs pull [OPTIONS] [RUN...] REMOTE\n\n  \n\n    \nCopy one or more runs from a remote location.\n\n\nRUN\n must be the complete run ID of the remote run.\n\n\nNOTE:\n Guild does not currently support listing remote runs. To\npull specific runs, query the remote server for the full run ID of\neach run you want to pull.\n\n\nYou may alternatively use \n--all\n to pull all remote runs. If\n\n--all\n is specified, \nRUN\n arguments cannot be specified.\n\n\n--verbose\n is always enabled when \n--all\n is specified.\n\n\nREMOTE\n must be define in \n~/.guild/config.yml\n. See REMOTES\nbelow for more information.\n\n\nBy default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the \n--yes\n\noption.\n\n\nRemotes\n\n\nRemotes are non-local systems that Guild can interact with. They\nare defined in \n~/.guild/config.yml\n under the \nremotes\n\nsection.\n\n\nFor a list of supported remotes, see\n\nhttps://guild.ai/docs/remotes/\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-n, --no-delete\n\n        \nDon't delete local files missing on remote.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before copying.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs pull command"
        }, 
        {
            "location": "/docs/commands/runs-pull-cmd/#runs-pull-command", 
            "text": "Usage  Remotes    Options", 
            "title": "runs pull command"
        }, 
        {
            "location": "/docs/commands/runs-pull-cmd/#usage", 
            "text": "guild runs pull [OPTIONS] [RUN...] REMOTE \n   \n     Copy one or more runs from a remote location.  RUN  must be the complete run ID of the remote run.  NOTE:  Guild does not currently support listing remote runs. To\npull specific runs, query the remote server for the full run ID of\neach run you want to pull.  You may alternatively use  --all  to pull all remote runs. If --all  is specified,  RUN  arguments cannot be specified.  --verbose  is always enabled when  --all  is specified.  REMOTE  must be define in  ~/.guild/config.yml . See REMOTES\nbelow for more information.  By default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the  --yes \noption.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-pull-cmd/#remotes", 
            "text": "Remotes are non-local systems that Guild can interact with. They\nare defined in  ~/.guild/config.yml  under the  remotes \nsection.  For a list of supported remotes, see https://guild.ai/docs/remotes/", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/commands/runs-pull-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -n, --no-delete \n         Don't delete local files missing on remote. \n       \n      \n       \n         -y, --yes \n         Do not prompt before copying. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/", 
            "text": "runs purge command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nPermanently deleting remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs purge [OPTIONS] [RUN...]\n\n  \n\n    \nPermanentaly delete one or more deleted runs.\n\n\nWARNING\n: Purged runs cannot be recovered!\n\n\nRuns are purged (i.e. permanently deleted) by selecting them with\n\nRUN\n arguments. If a \nRUN\n argument is not specified, all runs\nmatching the filter criteria are purged. See SELECTING RUNS and\nFILTERING topics below for more information on how runs are\nselected.\n\n\nUse \nguild runs list --deleted\n for a list of runs that can be\npurged.\n\n\nBy default, Guild will display the list of runs to be purged and\nask you to confirm the operation. If you want to purge the runs\nwithout being prompted, use the \n--yes\n option.\n\n\nWARNING\n: Take care when purging runs using indexes as the runs\nselected with indexes can change. Review the list of runs\ncarefully before confirming a purge operation.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nPermanently deleting remote runs\n\n\nIf a run has been deleted remotely, you can permanently delete it\nusing \n--remote\n provided the remote type supports deleted run\nrecovery.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nPermanently delete remote runs.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before purging.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs purge command"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/#runs-purge-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status  Permanently deleting remote runs    Options", 
            "title": "runs purge command"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/#usage", 
            "text": "guild runs purge [OPTIONS] [RUN...] \n   \n     Permanentaly delete one or more deleted runs.  WARNING : Purged runs cannot be recovered!  Runs are purged (i.e. permanently deleted) by selecting them with RUN  arguments. If a  RUN  argument is not specified, all runs\nmatching the filter criteria are purged. See SELECTING RUNS and\nFILTERING topics below for more information on how runs are\nselected.  Use  guild runs list --deleted  for a list of runs that can be\npurged.  By default, Guild will display the list of runs to be purged and\nask you to confirm the operation. If you want to purge the runs\nwithout being prompted, use the  --yes  option.  WARNING : Take care when purging runs using indexes as the runs\nselected with indexes can change. Review the list of runs\ncarefully before confirming a purge operation.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/#permanently-deleting-remote-runs", 
            "text": "If a run has been deleted remotely, you can permanently delete it\nusing  --remote  provided the remote type supports deleted run\nrecovery.  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Permanently deleting remote runs"
        }, 
        {
            "location": "/docs/commands/runs-purge-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -r, --remote REMOTE \n         Permanently delete remote runs. \n       \n      \n       \n         -y, --yes \n         Do not prompt before purging. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/", 
            "text": "runs push command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nRemotes\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs push [OPTIONS] [RUN...] REMOTE\n\n  \n\n    \nCopy one or more runs to a remote location.\n\n\nREMOTE\n must be define in \n~/.guild/config.yml\n. See REMOTES\nbelow for more information.\n\n\nBy default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the \n--yes\n\noption.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nRemotes\n\n\nRemotes are non-local systems that Guild can interact with. They\nare defined in \n~/.guild/config.yml\n under the \nremotes\n\nsection.\n\n\nFor a list of supported remotes, see\n\nhttps://guild.ai/docs/remotes/\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-n, --no-delete\n\n        \nDon't delete remote files missing locally.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before copying.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs push command"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/#runs-push-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status  Remotes    Options", 
            "title": "runs push command"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/#usage", 
            "text": "guild runs push [OPTIONS] [RUN...] REMOTE \n   \n     Copy one or more runs to a remote location.  REMOTE  must be define in  ~/.guild/config.yml . See REMOTES\nbelow for more information.  By default Guild will prompt you before copying. If you want to\napply the changes without being prompted, use the  --yes \noption.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/#remotes", 
            "text": "Remotes are non-local systems that Guild can interact with. They\nare defined in  ~/.guild/config.yml  under the  remotes \nsection.  For a list of supported remotes, see https://guild.ai/docs/remotes/", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/commands/runs-push-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -n, --no-delete \n         Don't delete remote files missing locally. \n       \n      \n       \n         -y, --yes \n         Do not prompt before copying. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/", 
            "text": "runs restore command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nFiltering by run status\n\n\nRestoring remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs restore [OPTIONS] [RUN...]\n\n  \n\n    \nRestore one or more deleted runs.\n\n\nRuns are restored by selecting them with \nRUN\n arguments. If a\n\nRUN\n argument is not specified, all runs matching the filter\ncriteria are restored. See SELECTING RUNS and FILTERING topics\nbelow for more information on how runs are selected.\n\n\nUse \nguild runs list --deleted\n for a list of runs that can be\nrestored.\n\n\nBy default, Guild will display the list of runs to be restored and\nask you to confirm the operation. If you want to restore the runs\nwithout being prompted, use the \n--yes\n option.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nFiltering by run status\n\n\nRuns may also be filtered by specifying one or more status\nfilters: \n--running\n, \n--completed\n, \n--error\n, and\n\n--terminated\n. These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use \n--terminated\n--error\n, or the short form \n-ET\n.\n\n\nStatus filters are applied before \nRUN\n indexes are resolved. For\nexample, a run index of \n1\n is the latest run that matches the\nstatus filters.\n\n\nRestoring remote runs\n\n\nIf a run has been deleted remotely, you can restore it using\n\n--remote\n provided the remote type supports this feature.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nRestore remote runs.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before restoring.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs restore command"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/#runs-restore-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Filtering by run status  Restoring remote runs    Options", 
            "title": "runs restore command"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/#usage", 
            "text": "guild runs restore [OPTIONS] [RUN...] \n   \n     Restore one or more deleted runs.  Runs are restored by selecting them with  RUN  arguments. If a RUN  argument is not specified, all runs matching the filter\ncriteria are restored. See SELECTING RUNS and FILTERING topics\nbelow for more information on how runs are selected.  Use  guild runs list --deleted  for a list of runs that can be\nrestored.  By default, Guild will display the list of runs to be restored and\nask you to confirm the operation. If you want to restore the runs\nwithout being prompted, use the  --yes  option.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/#filtering-by-run-status", 
            "text": "Runs may also be filtered by specifying one or more status\nfilters:  --running ,  --completed ,  --error , and --terminated . These may be used together to include runs that\nmatch any of the filters. For example to only include runs that\nwere either terminated or exited with an error, use  --terminated\n--error , or the short form  -ET .  Status filters are applied before  RUN  indexes are resolved. For\nexample, a run index of  1  is the latest run that matches the\nstatus filters.", 
            "title": "Filtering by run status"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/#restoring-remote-runs", 
            "text": "If a run has been deleted remotely, you can restore it using --remote  provided the remote type supports this feature.  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Restoring remote runs"
        }, 
        {
            "location": "/docs/commands/runs-restore-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         -r, --remote REMOTE \n         Restore remote runs. \n       \n      \n       \n         -y, --yes \n         Do not prompt before restoring. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/runs-stop-cmd/", 
            "text": "runs stop command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nStopping remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild runs stop [OPTIONS] [RUN...]\n\n  \n\n    \nStop one or more runs.\n\n\nRuns are stopped by specifying one or more RUN arguments. See\nSELECTING RUNS and FILTER topics below for information on\nselecting runs to be stopped.\n\n\nOnly runs with status of 'running' are considered for this\noperation.\n\n\nIf a \nRUN\n is not specified, the latest selected run is stopped.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n0\n is assumed (the most\nrecent run with status 'running').\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nStopping remote runs\n\n\nTo stop remote runs, use \n--remote\n.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nStop remote runs.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before stopping.\n\n      \n\n      \n      \n\n        \n-n, --no-wait\n\n        \nDon't wait for remote runs to stop.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "runs stop command"
        }, 
        {
            "location": "/docs/commands/runs-stop-cmd/#runs-stop-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Stopping remote runs    Options", 
            "title": "runs stop command"
        }, 
        {
            "location": "/docs/commands/runs-stop-cmd/#usage", 
            "text": "guild runs stop [OPTIONS] [RUN...] \n   \n     Stop one or more runs.  Runs are stopped by specifying one or more RUN arguments. See\nSELECTING RUNS and FILTER topics below for information on\nselecting runs to be stopped.  Only runs with status of 'running' are considered for this\noperation.  If a  RUN  is not specified, the latest selected run is stopped.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/runs-stop-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  0  is assumed (the most\nrecent run with status 'running').", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/runs-stop-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/runs-stop-cmd/#stopping-remote-runs", 
            "text": "To stop remote runs, use  --remote .  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Stopping remote runs"
        }, 
        {
            "location": "/docs/commands/runs-stop-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -r, --remote REMOTE \n         Stop remote runs. \n       \n      \n       \n         -y, --yes \n         Do not prompt before stopping. \n       \n      \n       \n         -n, --no-wait \n         Don't wait for remote runs to stop. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/search-cmd/", 
            "text": "search command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild search [OPTIONS] TERM...\n\n  \n\n    \nSearch for a package.\n\n\nSpecify one or more \nTERM\n arguments to search for.\n\n\nBy default, only Guild packages are returned. To search all\npackages, use the \n--all\n option.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-a, --all\n\n        \nSearch all packages.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "search command"
        }, 
        {
            "location": "/docs/commands/search-cmd/#search-command", 
            "text": "Usage  Options", 
            "title": "search command"
        }, 
        {
            "location": "/docs/commands/search-cmd/#usage", 
            "text": "guild search [OPTIONS] TERM... \n   \n     Search for a package.  Specify one or more  TERM  arguments to search for.  By default, only Guild packages are returned. To search all\npackages, use the  --all  option.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/search-cmd/#options", 
            "text": "-a, --all \n         Search all packages. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/shell-cmd/", 
            "text": "shell command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild shell [OPTIONS]\n\n  \n\n    \nStart a Python shell for API use.\n\n\nNOTE:\n This is a developer feature.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "shell command"
        }, 
        {
            "location": "/docs/commands/shell-cmd/#shell-command", 
            "text": "Usage  Options", 
            "title": "shell command"
        }, 
        {
            "location": "/docs/commands/shell-cmd/#usage", 
            "text": "guild shell [OPTIONS] \n   \n     Start a Python shell for API use.  NOTE:  This is a developer feature.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/shell-cmd/#options", 
            "text": "--help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/stop-cmd/", 
            "text": "stop command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\nStopping remote runs\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild stop [OPTIONS] [RUN...]\n\n  \n\n    \nStop one or more runs.\n\n\nRuns are stopped by specifying one or more RUN arguments. See\nSELECTING RUNS and FILTER topics below for information on\nselecting runs to be stopped.\n\n\nOnly runs with status of 'running' are considered for this\noperation.\n\n\nIf a \nRUN\n is not specified, the latest selected run is stopped.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n0\n is assumed (the most\nrecent run with status 'running').\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nStopping remote runs\n\n\nTo stop remote runs, use \n--remote\n.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nStop remote runs.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before stopping.\n\n      \n\n      \n      \n\n        \n-n, --no-wait\n\n        \nDon't wait for remote runs to stop.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "stop command"
        }, 
        {
            "location": "/docs/commands/stop-cmd/#stop-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label  Stopping remote runs    Options", 
            "title": "stop command"
        }, 
        {
            "location": "/docs/commands/stop-cmd/#usage", 
            "text": "guild stop [OPTIONS] [RUN...] \n   \n     Stop one or more runs.  Runs are stopped by specifying one or more RUN arguments. See\nSELECTING RUNS and FILTER topics below for information on\nselecting runs to be stopped.  Only runs with status of 'running' are considered for this\noperation.  If a  RUN  is not specified, the latest selected run is stopped.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/stop-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  0  is assumed (the most\nrecent run with status 'running').", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/stop-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/stop-cmd/#stopping-remote-runs", 
            "text": "To stop remote runs, use  --remote .  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Stopping remote runs"
        }, 
        {
            "location": "/docs/commands/stop-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -r, --remote REMOTE \n         Stop remote runs. \n       \n      \n       \n         -y, --yes \n         Do not prompt before stopping. \n       \n      \n       \n         -n, --no-wait \n         Don't wait for remote runs to stop. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/sync-cmd/", 
            "text": "sync command\n\n\n\n\nUsage\n\n\nSelecting runs\n\n\nFiltering by operation and label\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild sync [OPTIONS] [RUN...]\n\n  \n\n    \nSynchronize remote runs.\n\n\nA remote run is an operation that runs on another system. Guild\nkeeps track of where each remote run is located and can\nsynchronize with it. This includes downloading files generated by\nthe run as well as updating run status.\n\n\nBy default, Guild synchronizes once with the remote run and\nexits. If you want to automatically synchronize with the run while\nwatching its output, use the \n--watch\n option.\n\n\nYou can only watch one running operation at a time. If you don't\nspecify a RUN with the \n--watch\n option, Guild will watch the most\nrecently started running operation.\n\n\nWhen a remote status stops (it finished successfully, is\nterminated, or exits with an error), Guild will no longer\nsynchronize with it.\n\n\nYou can synchronize specific runs by selecting them using \nRUN\n\narguments. For more information, see SELECTING RUNS and FILTERING\ntopics below.\n\n\nSelecting runs\n\n\nYou may use one or more \nRUN\n arguments to limit the runs that are\nselected. \nRUN\n may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.\n\n\nIndexes may also be specified in ranges in the form \nSTART:END\n\nwhere \nSTART\n is the start index and \nEND\n is the end\nindex. Either \nSTART\n or \nEND\n may be omitted. If \nSTART\n is\nomitted, all runs up to \nEND\n are selected. If \nEND\n id omitted,\nall runs from \nSTART\n on are selected. If both \nSTART\n and \nEND\n\nare omitted (i.e. the \n:\n char is used by itself) all runs are\nselected.\n\n\nIf a \nRUN\n argument is not specified, \n:\n is assumed (all runs\nare selected).\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-w, --watch\n\n        \nWatch a remote run and synchronize in the background.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "sync command"
        }, 
        {
            "location": "/docs/commands/sync-cmd/#sync-command", 
            "text": "Usage  Selecting runs  Filtering by operation and label    Options", 
            "title": "sync command"
        }, 
        {
            "location": "/docs/commands/sync-cmd/#usage", 
            "text": "guild sync [OPTIONS] [RUN...] \n   \n     Synchronize remote runs.  A remote run is an operation that runs on another system. Guild\nkeeps track of where each remote run is located and can\nsynchronize with it. This includes downloading files generated by\nthe run as well as updating run status.  By default, Guild synchronizes once with the remote run and\nexits. If you want to automatically synchronize with the run while\nwatching its output, use the  --watch  option.  You can only watch one running operation at a time. If you don't\nspecify a RUN with the  --watch  option, Guild will watch the most\nrecently started running operation.  When a remote status stops (it finished successfully, is\nterminated, or exits with an error), Guild will no longer\nsynchronize with it.  You can synchronize specific runs by selecting them using  RUN \narguments. For more information, see SELECTING RUNS and FILTERING\ntopics below.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/sync-cmd/#selecting-runs", 
            "text": "You may use one or more  RUN  arguments to limit the runs that are\nselected.  RUN  may be a run ID, a run ID prefix, or a one-based\nindex corresponding to a run returned by the list command.  Indexes may also be specified in ranges in the form  START:END \nwhere  START  is the start index and  END  is the end\nindex. Either  START  or  END  may be omitted. If  START  is\nomitted, all runs up to  END  are selected. If  END  id omitted,\nall runs from  START  on are selected. If both  START  and  END \nare omitted (i.e. the  :  char is used by itself) all runs are\nselected.  If a  RUN  argument is not specified,  :  is assumed (all runs\nare selected).", 
            "title": "Selecting runs"
        }, 
        {
            "location": "/docs/commands/sync-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/sync-cmd/#options", 
            "text": "-w, --watch \n         Watch a remote run and synchronize in the background. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/tensorboard-cmd/", 
            "text": "tensorboard command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild tensorboard [OPTIONS] [RUN...]\n\n  \n\n    \nVisualize runs with TensorBoard.\n\n\nThis command will start a TensorBoard process and open a browser\nwindow for you. TensorBoard will show the views that are selected\nusing the commands filters. This list corresponds to the the runs\nshown when running \nguild runs\n.\n\n\nThis command will not exit until you type \nCTRL-c\n to stop it.\n\n\nIf you'd like to change the filters used to select runs, stop the\ncommand and re-run it with a different set of filters. You may\nalternatively start another instance of TensorBoard in a separate\nconsole.\n\n\nTensorBoard will automatically refresh with the current run data.\n\n\nIf you're prefer that Guild not open a browser window, run the\ncommand with the \n--no-open\n option.\n\n\nBy default, Guild will start the TensorBoard process on a randomly\nselected free port. If you'd like to specify the port that\nTensorBoard runs on, use the \n--port\n option.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-h, --host HOST\n\n        \nName of host interface to listen on.\n\n      \n\n      \n      \n\n        \n-p, --port PORT\n\n        \nPort to listen on.\n\n      \n\n      \n      \n\n        \n--refresh-interval SECONDS\n\n        \nRefresh interval (defaults to 5 seconds).\n\n      \n\n      \n      \n\n        \n-n, --no-open\n\n        \nDon't open TensorBoard in a browser.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "tensorboard command"
        }, 
        {
            "location": "/docs/commands/tensorboard-cmd/#tensorboard-command", 
            "text": "Usage  Options", 
            "title": "tensorboard command"
        }, 
        {
            "location": "/docs/commands/tensorboard-cmd/#usage", 
            "text": "guild tensorboard [OPTIONS] [RUN...] \n   \n     Visualize runs with TensorBoard.  This command will start a TensorBoard process and open a browser\nwindow for you. TensorBoard will show the views that are selected\nusing the commands filters. This list corresponds to the the runs\nshown when running  guild runs .  This command will not exit until you type  CTRL-c  to stop it.  If you'd like to change the filters used to select runs, stop the\ncommand and re-run it with a different set of filters. You may\nalternatively start another instance of TensorBoard in a separate\nconsole.  TensorBoard will automatically refresh with the current run data.  If you're prefer that Guild not open a browser window, run the\ncommand with the  --no-open  option.  By default, Guild will start the TensorBoard process on a randomly\nselected free port. If you'd like to specify the port that\nTensorBoard runs on, use the  --port  option.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/tensorboard-cmd/#options", 
            "text": "-h, --host HOST \n         Name of host interface to listen on. \n       \n      \n       \n         -p, --port PORT \n         Port to listen on. \n       \n      \n       \n         --refresh-interval SECONDS \n         Refresh interval (defaults to 5 seconds). \n       \n      \n       \n         -n, --no-open \n         Don't open TensorBoard in a browser. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/tensorflow-cmd/", 
            "text": "tensorflow command\n\n\n\n\nUsage\n\n\nOptions\n\n\nSubcommands\n\n\n\n\n\n  \nUsage\n\n  \nguild tensorflow [OPTIONS] COMMAND [ARGS]...\n\n  \n\n    \nCollection of TensorFlow tools.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nSubcommands\n\n  \n\n    \n\n      \n      \n\n        \ninspect\n\n        \nInspect a TensorFlow checkpoint file.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "tensorflow command"
        }, 
        {
            "location": "/docs/commands/tensorflow-cmd/#tensorflow-command", 
            "text": "Usage  Options  Subcommands", 
            "title": "tensorflow command"
        }, 
        {
            "location": "/docs/commands/tensorflow-cmd/#usage", 
            "text": "guild tensorflow [OPTIONS] COMMAND [ARGS]... \n   \n     Collection of TensorFlow tools.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/tensorflow-cmd/#options", 
            "text": "--help \n         Show command help and exit.", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/tensorflow-cmd/#subcommands", 
            "text": "inspect \n         Inspect a TensorFlow checkpoint file. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Subcommands"
        }, 
        {
            "location": "/docs/commands/tensorflow-inspect-cmd/", 
            "text": "tensorflow inspect command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild tensorflow inspect [OPTIONS] PATH\n\n  \n\n    \nInspect a TensorFlow checkpoint file.\n\n\nPATH\n is the path to the checkpoint file (usually ending in\n\n.ckpt\n).\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n--tensor-name NAME\n\n        \nName of the tensor to inspect.\n\n      \n\n      \n      \n\n        \n--all-tensors\n\n        \nPrint the values of all the tensors.\n\n      \n\n      \n      \n\n        \n--all-tensor-names\n\n        \nPrint the name of all the tensors\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "tensorflow inspect command"
        }, 
        {
            "location": "/docs/commands/tensorflow-inspect-cmd/#tensorflow-inspect-command", 
            "text": "Usage  Options", 
            "title": "tensorflow inspect command"
        }, 
        {
            "location": "/docs/commands/tensorflow-inspect-cmd/#usage", 
            "text": "guild tensorflow inspect [OPTIONS] PATH \n   \n     Inspect a TensorFlow checkpoint file.  PATH  is the path to the checkpoint file (usually ending in .ckpt ).", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/tensorflow-inspect-cmd/#options", 
            "text": "--tensor-name NAME \n         Name of the tensor to inspect. \n       \n      \n       \n         --all-tensors \n         Print the values of all the tensors. \n       \n      \n       \n         --all-tensor-names \n         Print the name of all the tensors \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/test-cmd/", 
            "text": "test command\n\n\n\n\nUsage\n\n\nEnvironments\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild test [OPTIONS] [PATH_OR_PACKAGE]\n\n  \n\n    \nRun model or package tests.\n\n\nBy default, tests are run for a Guild file in the current\ndirectory. \nPATH_OR_PACKGE\n may be specified to run tests in a\ndifferent directory or for an installed package.\n\n\nUse one or more \n--test\n options to run specific tests in the\norder specified. If no tests are specified, runs all of the tests\ndefined in the referenced Guild file or package.\n\n\nUse one or more \n--model\n or \n--operation\n options to limit tests\nto the specified models and operations respectively.\n\n\nIn cases where multiple models may be tested in a\n\nfor-each-model\n step, you may use \n--one-model\n to limit tests\nto the first model. This is useful for reducing the test time at\nthe expense of test coverage.\n\n\nBy default all tests are run even if one or more tests fail. To\nstop testing on the first failed test, use \n--stop-on-fail\n.\n\n\nEnvironments\n\n\nTests are run in the current environment. If you want to isolate\ntests from other environments, you must create a test-specific\nenvironment activate it before running \ntest\n.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-t, --test [TEST]...\n\n        \nRun a specific test. May be used multiple times.\n\n      \n\n      \n      \n\n        \n-m, --model MODEL\n\n        \nOnly test operations for MODEL. May be used multiple times. Use with \n--operation\n to further limit tests.\n\n      \n\n      \n      \n\n        \n-o, --operation NAME\n\n        \nOnly test operation NAME. May be used multiple times. Use with \n--model\n to limit operation to specific models.\n\n      \n\n      \n      \n\n        \n-1, --one-model\n\n        \nOnly test operations for the first model in a for-each-model step.\n\n      \n\n      \n      \n\n        \n-s, --stop-on-fail\n\n        \nStop testing after the first failed test.\n\n      \n\n      \n      \n\n        \n--gpus DEVICES\n\n        \nLimit availabe GPUs to DEVICES, a comma separated list of device IDs. By default all GPUs are available. Cannot beused with --no-gpus.\n\n      \n\n      \n      \n\n        \n--no-gpus\n\n        \nDisable GPUs for tests. Cannot be used with --gpu.\n\n      \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before running tests.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "test command"
        }, 
        {
            "location": "/docs/commands/test-cmd/#test-command", 
            "text": "Usage  Environments    Options", 
            "title": "test command"
        }, 
        {
            "location": "/docs/commands/test-cmd/#usage", 
            "text": "guild test [OPTIONS] [PATH_OR_PACKAGE] \n   \n     Run model or package tests.  By default, tests are run for a Guild file in the current\ndirectory.  PATH_OR_PACKGE  may be specified to run tests in a\ndifferent directory or for an installed package.  Use one or more  --test  options to run specific tests in the\norder specified. If no tests are specified, runs all of the tests\ndefined in the referenced Guild file or package.  Use one or more  --model  or  --operation  options to limit tests\nto the specified models and operations respectively.  In cases where multiple models may be tested in a for-each-model  step, you may use  --one-model  to limit tests\nto the first model. This is useful for reducing the test time at\nthe expense of test coverage.  By default all tests are run even if one or more tests fail. To\nstop testing on the first failed test, use  --stop-on-fail .", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/test-cmd/#environments", 
            "text": "Tests are run in the current environment. If you want to isolate\ntests from other environments, you must create a test-specific\nenvironment activate it before running  test .", 
            "title": "Environments"
        }, 
        {
            "location": "/docs/commands/test-cmd/#options", 
            "text": "-t, --test [TEST]... \n         Run a specific test. May be used multiple times. \n       \n      \n       \n         -m, --model MODEL \n         Only test operations for MODEL. May be used multiple times. Use with  --operation  to further limit tests. \n       \n      \n       \n         -o, --operation NAME \n         Only test operation NAME. May be used multiple times. Use with  --model  to limit operation to specific models. \n       \n      \n       \n         -1, --one-model \n         Only test operations for the first model in a for-each-model step. \n       \n      \n       \n         -s, --stop-on-fail \n         Stop testing after the first failed test. \n       \n      \n       \n         --gpus DEVICES \n         Limit availabe GPUs to DEVICES, a comma separated list of device IDs. By default all GPUs are available. Cannot beused with --no-gpus. \n       \n      \n       \n         --no-gpus \n         Disable GPUs for tests. Cannot be used with --gpu. \n       \n      \n       \n         -y, --yes \n         Do not prompt before running tests. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/uninstall-cmd/", 
            "text": "uninstall command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild uninstall [OPTIONS] PACKAGE...\n\n  \n\n    \nUninstall one or more packages.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-y, --yes\n\n        \nDo not prompt before uninstalling.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "uninstall command"
        }, 
        {
            "location": "/docs/commands/uninstall-cmd/#uninstall-command", 
            "text": "Usage  Options", 
            "title": "uninstall command"
        }, 
        {
            "location": "/docs/commands/uninstall-cmd/#usage", 
            "text": "guild uninstall [OPTIONS] PACKAGE... \n   \n     Uninstall one or more packages.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/uninstall-cmd/#options", 
            "text": "-y, --yes \n         Do not prompt before uninstalling. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/view-cmd/", 
            "text": "view command\n\n\n\n\nUsage\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild view [OPTIONS] [RUN...]\n\n  \n\n    \nVisualize runs.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-h, --host HOST\n\n        \nName of host interface to listen on.\n\n      \n\n      \n      \n\n        \n-p, --port PORT\n\n        \nPort to listen on.\n\n      \n\n      \n      \n\n        \n-n, --no-open\n\n        \nDon't open Guild View in a browser.\n\n      \n\n      \n      \n\n        \n--logging\n\n        \nLog requests.\n\n      \n\n      \n      \n\n        \n--files\n\n        \nView run files using file browser rather than start Guild View. Guild View related options (\n--no-open\n, \n--logging\n) are ignored.\n\n      \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-R, --running\n\n        \nInclude only runs that are still running.\n\n      \n\n      \n      \n\n        \n-C, --completed\n\n        \nInclude only completed runs.\n\n      \n\n      \n      \n\n        \n-E, --error\n\n        \nInclude only runs that exited with an error.\n\n      \n\n      \n      \n\n        \n-T, --terminated\n\n        \nInclude only runs terminated by the user.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "view command"
        }, 
        {
            "location": "/docs/commands/view-cmd/#view-command", 
            "text": "Usage  Options", 
            "title": "view command"
        }, 
        {
            "location": "/docs/commands/view-cmd/#usage", 
            "text": "guild view [OPTIONS] [RUN...] \n   \n     Visualize runs.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/view-cmd/#options", 
            "text": "-h, --host HOST \n         Name of host interface to listen on. \n       \n      \n       \n         -p, --port PORT \n         Port to listen on. \n       \n      \n       \n         -n, --no-open \n         Don't open Guild View in a browser. \n       \n      \n       \n         --logging \n         Log requests. \n       \n      \n       \n         --files \n         View run files using file browser rather than start Guild View. Guild View related options ( --no-open ,  --logging ) are ignored. \n       \n      \n       \n         -o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -R, --running \n         Include only runs that are still running. \n       \n      \n       \n         -C, --completed \n         Include only completed runs. \n       \n      \n       \n         -E, --error \n         Include only runs that exited with an error. \n       \n      \n       \n         -T, --terminated \n         Include only runs terminated by the user. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/commands/watch-cmd/", 
            "text": "watch command\n\n\n\n\nUsage\n\n\nSelecting a run\n\n\nFiltering by operation and label\n\n\nWatching remote runs\n\n\nWatching run by PID\n\n\n\n\n\n\nOptions\n\n\n\n\n\n  \nUsage\n\n  \nguild watch [OPTIONS] [RUN]\n\n  \n\n    \nWatch run output.\n\n\nBy default, the command will watch output from the current running\noperation.\n\n\nSelecting a run\n\n\nYou may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.\n\n\nFiltering by operation and label\n\n\nRuns may be filtered by operation using \n--operation\n.  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.\n\n\nUse \n--label\n to only include runs with labels matching a\nspecified value.\n\n\n--operation\n and \n--label\n may be used multiple times to expand\nthe runs that are included.\n\n\nUse \n--unlabeled\n to only include runs without labels. This option\nmay not be used with \n--label\n.\n\n\nWatching remote runs\n\n\nUse \n--remote\n to watch a remote run.\n\n\nREMOTE\n is the name of a configured remote. Use \nguild remotes\n\nto list available remotes.\n\n\nFor information on configuring remotes, see \nremotes\n.\n\n\nWatching run by PID\n\n\nYou may alternatively specify the process ID of the run to watch,\nusing \n--pid\n. \nPID\n may be a process ID or a path to a file\ncontaining a process ID.\n\n\nPID may not be specified with other options.\n\n  \n\n  \nOptions\n\n  \n\n    \n\n      \n      \n\n        \n-o, --operation VAL\n\n        \nInclude runs with operations matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-l, --label VAL\n\n        \nInclude runs with labels matching \nVAL\n.\n\n      \n\n      \n      \n\n        \n-u, --unlabeled\n\n        \nInclude only runs without labels.\n\n      \n\n      \n      \n\n        \n-r, --remote REMOTE\n\n        \nWatch a remote run.\n\n      \n\n      \n      \n\n        \n--pid PID\n\n        \nWatch the run associated with the specified process. PID may be a process ID or a path to a file containing a process ID.\n\n      \n\n      \n      \n\n        \n--help\n\n        \nShow command help and exit.\n\n      \n\n      \n    \n\n  \n\n  \n  \nGuild AI version 0.5.0.rc1", 
            "title": "watch command"
        }, 
        {
            "location": "/docs/commands/watch-cmd/#watch-command", 
            "text": "Usage  Selecting a run  Filtering by operation and label  Watching remote runs  Watching run by PID    Options", 
            "title": "watch command"
        }, 
        {
            "location": "/docs/commands/watch-cmd/#usage", 
            "text": "guild watch [OPTIONS] [RUN] \n   \n     Watch run output.  By default, the command will watch output from the current running\noperation.", 
            "title": "Usage"
        }, 
        {
            "location": "/docs/commands/watch-cmd/#selecting-a-run", 
            "text": "You may specify a run using a run ID, a run ID prefix, or a\none-based index corresponding to a run returned by the list\ncommand.", 
            "title": "Selecting a run"
        }, 
        {
            "location": "/docs/commands/watch-cmd/#filtering-by-operation-and-label", 
            "text": "Runs may be filtered by operation using  --operation .  A run is\nonly included if any part of its full operation name, including\nthe package and model name, matches the value.  Use  --label  to only include runs with labels matching a\nspecified value.  --operation  and  --label  may be used multiple times to expand\nthe runs that are included.  Use  --unlabeled  to only include runs without labels. This option\nmay not be used with  --label .", 
            "title": "Filtering by operation and label"
        }, 
        {
            "location": "/docs/commands/watch-cmd/#watching-remote-runs", 
            "text": "Use  --remote  to watch a remote run.  REMOTE  is the name of a configured remote. Use  guild remotes \nto list available remotes.  For information on configuring remotes, see  remotes .", 
            "title": "Watching remote runs"
        }, 
        {
            "location": "/docs/commands/watch-cmd/#watching-run-by-pid", 
            "text": "You may alternatively specify the process ID of the run to watch,\nusing  --pid .  PID  may be a process ID or a path to a file\ncontaining a process ID.  PID may not be specified with other options.", 
            "title": "Watching run by PID"
        }, 
        {
            "location": "/docs/commands/watch-cmd/#options", 
            "text": "-o, --operation VAL \n         Include runs with operations matching  VAL . \n       \n      \n       \n         -l, --label VAL \n         Include runs with labels matching  VAL . \n       \n      \n       \n         -u, --unlabeled \n         Include only runs without labels. \n       \n      \n       \n         -r, --remote REMOTE \n         Watch a remote run. \n       \n      \n       \n         --pid PID \n         Watch the run associated with the specified process. PID may be a process ID or a path to a file containing a process ID. \n       \n      \n       \n         --help \n         Show command help and exit. \n       \n      \n     \n   \n  \n   Guild AI version 0.5.0.rc1", 
            "title": "Options"
        }, 
        {
            "location": "/docs/reference/guild-file/", 
            "text": "Guild file\n\n\n\n\nTop level objects\n\n\nExamples\n\n\n\n\n\n\nInheritance\n\n\nExamples\n\n\n\n\n\n\nPackages\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\nModels\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\nOperations\n\n\nAttributes\n\n\n\n\n\n\nFlags\n\n\nAttributes\n\n\n\n\n\n\nFlag choices\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\nResources\n\n\nAttributes\n\n\n\n\n\n\nResource sources\n\n\nSource type\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\n\n\nGuild files are files named \nguild.yml\n that contain information that\nGuild needs to perform an operation.\n\n\nGuild files are authored in \nYAML\n.\n\n\nTop level objects\n\n\nGuild files may contain a single top-level object or a list of\ntop-level objects.\n\n\nA top-level object may one of:\n\n\n\n\npackage\n\n\nmodel\n\n\nconfig\n\n\n\n\nTop-level objects are identified by the presence of an identifying\nattribute: \npackage\n, \nmodel\n, or \nconfig\n. A Guild file may contain\ntop-level objects that do not have one of these identifying\nattributes, but these objects are ignored by Guild.\n\n\nThe value of identifying attributes are used as object identifiers.\n\n\nA top-level object must only contain one and only one identifying\nattribute.\n\n\nExamples\n\n\nTop-level package:\n\n\npackage: my-package\ndescription: My package\n\n\n\n\nTop-level model:\n\n\nmodel: my-model\ndescription: My model\n\n\n\n\nTop-level config:\n\n\nconfig: my-config\ndescription: My config\n\n\n\n\nList of top-level objects:\n\n\n- package: my-package\n  description: My package\n\n- model: model-a\n  description: Model A\n\n- model: model-b\n  description: Model B\n\n- config: shared\n  description: Share config\n\n\n\n\nIllegal top-level object (multiple identifiers):\n\n\nmodel: my-model\npackage: my-package\n\n\n\n\nInheritance\n\n\nTop-level objects may extend other top-level objects by specifying an\n\nextends\n attribute. The value of \nextends\n may be a string, which\nidentifies a single object to extend, or a list of strings, which\nidentifies multiple objects to extend.\n\n\nWhen an object extends another object, it inherits its\nattributes. Extending objects may redefine attributes of the objects\nthey extend.\n\n\nWhen more than one object is extended, attributes of objects later in\nthe list take precedence of those higher in the list.\n\n\nConfig objects are used exclusively for inheritance and are not\notherwise used by Guild.\n\n\nExamples\n\n\nIn the following example, two models extend a base config. The first\nmodel redefines its description while the second does not.\n\n\n- config: base\n  description: A base config\n\n- model: model-a\n  extends: base\n  description: My model\n\n- model: model-b\n  extends: base\n\n\n\n\nPackages\n\n\nA Guild file must contain at most one \npackage\n object.\n\n\nPackages contain information used by Guild to generate Guild packages.\n\n\nAttributes\n\n\n\n\npackage\n\n\nPackage name (required string)\n\n\ndescription\n\n\nProject description (string)\n  \n\n  This may be a multi-line description.\n\n\nversion\n\n\nProject version (required string)\n\n\nurl\n\n\nURL to package website (URL)\n\n\nmaintainer\n\n\nName of individual or organization package maintainer (string)\n\n\nmaintainer-email\n\n\nEmail of package maintainer (email address)\n\n\nlicense\n\n\nName of package license (string)\n\n\ntags\n\n\nList of packages tags (list of strings)\n\n\npython-tag\n\n\nValue used as the Python tag when generating the package (string)\n\n\ndata_files\n\n\nList of additional files to include in the package (list of strings)\n\n\nresources\n\n\nList of package resources (list of \nresources\n)\n\n\npython-requires\n\n\nVersion of Python required by the package (string)\n\n\nrequires\n\n\nList of other packages required by the package (list of strings)\n\n\n\n\nExamples\n\n\nPackage definition for \nslim.resnet\n:\n\n\npackage: slim.resnet\nversion: 0.3.0\ndescription:\n  TF-Slim ResNet models (50, 101, 152, and 200 layer models for ResNet v1 and v2)\nurl: https://github.com/guildai/index/tree/master/slim/resnet\nmaintainer: Guild AI\nmaintainer-email: packages@guild.ai\nrequires:\n  - slim\n=0.3.0.dev11\n  - slim.datasets\n=0.3.0.dev3\nlicense: Apache 2.0\ntags: [resnet, images, model]\n\n\n\n\nModels\n\n\nModels may may be defined as top-level Guild file objects using the\n\nmodel\n identifying attribute.\n\n\nHere\ns a Guild file that defines two models:\n\n\n- model: model-a\n- model: model-b\n\n\n\n\nModels define operations, which can be run using the \nrun\n\ncommand.\n\n\nModels may also define resources that operations require.\n\n\nAttributes\n\n\n\n\nmodel\n\n\nModel name (required string)\n\n\ndescription\n\n\nModel description (string)\n  \n\n  This may be a multi-line description.\n\n\noperations\n\n\nModel operations (list of \noperations\n)\n\n\nresources\n\n\nModel resources (list of \nresources\n)\n\n\nreferences\n\n\nModel references (list of URLs)\n  \n\n  References are displayed in help text.\n\n\nextra\n\n\nAdditional information used by Guild and Guild plugins\n\n\n\n\nExamples\n\n\nComplete example of \nmnist-layers\n (from\n\ntensorflow.mnist\n):\n\n\n- model: mnist-layers\n  description: CNN estimator for MNIST using tf.layers\n  operations:\n    train:\n      description: Train the CNN\n      main: mnist/mnist --data_dir mnist-idx-data --model_dir . --export_dir .\n      requires:\n        - mnist-lib\n        - mnist/dataset\n      flags:\n        batch-size:\n          description: Number of images to process in a batch\n          default: 100\n        epochs:\n          description: Number of epochs to train\n          default: 40\n          arg-name: train_epochs\n  resources:\n    mnist-lib:\n      description: Python library for tensorflow.mnist\n      private: yes\n      sources:\n        - url: https://github.com/tensorflow/models/archive/v.1.6.0.zip\n          sha256: ed8fd7066bb014feccaed2cd2a46e516468ef24c40be8ef21a96a09849db7ff5\n          select: models-v.1.6.0/official/mnist\n  references:\n    - https://github.com/tensorflow/models/tree/v.1.6.0/official/mnist\n\n\n\n\nOperations\n\n\nOperations define commands that are run for a model. Operations are\ndefined as named objects under the \noperations\n model attribute.\n\n\nHere\ns model with two operations, \ntrain\n and \ntest\n:\n\n\nmodel: my-model\noperations:\n  train:\n    main: train --epochs 1\n  test:\n    main: test --data .\n\n\n\n\nAttributes\n\n\n\n\ndescription\n\n\nOperation description (string)\n  \n\n  This may be a multi-line description.\n\n\nhandle-keyboard-interrupt\n\n\nHandle keyboard interrupts from the user (boolean)\n  \n\n  By default, an operation must explicitly handle keyboard interrupts,\n  which are generated when the user types \nCtrl-C\n, by catching\n  Python\ns \nKeyboardInterrupt\n or the process will terminate with an\n  error and a Python traceback. Set \nhandle-keyboard-interrupt\n to\n  \nyes\n to indicate that Guild should handle \nKeyboardInterrupt\n\n  and exit without printing an error message.\n  \n\n  If the operation is run with \n--debug\n, Guild will print the full\n  traceback as a log message.\n  \n\n  Note that an operation terminated with \nCtrl-C\n will still have a\n  status of \nterminated\n even if the interrupt is handled by\n  Guild. To indicate that the operation should be considered\n  \ncompleted\n, set the operation\ns \nstoppable\n attribute to \nyes\n.\n\n\nmain\n\n\nMain command module (required string unless \nplugin-op\n is used)\n  \n\n  Operation commands must be in the form \n[MODULE] [ARG...]\n. \nMODULE\n\n  may reference a Python module defined in the model Guild file\n  directory or any Python available on the system. \nARG\n values are\n  passed through as arguments to the Python module.\n  \n\n  \nMODULE\n must not end in \n.py\n.\n  \n\n  \nARG\n values may contain references to \n#flags\n in the\n  format \n${FLAG_NAME}\n. Such references are resolved to the current\n  flag value when the command is executed.\n\n\nflags\n\n\nOperation flags (list of \nflags\n)\n  \n\n  Flags define the arguments that are passed to \nmain\n when the\n  command is executed. For more information, see \nFlags\n.\n\n\nplugin-op\n\n\nThe name of a plugin operation to used instead of \nmain\n (string)\n  \n\n  \nmain\n and \nplugin-op\n cannot both be used.\n\n\npre-process\n\n\nPre-processing shell command\n  \n\n  The command is executed as a shell script after required resources\n  are resolved and before the operation itself is started.\n  \n\n  Commands are executed in the run directory and have access to the\n  same set of environment variables as the operation itself. See\n  \nOperations\n for the\n  list of supported environment variables.\n\n\nrequired\n\n\nOne or more required resources (string or list of strings)\n  \n\n  Values must be in the form \n[PACKAGE_OR_MODEL/]RESOURCE\n.\n\n\nremote\n\n\nFlag indicating whether or not the operation is remote (boolean)\n\n\nstoppable\n\n\nFlag indicating that a terminated run should be considered completed\n  (boolean)\n  \n\n  By default, a terminated run (i.e. a run stopped by typing \nCtrl-C\n\n  or stopped with a \nSIGTERM\n signal such as that issued by the\n  \nstop\n command) has a status of \nterminated\n. If \nstoppable\n\n  is true however, the run status will be \ncompleted\n. Set this\n  value to \nyes\n when the operation is designed to be terminated\n  explicitly by the user.\n\n\n\n\nFlags\n\n\nFlags are defined for \noperations\n under the \nflags\n\nattribute as named objects.\n\n\nAttributes\n\n\n\n\ndescription\n\n\nFlag description (string)\n  \n\n  This may be a multi-line description.\n\n\ndefault\n\n\nDefault value if not specified by the user (string or number)\n\n\nrequired\n\n\nFlag indicating whether or not the flag is required (boolean)\n\n\narg-name\n\n\nName of the command argument used for flag values (string)\n  \n\n  Defaults to the flag name.\n\n\narg-skip\n\n\nBoolean indicating whether not to include the flag as a command\n  argument (boolean)\n\n\nchoices\n\n\nAllowed choices for the flag (list of \nchoices\n)\n\n\n\n\nFlag choices\n\n\nFlag choices limit the available values for a flag. They can also be\nused to apply multiple argument to a command when specified.\n\n\nAttributes\n\n\n\n\nvalue\n\n\nFlag value when choice is specified (string or number)\n\n\ndescription\n\n\nFlag choice description (string)\n\n\nargs\n\n\nMap of argument names to values (object)\n  \nThis attribute is used to define additional arguments that are\n  applied when the choice is selected. Arguments are applied in the\n  form \n--NAME VALUE\n where \nNAME\n and \nVALUE\n correspond to the\n  respective object name value pairs. Use \narg-skip\n to omit the flag\n  argument itself.\n\n\n\n\nExamples\n\n\nOperation that can train one of two model versions (default is \n1\n):\n\n\nmodel: my-model\noperations:\n  train:\n    main: train\n    flags:\n      version:\n        default: 1\n        choices: [1, 2]\n\n\n\n\nSnippet from the \nshared\nconfiguration\n\nin the \nslim\n package. Note that when \nimagenet\n is specified, the\narguments \ninput-mean\n and \ninput-std\n are included in the command\nargument.\n\n\n- config: slim-image-classifier\n  operations:\n    predict:\n      main: label_image --graph graph.pb --labels data/labels.txt\n      flags:\n        ...\n        dataset:\n          description: Dataset name to use for labels and image transformation\n          required: yes\n          arg-skip: yes\n          choices:\n            - cifar10\n            - mnist\n            - flowers\n            - value: imagenet\n              args:\n                input-mean: 0.0\n                input-std: 255\n            - custom\n\n\n\n\nResources\n\n\nResources may be included in packages and models under the \nresources\n\nobject attribute. Resources are identified by their object key.\n\n\nResources may be required by operations. Required resources are known\nas \noperation dependencies\n.\n\n\nA resource must contain at least one source. Sources may be files,\nURLs, operation output, or Python modules.\n\n\nAll required resource sources are resolved before an operation is run\nto ensure the operation has what it needs to run. Guild creates\nsymbolic links to resource sources in the run directory. For more\ninformation, see \nResource sources\n below.\n\n\nHere\ns a model with two resources, each with a single source file.\n\n\nmodel: my-model\nresources:\n  resource-a:\n    sources: [file-a]\n  resource-b:\n    sources: [file-b]\n\n\n\n\nAttributes\n\n\n\n\ndescription\n\n\nResource description (string)\n\n\npath\n\n\nRelative path within the run directory where resolved sources are\n  saved (string)\n\n\nsources\n\n\nList of resource sources (list of \nresource sources\n)\n\n\nprivate\n\n\nFlag indicating whether or not the resource is private (boolean)\n  \n\n  Private resources don\nt appear in resource lists.\n\n\nreferences\n\n\nList of reference URLs associated with the resource (list of URLs)\n  \n\n  References are displayed in help text.\n\n\n\n\nResource sources\n\n\nA resource source defines what is resolved and therefore available to\nan operation that requires the resource.\n\n\nSource files are provided to runs within the run directory as symbolic\nlinks.\n\n\nSource type\n\n\nSources have a \ntype\n, which is identified by the use of one and only\none of the following type attribute:\n\n\n\n\nfile\n\n\nSource is a file relative to the defining Guild file\n\n\nurl\n\n\nSource is a URL (\nhttp\n and \nhttps\n protocols are supported)\n\n\noperation\n\n\nSource is generated from an operation\n  \n\n  Value is an operation spec consisting of\n  \n[PACKAGE/[MODEL:]]OPERATION\n.  Multiple operation specs may be\n  specified separated with a comma. By default Guild will use the\n  latest completed or terminated run matching any of the operation\n  specs. Users may alternatively specify a run ID for the resource\n  when running the requiring operation.\n\n\nmodule\n\n\nSource is a Python module\n\n\n\n\nIf source is a string, the value is treated as a \nfile\n source type.\n\n\nAttributes\n\n\n\n\nsha256\n\n\nSHA 256 hash used to verify the source (string)\n\n\nunpack\n\n\nA flag indicating whether or not the source should be unpacked (boolean)\n  \n\n  By default Guild attempts to unpack files with common archive\n  extensions (\n.zip\n, \n.tar\n, \n.tar.gz\n, \n.tgz\n).\n\n\nselect\n\n\nOne or more regular expressions used to select sources from a\n  directory or unpacked archive (string or list of strings)\n\n\npost-process\n\n\nShell command executed after source has been resolved (string)\n  \n\n  This applies to \nurl\n sources only.\n  \n\n  Commands are executed in the context of the resource cache directory\n  containing the downloaded and unpacked URL source. Commands may use\n  the \n$RESDEF_DIR\n environment variable to reference files relative\n  to the directory containing the resource declaration (i.e. the\n  directory containing the project or package Guild file).\n\n\nhelp\n\n\nHelp text displayed when a source cannot be resolved (string)\n  \n\n  This can be used to help a user install a missing Python module, run\n  a required operation, etc.\n\n\n\n\nExamples\n\n\nFile \ndata-train.csv\n and \ndata-test.csv\n provided as a part of \ndata\n\nresource:\n\n\npackage: my-package\nresources:\n  data:\n    description: Data files\n    sources:\n    - data-train.csv\n    - data-test.csv\n\n\n\n\nMNIST IDX sources as a \ndataset\n resource, stored under\n\nmnist-idx-data\n in the run directory:\n\n\npackage: mnist\nresources:\n  dataset:\n    description: \nYann Lecun's MNIST dataset in compressed IDX format\n\n    path: mnist-idx-data\n    sources:\n      - url: http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz\n        sha256: 440fcabf73cc546fa21475e81ea370265605f56be210a4024d2ca8f203523609\n      - url: http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz\n        sha256: 3552534a0a558bbed6aed32b30c495cca23d567ec52cac8be1a0730e8010255c\n      - url: http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz\n        sha256: 8d422c7b0a1c1c79245a5bcf07fe86e33eeafee792b84584aec276f5a2dbc4e6\n      - url: http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz\n        sha256: f7ae60f92e00ec6debd23a6088c31dbd2371eca3ffa0defaefb259924204aec6\n\n\n\n\nOperation \nfinetune\n depends on the output of \ntrain\n, which is stored\nunder \nmodel\n in the run directory:\n\n\nmodel: my-model\noperations:\n  train:\n    main: train\n  finetune:\n    main: finetune\n    requires: trained-model\nresources:\n  trained-model:\n    path: model\n    sources:\n      - operation: train\n        select: checkpoint|model\\.ckpt.*", 
            "title": "Guild file"
        }, 
        {
            "location": "/docs/reference/guild-file/#guild-file", 
            "text": "Top level objects  Examples    Inheritance  Examples    Packages  Attributes  Examples    Models  Attributes  Examples    Operations  Attributes    Flags  Attributes    Flag choices  Attributes  Examples    Resources  Attributes    Resource sources  Source type  Attributes  Examples     Guild files are files named  guild.yml  that contain information that\nGuild needs to perform an operation.  Guild files are authored in  YAML .", 
            "title": "Guild file"
        }, 
        {
            "location": "/docs/reference/guild-file/#top-level-objects", 
            "text": "Guild files may contain a single top-level object or a list of\ntop-level objects.  A top-level object may one of:   package  model  config   Top-level objects are identified by the presence of an identifying\nattribute:  package ,  model , or  config . A Guild file may contain\ntop-level objects that do not have one of these identifying\nattributes, but these objects are ignored by Guild.  The value of identifying attributes are used as object identifiers.  A top-level object must only contain one and only one identifying\nattribute.", 
            "title": "Top level objects"
        }, 
        {
            "location": "/docs/reference/guild-file/#examples", 
            "text": "Top-level package:  package: my-package\ndescription: My package  Top-level model:  model: my-model\ndescription: My model  Top-level config:  config: my-config\ndescription: My config  List of top-level objects:  - package: my-package\n  description: My package\n\n- model: model-a\n  description: Model A\n\n- model: model-b\n  description: Model B\n\n- config: shared\n  description: Share config  Illegal top-level object (multiple identifiers):  model: my-model\npackage: my-package", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/guild-file/#inheritance", 
            "text": "Top-level objects may extend other top-level objects by specifying an extends  attribute. The value of  extends  may be a string, which\nidentifies a single object to extend, or a list of strings, which\nidentifies multiple objects to extend.  When an object extends another object, it inherits its\nattributes. Extending objects may redefine attributes of the objects\nthey extend.  When more than one object is extended, attributes of objects later in\nthe list take precedence of those higher in the list.  Config objects are used exclusively for inheritance and are not\notherwise used by Guild.", 
            "title": "Inheritance"
        }, 
        {
            "location": "/docs/reference/guild-file/#examples_1", 
            "text": "In the following example, two models extend a base config. The first\nmodel redefines its description while the second does not.  - config: base\n  description: A base config\n\n- model: model-a\n  extends: base\n  description: My model\n\n- model: model-b\n  extends: base", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/guild-file/#packages", 
            "text": "A Guild file must contain at most one  package  object.  Packages contain information used by Guild to generate Guild packages.", 
            "title": "Packages"
        }, 
        {
            "location": "/docs/reference/guild-file/#attributes", 
            "text": "package  Package name (required string)  description  Project description (string)\n   \n  This may be a multi-line description.  version  Project version (required string)  url  URL to package website (URL)  maintainer  Name of individual or organization package maintainer (string)  maintainer-email  Email of package maintainer (email address)  license  Name of package license (string)  tags  List of packages tags (list of strings)  python-tag  Value used as the Python tag when generating the package (string)  data_files  List of additional files to include in the package (list of strings)  resources  List of package resources (list of  resources )  python-requires  Version of Python required by the package (string)  requires  List of other packages required by the package (list of strings)", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/guild-file/#examples_2", 
            "text": "Package definition for  slim.resnet :  package: slim.resnet\nversion: 0.3.0\ndescription:\n  TF-Slim ResNet models (50, 101, 152, and 200 layer models for ResNet v1 and v2)\nurl: https://github.com/guildai/index/tree/master/slim/resnet\nmaintainer: Guild AI\nmaintainer-email: packages@guild.ai\nrequires:\n  - slim =0.3.0.dev11\n  - slim.datasets =0.3.0.dev3\nlicense: Apache 2.0\ntags: [resnet, images, model]", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/guild-file/#models", 
            "text": "Models may may be defined as top-level Guild file objects using the model  identifying attribute.  Here s a Guild file that defines two models:  - model: model-a\n- model: model-b  Models define operations, which can be run using the  run \ncommand.  Models may also define resources that operations require.", 
            "title": "Models"
        }, 
        {
            "location": "/docs/reference/guild-file/#attributes_1", 
            "text": "model  Model name (required string)  description  Model description (string)\n   \n  This may be a multi-line description.  operations  Model operations (list of  operations )  resources  Model resources (list of  resources )  references  Model references (list of URLs)\n   \n  References are displayed in help text.  extra  Additional information used by Guild and Guild plugins", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/guild-file/#examples_3", 
            "text": "Complete example of  mnist-layers  (from tensorflow.mnist ):  - model: mnist-layers\n  description: CNN estimator for MNIST using tf.layers\n  operations:\n    train:\n      description: Train the CNN\n      main: mnist/mnist --data_dir mnist-idx-data --model_dir . --export_dir .\n      requires:\n        - mnist-lib\n        - mnist/dataset\n      flags:\n        batch-size:\n          description: Number of images to process in a batch\n          default: 100\n        epochs:\n          description: Number of epochs to train\n          default: 40\n          arg-name: train_epochs\n  resources:\n    mnist-lib:\n      description: Python library for tensorflow.mnist\n      private: yes\n      sources:\n        - url: https://github.com/tensorflow/models/archive/v.1.6.0.zip\n          sha256: ed8fd7066bb014feccaed2cd2a46e516468ef24c40be8ef21a96a09849db7ff5\n          select: models-v.1.6.0/official/mnist\n  references:\n    - https://github.com/tensorflow/models/tree/v.1.6.0/official/mnist", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/guild-file/#operations", 
            "text": "Operations define commands that are run for a model. Operations are\ndefined as named objects under the  operations  model attribute.  Here s model with two operations,  train  and  test :  model: my-model\noperations:\n  train:\n    main: train --epochs 1\n  test:\n    main: test --data .", 
            "title": "Operations"
        }, 
        {
            "location": "/docs/reference/guild-file/#attributes_2", 
            "text": "description  Operation description (string)\n   \n  This may be a multi-line description.  handle-keyboard-interrupt  Handle keyboard interrupts from the user (boolean)\n   \n  By default, an operation must explicitly handle keyboard interrupts,\n  which are generated when the user types  Ctrl-C , by catching\n  Python s  KeyboardInterrupt  or the process will terminate with an\n  error and a Python traceback. Set  handle-keyboard-interrupt  to\n   yes  to indicate that Guild should handle  KeyboardInterrupt \n  and exit without printing an error message.\n   \n  If the operation is run with  --debug , Guild will print the full\n  traceback as a log message.\n   \n  Note that an operation terminated with  Ctrl-C  will still have a\n  status of  terminated  even if the interrupt is handled by\n  Guild. To indicate that the operation should be considered\n   completed , set the operation s  stoppable  attribute to  yes .  main  Main command module (required string unless  plugin-op  is used)\n   \n  Operation commands must be in the form  [MODULE] [ARG...] .  MODULE \n  may reference a Python module defined in the model Guild file\n  directory or any Python available on the system.  ARG  values are\n  passed through as arguments to the Python module.\n   \n   MODULE  must not end in  .py .\n   \n   ARG  values may contain references to  #flags  in the\n  format  ${FLAG_NAME} . Such references are resolved to the current\n  flag value when the command is executed.  flags  Operation flags (list of  flags )\n   \n  Flags define the arguments that are passed to  main  when the\n  command is executed. For more information, see  Flags .  plugin-op  The name of a plugin operation to used instead of  main  (string)\n   \n   main  and  plugin-op  cannot both be used.  pre-process  Pre-processing shell command\n   \n  The command is executed as a shell script after required resources\n  are resolved and before the operation itself is started.\n   \n  Commands are executed in the run directory and have access to the\n  same set of environment variables as the operation itself. See\n   Operations  for the\n  list of supported environment variables.  required  One or more required resources (string or list of strings)\n   \n  Values must be in the form  [PACKAGE_OR_MODEL/]RESOURCE .  remote  Flag indicating whether or not the operation is remote (boolean)  stoppable  Flag indicating that a terminated run should be considered completed\n  (boolean)\n   \n  By default, a terminated run (i.e. a run stopped by typing  Ctrl-C \n  or stopped with a  SIGTERM  signal such as that issued by the\n   stop  command) has a status of  terminated . If  stoppable \n  is true however, the run status will be  completed . Set this\n  value to  yes  when the operation is designed to be terminated\n  explicitly by the user.", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/guild-file/#flags", 
            "text": "Flags are defined for  operations  under the  flags \nattribute as named objects.", 
            "title": "Flags"
        }, 
        {
            "location": "/docs/reference/guild-file/#attributes_3", 
            "text": "description  Flag description (string)\n   \n  This may be a multi-line description.  default  Default value if not specified by the user (string or number)  required  Flag indicating whether or not the flag is required (boolean)  arg-name  Name of the command argument used for flag values (string)\n   \n  Defaults to the flag name.  arg-skip  Boolean indicating whether not to include the flag as a command\n  argument (boolean)  choices  Allowed choices for the flag (list of  choices )", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/guild-file/#flag-choices", 
            "text": "Flag choices limit the available values for a flag. They can also be\nused to apply multiple argument to a command when specified.", 
            "title": "Flag choices"
        }, 
        {
            "location": "/docs/reference/guild-file/#attributes_4", 
            "text": "value  Flag value when choice is specified (string or number)  description  Flag choice description (string)  args  Map of argument names to values (object)\n   This attribute is used to define additional arguments that are\n  applied when the choice is selected. Arguments are applied in the\n  form  --NAME VALUE  where  NAME  and  VALUE  correspond to the\n  respective object name value pairs. Use  arg-skip  to omit the flag\n  argument itself.", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/guild-file/#examples_4", 
            "text": "Operation that can train one of two model versions (default is  1 ):  model: my-model\noperations:\n  train:\n    main: train\n    flags:\n      version:\n        default: 1\n        choices: [1, 2]  Snippet from the  shared\nconfiguration \nin the  slim  package. Note that when  imagenet  is specified, the\narguments  input-mean  and  input-std  are included in the command\nargument.  - config: slim-image-classifier\n  operations:\n    predict:\n      main: label_image --graph graph.pb --labels data/labels.txt\n      flags:\n        ...\n        dataset:\n          description: Dataset name to use for labels and image transformation\n          required: yes\n          arg-skip: yes\n          choices:\n            - cifar10\n            - mnist\n            - flowers\n            - value: imagenet\n              args:\n                input-mean: 0.0\n                input-std: 255\n            - custom", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/guild-file/#resources", 
            "text": "Resources may be included in packages and models under the  resources \nobject attribute. Resources are identified by their object key.  Resources may be required by operations. Required resources are known\nas  operation dependencies .  A resource must contain at least one source. Sources may be files,\nURLs, operation output, or Python modules.  All required resource sources are resolved before an operation is run\nto ensure the operation has what it needs to run. Guild creates\nsymbolic links to resource sources in the run directory. For more\ninformation, see  Resource sources  below.  Here s a model with two resources, each with a single source file.  model: my-model\nresources:\n  resource-a:\n    sources: [file-a]\n  resource-b:\n    sources: [file-b]", 
            "title": "Resources"
        }, 
        {
            "location": "/docs/reference/guild-file/#attributes_5", 
            "text": "description  Resource description (string)  path  Relative path within the run directory where resolved sources are\n  saved (string)  sources  List of resource sources (list of  resource sources )  private  Flag indicating whether or not the resource is private (boolean)\n   \n  Private resources don t appear in resource lists.  references  List of reference URLs associated with the resource (list of URLs)\n   \n  References are displayed in help text.", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/guild-file/#resource-sources", 
            "text": "A resource source defines what is resolved and therefore available to\nan operation that requires the resource.  Source files are provided to runs within the run directory as symbolic\nlinks.", 
            "title": "Resource sources"
        }, 
        {
            "location": "/docs/reference/guild-file/#source-type", 
            "text": "Sources have a  type , which is identified by the use of one and only\none of the following type attribute:   file  Source is a file relative to the defining Guild file  url  Source is a URL ( http  and  https  protocols are supported)  operation  Source is generated from an operation\n   \n  Value is an operation spec consisting of\n   [PACKAGE/[MODEL:]]OPERATION .  Multiple operation specs may be\n  specified separated with a comma. By default Guild will use the\n  latest completed or terminated run matching any of the operation\n  specs. Users may alternatively specify a run ID for the resource\n  when running the requiring operation.  module  Source is a Python module   If source is a string, the value is treated as a  file  source type.", 
            "title": "Source type"
        }, 
        {
            "location": "/docs/reference/guild-file/#attributes_6", 
            "text": "sha256  SHA 256 hash used to verify the source (string)  unpack  A flag indicating whether or not the source should be unpacked (boolean)\n   \n  By default Guild attempts to unpack files with common archive\n  extensions ( .zip ,  .tar ,  .tar.gz ,  .tgz ).  select  One or more regular expressions used to select sources from a\n  directory or unpacked archive (string or list of strings)  post-process  Shell command executed after source has been resolved (string)\n   \n  This applies to  url  sources only.\n   \n  Commands are executed in the context of the resource cache directory\n  containing the downloaded and unpacked URL source. Commands may use\n  the  $RESDEF_DIR  environment variable to reference files relative\n  to the directory containing the resource declaration (i.e. the\n  directory containing the project or package Guild file).  help  Help text displayed when a source cannot be resolved (string)\n   \n  This can be used to help a user install a missing Python module, run\n  a required operation, etc.", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/guild-file/#examples_5", 
            "text": "File  data-train.csv  and  data-test.csv  provided as a part of  data \nresource:  package: my-package\nresources:\n  data:\n    description: Data files\n    sources:\n    - data-train.csv\n    - data-test.csv  MNIST IDX sources as a  dataset  resource, stored under mnist-idx-data  in the run directory:  package: mnist\nresources:\n  dataset:\n    description:  Yann Lecun's MNIST dataset in compressed IDX format \n    path: mnist-idx-data\n    sources:\n      - url: http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz\n        sha256: 440fcabf73cc546fa21475e81ea370265605f56be210a4024d2ca8f203523609\n      - url: http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz\n        sha256: 3552534a0a558bbed6aed32b30c495cca23d567ec52cac8be1a0730e8010255c\n      - url: http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz\n        sha256: 8d422c7b0a1c1c79245a5bcf07fe86e33eeafee792b84584aec276f5a2dbc4e6\n      - url: http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz\n        sha256: f7ae60f92e00ec6debd23a6088c31dbd2371eca3ffa0defaefb259924204aec6  Operation  finetune  depends on the output of  train , which is stored\nunder  model  in the run directory:  model: my-model\noperations:\n  train:\n    main: train\n  finetune:\n    main: finetune\n    requires: trained-model\nresources:\n  trained-model:\n    path: model\n    sources:\n      - operation: train\n        select: checkpoint|model\\.ckpt.*", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/guild-home/", 
            "text": "Guild home\n\n\n\n\nLayout\n\n\nRuns\n\n\nGuild metadata\n\n\n\n\n\n\nResource cache\n\n\nResource cache and virtual environments\n\n\n\n\n\n\nRuns index\n\n\n\n\nGuild home is a directory that Guild AI uses to store various files.\n\n\nEvery Guild command is associated with a Guild home. If Guild home\ndoes not exist, Guild will automatically create it.\n\n\nBy default, Guild home is one of two locations depending on whether or\nnot a command is run in a virtual environment.\n\n\nIf the command is not run in a virtual environment, Guild home is\n\n~/.guild\n by default. If the command is run in a virtual environment,\nGuild home is \n$VIRTUAL_ENV/.guild\n where \n$VIRTUAL_ENV\n is the\nvirtual environment directory.\n\n\nGuild home may be set explicitly by either defining the environment\nvariable \nGUILD_HOME\n or by using the \n-H\n option when running a\nGuild command.\n\n\nLayout\n\n\nGuild home is structured as follows:\n\n\n\n\n\n\nGuild home\nE.g. \n~/.guild\n or \n$VIRTUAL_ENV/.guild\n\n\ncache \nCaches used to optimize various Guild functions\n\n \n\n \nresources \nCached resources\n\n \nruns \nIndexed run data\n\n \n\n\n\n\nruns \nActive runs\n\n\ntrash \nDeleted runs\n\n\n\n\n\n\n\nRuns\n\n\nActive runs (i.e. non-deleted runs) are stored in\n\n$GUILD_HOME/runs\n. Each run is stored in a subdirectory with the same\nname as the run ID.\n\n\nRun directories contain all files associated with a run, including:\n\n\n\n\nResource source links\n\n\nOutput generated during the run\n\n\nGuild metadata\n\n\n\n\nGuild metadata is stored in a subdirectory named \n.guild\n in each run\ndirectory.\n\n\nGuild metadata\n\n\n\n\n\n\nRun directory\n\n.guild \nGuild metadata\n\n \n\n \noutput \nOutput generated by the run OS process\n\n \noutput.index \nTimestamp and stream information associated with run output\n\n \nattrs \nRun attributes\n\n   \n\n     \ncmd \nRun OS process command\n\n     \ndeps \nRun dependencies (required resources)\n\n     \nenv \nRun OS process environment\n\n     \nexit_status \nRun OS process exit status\n\n     \n_extra_NAME \nExtra config for NAME, defined for the model operation\n\n     \nflags \nFlag values used for the run\n\n     \nopref \nReference to the operation associated with the run\n\n     \nstarted \nStarted timestamp\n\n     \nstopped \nStopped timestamp\n\n   \n\n \n\n \n\n\n\n\n\n\n\n\n\nResource cache\n\n\nWhen Guild resolves resources, it uses \nGUILD_HOME/cache/resources\n\nfor two purposes:\n\n\n\n\nLocation for downloading URL resource sources\n\n\nLocation for unpacking archives\n\n\n\n\nResources are stored in directories that are named using hashes of the\ncorresponding resource source URI, which is an internal representation\nof a resource source location. If a resource exists in the cache, it\nis used rather than downloading or unpacking the resource again.\n\n\nGuild does not remove items from the resource cache.\n\n\nYou may clear the resource cache by deleting\n\nGUILD_HOME/cache/resources\n. Guild commands will continue to function\nnormally and the cache will be repopulated as needed.\n\n\nResource cache and virtual environments\n\n\nBy default, Guild reuses the resource cache in\n\n~/.guild/cache/resources\n (the user-level resource cache) for all\nvirtual environments. This means that cached resources available\nwithin virtual environments without having to re-download\nfiles. However, it also means that virtual environments can modify the\nuser-level resource cache.\n\n\nIf you want to isolate a virtual environment from the user-level\ncache, run the following command after you first activate the\nenvironment:\n\n\nguild init --local-resource-cache\n\n\n\n\nRuns index\n\n\nGuild maintains an index of run data in \nGUILD_HOME/cache/runs\n. This\nindex lets Guild lookup values such as training accuracy and loss\nquickly when performing comparisons.\n\n\nGuild updates the runs index lazily as it discovers new runs or new\ndata associated with a run.\n\n\nYou may clear the runs cache by deleting\n\nGUILD_HOME/cache/runs\n. Guild commands will continue to function\nnormally and runs will be indexed again as needed.", 
            "title": "Guild home"
        }, 
        {
            "location": "/docs/reference/guild-home/#guild-home", 
            "text": "Layout  Runs  Guild metadata    Resource cache  Resource cache and virtual environments    Runs index   Guild home is a directory that Guild AI uses to store various files.  Every Guild command is associated with a Guild home. If Guild home\ndoes not exist, Guild will automatically create it.  By default, Guild home is one of two locations depending on whether or\nnot a command is run in a virtual environment.  If the command is not run in a virtual environment, Guild home is ~/.guild  by default. If the command is run in a virtual environment,\nGuild home is  $VIRTUAL_ENV/.guild  where  $VIRTUAL_ENV  is the\nvirtual environment directory.  Guild home may be set explicitly by either defining the environment\nvariable  GUILD_HOME  or by using the  -H  option when running a\nGuild command.", 
            "title": "Guild home"
        }, 
        {
            "location": "/docs/reference/guild-home/#layout", 
            "text": "Guild home is structured as follows:    Guild home E.g.  ~/.guild  or  $VIRTUAL_ENV/.guild  cache  Caches used to optimize various Guild functions \n  \n  resources  Cached resources \n  runs  Indexed run data \n    runs  Active runs  trash  Deleted runs", 
            "title": "Layout"
        }, 
        {
            "location": "/docs/reference/guild-home/#runs", 
            "text": "Active runs (i.e. non-deleted runs) are stored in $GUILD_HOME/runs . Each run is stored in a subdirectory with the same\nname as the run ID.  Run directories contain all files associated with a run, including:   Resource source links  Output generated during the run  Guild metadata   Guild metadata is stored in a subdirectory named  .guild  in each run\ndirectory.", 
            "title": "Runs"
        }, 
        {
            "location": "/docs/reference/guild-home/#guild-metadata", 
            "text": "Run directory .guild  Guild metadata \n  \n  output  Output generated by the run OS process \n  output.index  Timestamp and stream information associated with run output \n  attrs  Run attributes \n    \n      cmd  Run OS process command \n      deps  Run dependencies (required resources) \n      env  Run OS process environment \n      exit_status  Run OS process exit status \n      _extra_NAME  Extra config for NAME, defined for the model operation \n      flags  Flag values used for the run \n      opref  Reference to the operation associated with the run \n      started  Started timestamp \n      stopped  Stopped timestamp", 
            "title": "Guild metadata"
        }, 
        {
            "location": "/docs/reference/guild-home/#resource-cache", 
            "text": "When Guild resolves resources, it uses  GUILD_HOME/cache/resources \nfor two purposes:   Location for downloading URL resource sources  Location for unpacking archives   Resources are stored in directories that are named using hashes of the\ncorresponding resource source URI, which is an internal representation\nof a resource source location. If a resource exists in the cache, it\nis used rather than downloading or unpacking the resource again.  Guild does not remove items from the resource cache.  You may clear the resource cache by deleting GUILD_HOME/cache/resources . Guild commands will continue to function\nnormally and the cache will be repopulated as needed.", 
            "title": "Resource cache"
        }, 
        {
            "location": "/docs/reference/guild-home/#resource-cache-and-virtual-environments", 
            "text": "By default, Guild reuses the resource cache in ~/.guild/cache/resources  (the user-level resource cache) for all\nvirtual environments. This means that cached resources available\nwithin virtual environments without having to re-download\nfiles. However, it also means that virtual environments can modify the\nuser-level resource cache.  If you want to isolate a virtual environment from the user-level\ncache, run the following command after you first activate the\nenvironment:  guild init --local-resource-cache", 
            "title": "Resource cache and virtual environments"
        }, 
        {
            "location": "/docs/reference/guild-home/#runs-index", 
            "text": "Guild maintains an index of run data in  GUILD_HOME/cache/runs . This\nindex lets Guild lookup values such as training accuracy and loss\nquickly when performing comparisons.  Guild updates the runs index lazily as it discovers new runs or new\ndata associated with a run.  You may clear the runs cache by deleting GUILD_HOME/cache/runs . Guild commands will continue to function\nnormally and runs will be indexed again as needed.", 
            "title": "Runs index"
        }, 
        {
            "location": "/docs/reference/user-config/", 
            "text": "User configuration\n\n\n\n\nRemotes\n\n\nRemote type\n\n\n\n\n\n\nssh remote\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\nec2 remote\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\ns3 remote\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\nDiff\n\n\nAttributes\n\n\nExamples\n\n\n\n\n\n\n\n\nUser configuration is defined in \n~/.guild/config.yml\n. It defines\nconfiguration and settings that Guild uses on a per-user basis.\n\n\nRemotes\n\n\nRemotes are defined under a top-level \nremotes\n object. Each remote is\nnamed using its \nremotes\n section key.\n\n\nremotes:\n  remote-1:\n    ...\n  remote-2:\n    ...\n  remote-3:\n   ...\n\n\n\n\nFor information on using remotes, see \nRemotes\n.\n\n\nRemote type\n\n\nRemotes are classified by their \ntype\n, which is specified using the\n\ntype\n attribute. Each remote must define its type as one of the\nfollowing values:\n\n\n\n\nssh\n\n\nSystem that is accessible over SSH (see \nssh remote\n)\n\n\nec2\n\n\nSystem running in Amazon EC2 (see \nec2 remote\n)\n\n\ns3\n\n\nRemote bucket in Amazon S3 (see \ns3 remote\n)\n\n\n\n\nssh remote\n\n\nAttributes\n\n\n\n\nhost\n\n\nServer host name or IP address (required string)\n\n\nport\n\n\nServer SSH port (number)\n  \n\n  By default, port \n22\n is used for SSH connections.\n\n\nuser\n\n\nUser used when connecting over SSH (string)\n  \n\n  By default, the active user name is used for SSH connections.\n\n\nguild-home\n\n\nPath to Guild home on the remote server (string)\n  \n\n  Specify this value to use an alternative Guild home location on the\n  remote server. By default, the \n.guild\n relative path is\n  used. Relative paths are typically considered relative to the user\n  home directory, but this may be different depending on the active\n  user\ns SSH configuration. If \nguild-env\n is specified, relative\n  paths are considered relative to the Guild environment location.\n\n\nguild-env\n\n\nPath to Guild environment on the remote server (string)\n  \n\n  If this value is specified, Guild will active the environment on the\n  remote server before running commands.\n\n\nuse-prerelease\n\n\nFlag indicating whether or not to use the \n--pre\n flag when\n  installing required packages (boolean)\n  \n\n  By default, Guild does not install pre-release package versions when\n  installing required packages for a run. If you want to install\n  pre-release packages, set this value to \nyes\n.\n\n\n\n\nExamples\n\n\nRemote named \ndeep-learning\n with IP address \n192.168.1.101\n:\n\n\nremotes:\n  deep-learning:\n    type: ssh\n    host: 192.168.1.101\n\n\n\n\nRemote named \nbig-server\n that\ns accessed over the Internet over a\nnon-standard port using a Guild environment:\n\n\nremotes:\n  big-server:\n    host: big01.my.co\n    port: 2202\n    user: ubuntu\n    guild-env: ~/sample-project/env\n\n\n\n\nec2 remote\n\n\nAttributes\n\n\nec2\n remotes share all of the attribute of \nssh\n remotes. See above\nfor \nssh\n attributes.\n\n\nIn addition to the \nssh\n attributes, \nec2\n remotes support the following:\n\n\n\n\nregion\n\n\nAWS region used when creating the EC2 instance (required string)\n\n\nami\n\n\nAWS AMI used when creating the EC2 instance (required string)\n\n\ninstance-type\n\n\nEC2 instance type used when creating the EC2 instance (required string)\n\n\npublic-key\n\n\nLocal path to SSH public key to install on the EC2 instance (string)\n  \n\n  This value must be specified to access the remote server unless the\n  server configures a public key some other way (e.g. the key is on\n  the AMI, etc.)\n\n\ninit\n\n\nScript to run when initializing the instance (string)\n\n\ninit-timeout\n\n\nTimeout in seconds used when initializing the instance (number)\n\n\nprivate-key\n\n\nPath to private SSH key used when connecting to the instance (string)\n\n\npassword\n\n\nPassword associated with \nuser\n (string)\n  \n\n  \nCAUTION:\n Passwords are stored in plain text and should not be\n  used for sensitive applications. To avoid revealing passwords, use\n  SSH public/private key authentication.\n\n\n\n\nExamples\n\n\nRemote named \nk80\n used to start a \np2.xlarge\n instance in\nthe \nus-east-2\n region:\n\n\nremotes:\n  k80:\n    type: ec2\n    region: us-east-2\n    ami: ami-4f62582a\n    instance-type: p2.xlarge\n    public-key: ~/.ssh/id_rsa.pub\n    user: ubuntu\n    init: |\n      set -ex\n      cat \n ~/.bashrc \n EOF\n      export LD_LIBRARY_PATH=/usr/local/cuda/lib64\n      EOF\n      . ~/.bashrc\n      sudo pip install --upgrade pip\n      sudo pip install --upgrade guildai\n      sudo pip install --upgrade tensorflow-gpu\n      mkdir -p ~/.guild/runs\n      guild check\n\n\n\n\ns3 remote\n\n\nAttributes\n\n\n\n\nbucket\n\n\nS3 bucket used for the remote environment (required string)\n\n\nroot\n\n\nRoot path in the S3 bucket used for the remote environment (string)\n  \n\n  By default the root of the bucket is used.\n\n\nregion\n\n\nRegion associated with the bucket (string)\n  \n\n  By default the environment variable \nAWS_DEFAULT_REGION\n is used for\n  the region.\n\n\n\n\nExamples\n\n\nRemote named \ns3-backup\n that uses the S3 bucket\n\ndeep-learning-backups\n:\n\n\nremotes:\n  s3-backup:\n    bucket: deep-learning-backups\n\n\n\n\nDiff\n\n\nThe \ndiff\n command uses the \ndiff\n program by default. You can\nspecify an alternative command by creating a \ndiff\n top-level object.\n\n\ndiff:\n  ...\n\n\n\n\nAttributes\n\n\n\n\ncommand\n\n\nThe command to use when diffing runs (string)\n  \n\n  The command will be invoked as specified with two additional\n  arguments: the first and second run paths to diff.\n\n\n\n\nExamples\n\n\nUse \nMeld\n to diff runs:\n\n\ndiff:\n  command: meld\n\n\n\n\nUse \ncolordiff\n to diff runs:\n\n\ndiff:\n  command: colordiff -ru", 
            "title": "User configuration"
        }, 
        {
            "location": "/docs/reference/user-config/#user-configuration", 
            "text": "Remotes  Remote type    ssh remote  Attributes  Examples    ec2 remote  Attributes  Examples    s3 remote  Attributes  Examples    Diff  Attributes  Examples     User configuration is defined in  ~/.guild/config.yml . It defines\nconfiguration and settings that Guild uses on a per-user basis.", 
            "title": "User configuration"
        }, 
        {
            "location": "/docs/reference/user-config/#remotes", 
            "text": "Remotes are defined under a top-level  remotes  object. Each remote is\nnamed using its  remotes  section key.  remotes:\n  remote-1:\n    ...\n  remote-2:\n    ...\n  remote-3:\n   ...  For information on using remotes, see  Remotes .", 
            "title": "Remotes"
        }, 
        {
            "location": "/docs/reference/user-config/#remote-type", 
            "text": "Remotes are classified by their  type , which is specified using the type  attribute. Each remote must define its type as one of the\nfollowing values:   ssh  System that is accessible over SSH (see  ssh remote )  ec2  System running in Amazon EC2 (see  ec2 remote )  s3  Remote bucket in Amazon S3 (see  s3 remote )", 
            "title": "Remote type"
        }, 
        {
            "location": "/docs/reference/user-config/#ssh-remote", 
            "text": "", 
            "title": "ssh remote"
        }, 
        {
            "location": "/docs/reference/user-config/#attributes", 
            "text": "host  Server host name or IP address (required string)  port  Server SSH port (number)\n   \n  By default, port  22  is used for SSH connections.  user  User used when connecting over SSH (string)\n   \n  By default, the active user name is used for SSH connections.  guild-home  Path to Guild home on the remote server (string)\n   \n  Specify this value to use an alternative Guild home location on the\n  remote server. By default, the  .guild  relative path is\n  used. Relative paths are typically considered relative to the user\n  home directory, but this may be different depending on the active\n  user s SSH configuration. If  guild-env  is specified, relative\n  paths are considered relative to the Guild environment location.  guild-env  Path to Guild environment on the remote server (string)\n   \n  If this value is specified, Guild will active the environment on the\n  remote server before running commands.  use-prerelease  Flag indicating whether or not to use the  --pre  flag when\n  installing required packages (boolean)\n   \n  By default, Guild does not install pre-release package versions when\n  installing required packages for a run. If you want to install\n  pre-release packages, set this value to  yes .", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/user-config/#examples", 
            "text": "Remote named  deep-learning  with IP address  192.168.1.101 :  remotes:\n  deep-learning:\n    type: ssh\n    host: 192.168.1.101  Remote named  big-server  that s accessed over the Internet over a\nnon-standard port using a Guild environment:  remotes:\n  big-server:\n    host: big01.my.co\n    port: 2202\n    user: ubuntu\n    guild-env: ~/sample-project/env", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/user-config/#ec2-remote", 
            "text": "", 
            "title": "ec2 remote"
        }, 
        {
            "location": "/docs/reference/user-config/#attributes_1", 
            "text": "ec2  remotes share all of the attribute of  ssh  remotes. See above\nfor  ssh  attributes.  In addition to the  ssh  attributes,  ec2  remotes support the following:   region  AWS region used when creating the EC2 instance (required string)  ami  AWS AMI used when creating the EC2 instance (required string)  instance-type  EC2 instance type used when creating the EC2 instance (required string)  public-key  Local path to SSH public key to install on the EC2 instance (string)\n   \n  This value must be specified to access the remote server unless the\n  server configures a public key some other way (e.g. the key is on\n  the AMI, etc.)  init  Script to run when initializing the instance (string)  init-timeout  Timeout in seconds used when initializing the instance (number)  private-key  Path to private SSH key used when connecting to the instance (string)  password  Password associated with  user  (string)\n   \n   CAUTION:  Passwords are stored in plain text and should not be\n  used for sensitive applications. To avoid revealing passwords, use\n  SSH public/private key authentication.", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/user-config/#examples_1", 
            "text": "Remote named  k80  used to start a  p2.xlarge  instance in\nthe  us-east-2  region:  remotes:\n  k80:\n    type: ec2\n    region: us-east-2\n    ami: ami-4f62582a\n    instance-type: p2.xlarge\n    public-key: ~/.ssh/id_rsa.pub\n    user: ubuntu\n    init: |\n      set -ex\n      cat   ~/.bashrc   EOF\n      export LD_LIBRARY_PATH=/usr/local/cuda/lib64\n      EOF\n      . ~/.bashrc\n      sudo pip install --upgrade pip\n      sudo pip install --upgrade guildai\n      sudo pip install --upgrade tensorflow-gpu\n      mkdir -p ~/.guild/runs\n      guild check", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/user-config/#s3-remote", 
            "text": "", 
            "title": "s3 remote"
        }, 
        {
            "location": "/docs/reference/user-config/#attributes_2", 
            "text": "bucket  S3 bucket used for the remote environment (required string)  root  Root path in the S3 bucket used for the remote environment (string)\n   \n  By default the root of the bucket is used.  region  Region associated with the bucket (string)\n   \n  By default the environment variable  AWS_DEFAULT_REGION  is used for\n  the region.", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/user-config/#examples_2", 
            "text": "Remote named  s3-backup  that uses the S3 bucket deep-learning-backups :  remotes:\n  s3-backup:\n    bucket: deep-learning-backups", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/reference/user-config/#diff", 
            "text": "The  diff  command uses the  diff  program by default. You can\nspecify an alternative command by creating a  diff  top-level object.  diff:\n  ...", 
            "title": "Diff"
        }, 
        {
            "location": "/docs/reference/user-config/#attributes_3", 
            "text": "command  The command to use when diffing runs (string)\n   \n  The command will be invoked as specified with two additional\n  arguments: the first and second run paths to diff.", 
            "title": "Attributes"
        }, 
        {
            "location": "/docs/reference/user-config/#examples_3", 
            "text": "Use  Meld  to diff runs:  diff:\n  command: meld  Use  colordiff  to diff runs:  diff:\n  command: colordiff -ru", 
            "title": "Examples"
        }, 
        {
            "location": "/docs/guides/", 
            "text": "Guides\n\n\n\n\nGet started\n\n\nAnalyze\n\n\nRemote support\n\n\nModel development\n\n\nTips and tricks\n\n\n\n\n\n\n\n\nGet started\n\n\nCreate a Guild project\nConvert a Jupyter Notebook\nCreate an image classifier\n\n\n\n\nAnalyze\n\n\nCompare runs\n\n\n\n\nRemote support\n\n\nTrain on EC2\nBackup to S3\n\n\n\n\nModel development\n\n\nDebugging an operation\n\n\n\n\nTips and tricks\n\n\nSpecifying available GPUs for a run", 
            "title": "Guides"
        }, 
        {
            "location": "/docs/guides/#guides", 
            "text": "Get started  Analyze  Remote support  Model development  Tips and tricks", 
            "title": "Guides"
        }, 
        {
            "location": "/docs/guides/#get-started", 
            "text": "Create a Guild project Convert a Jupyter Notebook Create an image classifier", 
            "title": "Get started"
        }, 
        {
            "location": "/docs/guides/#analyze", 
            "text": "Compare runs", 
            "title": "Analyze"
        }, 
        {
            "location": "/docs/guides/#remote-support", 
            "text": "Train on EC2 Backup to S3", 
            "title": "Remote support"
        }, 
        {
            "location": "/docs/guides/#model-development", 
            "text": "Debugging an operation", 
            "title": "Model development"
        }, 
        {
            "location": "/docs/guides/#tips-and-tricks", 
            "text": "Specifying available GPUs for a run", 
            "title": "Tips and tricks"
        }, 
        {
            "location": "/docs/guides/create-a-project/", 
            "text": "Create a Guild project", 
            "title": "Create a Guild project"
        }, 
        {
            "location": "/docs/guides/create-a-project/#create-a-guild-project", 
            "text": "", 
            "title": "Create a Guild project"
        }, 
        {
            "location": "/docs/guides/convert-jupyter/", 
            "text": "Convert a Jupyter Notebook to a Guild project\n\n\n\n\n\n\nfoo bar baz", 
            "title": "Convert a Jupyter Notebook"
        }, 
        {
            "location": "/docs/guides/convert-jupyter/#convert-a-jupyter-notebook-to-a-guild-project", 
            "text": "foo bar baz", 
            "title": "Convert a Jupyter Notebook to a Guild project"
        }, 
        {
            "location": "/docs/guides/create-an-image-classifier/", 
            "text": "Create an image classifier", 
            "title": "Create an image classifier"
        }, 
        {
            "location": "/docs/guides/create-an-image-classifier/#create-an-image-classifier", 
            "text": "", 
            "title": "Create an image classifier"
        }, 
        {
            "location": "/docs/guides/train-on-ec2/", 
            "text": "Train on EC2\n\n\nThis guide steps you through the process of", 
            "title": "Train on EC2"
        }, 
        {
            "location": "/docs/guides/train-on-ec2/#train-on-ec2", 
            "text": "This guide steps you through the process of", 
            "title": "Train on EC2"
        }, 
        {
            "location": "/docs/guides/backup-to-s3/", 
            "text": "Backup to S3", 
            "title": "Backup to S3"
        }, 
        {
            "location": "/docs/guides/backup-to-s3/#backup-to-s3", 
            "text": "", 
            "title": "Backup to S3"
        }, 
        {
            "location": "/docs/guides/compare-runs/", 
            "text": "Compare runs with Guild", 
            "title": "Compare runs"
        }, 
        {
            "location": "/docs/guides/compare-runs/#compare-runs-with-guild", 
            "text": "", 
            "title": "Compare runs with Guild"
        }, 
        {
            "location": "/docs/guides/publish-to-pypi/", 
            "text": "Publish to PyPI", 
            "title": "Publish to PyPI"
        }, 
        {
            "location": "/docs/guides/publish-to-pypi/#publish-to-pypi", 
            "text": "", 
            "title": "Publish to PyPI"
        }, 
        {
            "location": "/docs/guides/debug-an-operation/", 
            "text": "Debugging an operation\n\n\n\n\n\n\nTODO\n\n\nGuild AI is designed to simplify complex TensorFlow operations. This\nis great when everything works as expected. But what if you need to\nknow exactly what Guild is doing?\n\n\n\n\nGuild philosophy of light wrapping\n\n\nOverview of models and operations\n\n\nExample of running a complex operation\n\n\nUse of \nprint-cmd to see what Guild will run\n\n\nUse of \nprint-env to see what environment variables will be used\n\n\nUse of \nrun-dir when working on a specific problem\n\n\nUse of \nstage to setup a run directory without running", 
            "title": "Debugging an operation"
        }, 
        {
            "location": "/docs/guides/debug-an-operation/#debugging-an-operation", 
            "text": "TODO  Guild AI is designed to simplify complex TensorFlow operations. This\nis great when everything works as expected. But what if you need to\nknow exactly what Guild is doing?   Guild philosophy of light wrapping  Overview of models and operations  Example of running a complex operation  Use of  print-cmd to see what Guild will run  Use of  print-env to see what environment variables will be used  Use of  run-dir when working on a specific problem  Use of  stage to setup a run directory without running", 
            "title": "Debugging an operation"
        }, 
        {
            "location": "/docs/guides/specify-run-gpus/", 
            "text": "Specifying available GPUs for a run\n\n\nTo limit the GPUs available for a run, use the \n--gpus\n option with\nthe \nrun\n command. This option accepts a comma-separated list of\nGPU IDs.\n\n\nFor example, to limit a run to GPU \n0\n, use:\n\n\nguild run train --gpus 0\n\n\n\n\nYou can disable all GPU access by using \n--no-gpus\n:\n\n\nguild run evaluate --no-gpus\n\n\n\n\nThis is useful for running operations on CPU that might otherwise fail\n(e.g. other GPUs are in use or there isn\nt enough GPU memory to run\nthe operation.\n\n\n\n\nNote\n\n\nOperations that benefit from GPU acceleration will likely\nrun considerably slower on a GPU.\n\n\n\n\n\n\nNote\n\n\nThe GPU options only support CUDA devices. To view the list of\navailable CUDA devices and their respective IDs, use\n\nnvidia-smi\nthe \nNVIDIA System Management Interface", 
            "title": "Specifying available GPUs for a run"
        }, 
        {
            "location": "/docs/guides/specify-run-gpus/#specifying-available-gpus-for-a-run", 
            "text": "To limit the GPUs available for a run, use the  --gpus  option with\nthe  run  command. This option accepts a comma-separated list of\nGPU IDs.  For example, to limit a run to GPU  0 , use:  guild run train --gpus 0  You can disable all GPU access by using  --no-gpus :  guild run evaluate --no-gpus  This is useful for running operations on CPU that might otherwise fail\n(e.g. other GPUs are in use or there isn t enough GPU memory to run\nthe operation.   Note  Operations that benefit from GPU acceleration will likely\nrun considerably slower on a GPU.    Note  The GPU options only support CUDA devices. To view the list of\navailable CUDA devices and their respective IDs, use nvidia-smi the  NVIDIA System Management Interface", 
            "title": "Specifying available GPUs for a run"
        }, 
        {
            "location": "/packages/", 
            "text": "Guild AI packages\n\n\n\n\n\n\nGuild AI\n\n\nMNIST\n\n\n\n\nDemo\n\n\nMNIST\nHello", 
            "title": "Packages"
        }, 
        {
            "location": "/packages/#guild-ai-packages", 
            "text": "", 
            "title": "Guild AI packages"
        }, 
        {
            "location": "/packages/#guild-ai", 
            "text": "MNIST", 
            "title": "Guild AI"
        }, 
        {
            "location": "/packages/#demo", 
            "text": "MNIST Hello", 
            "title": "Demo"
        }, 
        {
            "location": "/packages/mnist/", 
            "text": "Guild AI MNIST\n\n\nThis package contains logistic regression and CNN models for training\nwith the MNIST dataset. These are used primarily for introducing Guild\nAI and for testing.\n\n\n\n\n  \n\n    \n\n      \nName\n\n      \ngpkg.mnist\n\n    \n\n    \n\n      \nDescription\n\n      \nCNN and multinomial logistic regression classifiers for MNIST digits\n\n    \n\n    \n\n      \nVersion\n\n      \n0.5.0.dev2\n\n    \n\n    \n\n      \nSource\n\n      \nhttps://github.com/guildai/index/tree/master/mnist\n\n    \n\n    \n\n      \nAuthor\n\n      \nGuild AI\n\n    \n\n  \n\n\n  \n  \n\n    \n\n      \nModels\n\n    \n    \ncnn\n\n    \n    \nlogreg\n\n    \n    \nsamples\n\n    \n    \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \ncnn model\n\n\n  \nCNN classifier for MNIST.\n\n\n  \n\n    \nOperations\n\n    \n    \n  \n\n\n  \nOperations\n\n\n  \n\n    \n\n    \nevaluate\n\n    \nEvaluate a trained CNN.\n\n\n    \n\n      \n      \nThis operation does not have any flags.\n\n      \n    \n\n\n    \n\n    \ntrain\n\n    \nTrain the CNN.\n\n\n    \n\n      \n      \n\n        \n\n          \nFlag\n\n          \nDescription\n\n          \nDefault\n\n        \n\n        \n        \n\n          \nbatch-size\n\n          \nNumber of images to include in a training batch.\n\n          \n\n            \n            \n100\n\n            \n          \n\n        \n\n        \n        \n\n          \nepochs\n\n          \nNumber of epochs to train.\n\n          \n\n            \n            \n10\n\n            \n          \n\n        \n\n        \n      \n\n      \n    \n\n\n    \n  \n\n\n  \n\n  \n\n  \n\n  \n\n  \nlogreg model\n\n\n  \nMultinomial logistic regression classifier for MNIST.\n\n\n  \n\n    \nOperations\n\n    \n    \n  \n\n\n  \nOperations\n\n\n  \n\n    \n\n    \nevaluate\n\n    \nEvaluate a trained logistic regression.\n\n\n    \n\n      \n      \nThis operation does not have any flags.\n\n      \n    \n\n\n    \n\n    \ntrain\n\n    \nTrain the logistic regression.\n\n\n    \n\n      \n      \n\n        \n\n          \nFlag\n\n          \nDescription\n\n          \nDefault\n\n        \n\n        \n        \n\n          \nbatch-size\n\n          \nNumber of images to include in a training batch.\n\n          \n\n            \n            \n100\n\n            \n          \n\n        \n\n        \n        \n\n          \nepochs\n\n          \nNumber of epochs to train.\n\n          \n\n            \n            \n10\n\n            \n          \n\n        \n\n        \n      \n\n      \n    \n\n\n    \n  \n\n\n  \n\n  \n\n  \n\n  \n\n  \nsamples model\n\n\n  \nSample MNIST images.\n\n\n  \n\n    \nOperations\n\n    \n    \n  \n\n\n  \nOperations\n\n\n  \n\n    \n\n    \nprepare\n\n    \nGenerate a set of sample MNIST images.\n\n\n    \n\n      \n      \n\n        \n\n          \nFlag\n\n          \nDescription\n\n          \nDefault\n\n        \n\n        \n        \n\n          \ncount\n\n          \nNumber of images to generate.\n\n          \n\n            \n            \n100", 
            "title": "Guild AI MNIST"
        }, 
        {
            "location": "/packages/mnist/#guild-ai-mnist", 
            "text": "This package contains logistic regression and CNN models for training\nwith the MNIST dataset. These are used primarily for introducing Guild\nAI and for testing.  \n\n   \n     \n       Name \n       gpkg.mnist \n     \n     \n       Description \n       CNN and multinomial logistic regression classifiers for MNIST digits \n     \n     \n       Version \n       0.5.0.dev2 \n     \n     \n       Source \n       https://github.com/guildai/index/tree/master/mnist \n     \n     \n       Author \n       Guild AI", 
            "title": "Guild AI MNIST"
        }, 
        {
            "location": "/packages/mnist/#models", 
            "text": "cnn \n    \n     logreg \n    \n     samples", 
            "title": "Models"
        }, 
        {
            "location": "/packages/mnist/#cnn", 
            "text": "CNN classifier for MNIST. \n\n   \n     Operations", 
            "title": "cnn model"
        }, 
        {
            "location": "/packages/mnist/#cnn-operations", 
            "text": "", 
            "title": "Operations"
        }, 
        {
            "location": "/packages/mnist/#cnn-evaluate", 
            "text": "Evaluate a trained CNN. \n\n     \n      \n       This operation does not have any flags.", 
            "title": "evaluate"
        }, 
        {
            "location": "/packages/mnist/#cnn-train", 
            "text": "Train the CNN. \n\n     \n      \n       \n         \n           Flag \n           Description \n           Default \n         \n        \n         \n           batch-size \n           Number of images to include in a training batch. \n           \n            \n             100 \n            \n           \n         \n        \n         \n           epochs \n           Number of epochs to train. \n           \n            \n             10", 
            "title": "train"
        }, 
        {
            "location": "/packages/mnist/#logreg", 
            "text": "Multinomial logistic regression classifier for MNIST. \n\n   \n     Operations", 
            "title": "logreg model"
        }, 
        {
            "location": "/packages/mnist/#logreg-operations", 
            "text": "", 
            "title": "Operations"
        }, 
        {
            "location": "/packages/mnist/#logreg-evaluate", 
            "text": "Evaluate a trained logistic regression. \n\n     \n      \n       This operation does not have any flags.", 
            "title": "evaluate"
        }, 
        {
            "location": "/packages/mnist/#logreg-train", 
            "text": "Train the logistic regression. \n\n     \n      \n       \n         \n           Flag \n           Description \n           Default \n         \n        \n         \n           batch-size \n           Number of images to include in a training batch. \n           \n            \n             100 \n            \n           \n         \n        \n         \n           epochs \n           Number of epochs to train. \n           \n            \n             10", 
            "title": "train"
        }, 
        {
            "location": "/packages/mnist/#samples", 
            "text": "Sample MNIST images. \n\n   \n     Operations", 
            "title": "samples model"
        }, 
        {
            "location": "/packages/mnist/#samples-operations", 
            "text": "", 
            "title": "Operations"
        }, 
        {
            "location": "/packages/mnist/#samples-prepare", 
            "text": "Generate a set of sample MNIST images. \n\n     \n      \n       \n         \n           Flag \n           Description \n           Default \n         \n        \n         \n           count \n           Number of images to generate. \n           \n            \n             100", 
            "title": "prepare"
        }, 
        {
            "location": "/packages/hello/", 
            "text": "Hello package\n\n\nThe \nhello\n package demonstrates a basic Guild file and is used for\ntesting.\n\n\n\n\n  \n\n    \n\n      \nName\n\n      \ngpkg.hello\n\n    \n\n    \n\n      \nDescription\n\n      \nExample \"hello world\" model\n\n    \n\n    \n\n      \nVersion\n\n      \n0.5.0.dev2\n\n    \n\n    \n\n      \nSource\n\n      \nhttps://github.com/guildai/packages/tree/master/hello\n\n    \n\n    \n\n      \nAuthor\n\n      \nGuild AI\n\n    \n\n  \n\n\n  \n  \n\n    \n\n      \nModels\n\n    \n    \nhello\n\n    \n    \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \nhello model\n\n\n  \nA \"hello world\" sample model\nThis is a sample model that provides various operations for printing hello world messages.\nThe message provided, either by default, by a flag, or a file (see each operation for the applicable interface) is printed to standard output and written to a file named `output` in the run directory.\n\n\n  \n\n    \nOperations\n\n    \n    \nResources\n\n    \n    \n  \n\n\n  \nOperations\n\n\n  \n\n    \n\n    \ndefault\n\n    \nPrint a default message\nThis operation doesn't support a user-defined message. Use the from-flag operation with the 'message' flag to print an alternative message.\n\n\n    \n\n      \n      \nThis operation does not have any flags.\n\n      \n    \n\n\n    \n\n    \nfrom-file\n\n    \nPrint a message from a file\nUse the 'file' flag to specify the file to print.\n\n\n    \n\n      \n      \n\n        \n\n          \nFlag\n\n          \nDescription\n\n          \nDefault\n\n        \n\n        \n        \n\n          \nfile\n\n          \nFile containing the message to print.\n\n          \n\n            \n            \nmsg.txt\n\n            \n          \n\n        \n\n        \n      \n\n      \n    \n\n\n    \n\n    \nfrom-file-output\n\n    \nPrint output from last file-output operation\nThis operation requires a completed file-output run.\n\n\n    \n\n      \n      \nThis operation does not have any flags.\n\n      \n    \n\n\n    \n\n    \nfrom-flag\n\n    \nPrint a message\nUse the 'message' flag to specify the message to print.\n\n\n    \n\n      \n      \n\n        \n\n          \nFlag\n\n          \nDescription\n\n          \nDefault\n\n        \n\n        \n        \n\n          \nmessage\n\n          \nMessage to print.\n\n          \n\n            \n            \nHello Guild, from a flag!\n\n            \n          \n\n        \n\n        \n      \n\n      \n    \n\n\n    \n  \n\n\n  \n  \nResources\n\n  \n\n    \n    \nfile-output\n\n    \nOutput generated by from-file operation.\n\n    \n\n      \n\n        \n        \noutput\n from \nhello:from-file\n operation\n\n        \n      \n\n    \n\n    \n    \nmsg-file\n\n    \nDefault file used in from-file operation.\n\n    \n\n      \n\n        \n        \nmsg.txt", 
            "title": "Hello package"
        }, 
        {
            "location": "/packages/hello/#hello-package", 
            "text": "The  hello  package demonstrates a basic Guild file and is used for\ntesting.  \n\n   \n     \n       Name \n       gpkg.hello \n     \n     \n       Description \n       Example \"hello world\" model \n     \n     \n       Version \n       0.5.0.dev2 \n     \n     \n       Source \n       https://github.com/guildai/packages/tree/master/hello \n     \n     \n       Author \n       Guild AI", 
            "title": "Hello package"
        }, 
        {
            "location": "/packages/hello/#models", 
            "text": "hello", 
            "title": "Models"
        }, 
        {
            "location": "/packages/hello/#hello", 
            "text": "A \"hello world\" sample model\nThis is a sample model that provides various operations for printing hello world messages.\nThe message provided, either by default, by a flag, or a file (see each operation for the applicable interface) is printed to standard output and written to a file named `output` in the run directory. \n\n   \n     Operations \n    \n     Resources", 
            "title": "hello model"
        }, 
        {
            "location": "/packages/hello/#hello-operations", 
            "text": "", 
            "title": "Operations"
        }, 
        {
            "location": "/packages/hello/#hello-default", 
            "text": "Print a default message\nThis operation doesn't support a user-defined message. Use the from-flag operation with the 'message' flag to print an alternative message. \n\n     \n      \n       This operation does not have any flags.", 
            "title": "default"
        }, 
        {
            "location": "/packages/hello/#hello-from-file", 
            "text": "Print a message from a file\nUse the 'file' flag to specify the file to print. \n\n     \n      \n       \n         \n           Flag \n           Description \n           Default \n         \n        \n         \n           file \n           File containing the message to print. \n           \n            \n             msg.txt", 
            "title": "from-file"
        }, 
        {
            "location": "/packages/hello/#hello-from-file-output", 
            "text": "Print output from last file-output operation\nThis operation requires a completed file-output run. \n\n     \n      \n       This operation does not have any flags.", 
            "title": "from-file-output"
        }, 
        {
            "location": "/packages/hello/#hello-from-flag", 
            "text": "Print a message\nUse the 'message' flag to specify the message to print. \n\n     \n      \n       \n         \n           Flag \n           Description \n           Default \n         \n        \n         \n           message \n           Message to print. \n           \n            \n             Hello Guild, from a flag!", 
            "title": "from-flag"
        }, 
        {
            "location": "/packages/hello/#hello-resources", 
            "text": "", 
            "title": "Resources"
        }, 
        {
            "location": "/packages/hello/#hello-file-output-res", 
            "text": "Output generated by from-file operation. \n     \n       \n        \n         output  from  hello:from-file  operation", 
            "title": "file-output"
        }, 
        {
            "location": "/packages/hello/#hello-msg-file-res", 
            "text": "Default file used in from-file operation. \n     \n       \n        \n         msg.txt", 
            "title": "msg-file"
        }, 
        {
            "location": "/support/", 
            "text": "Support\n\n\nTo resolve an issue you\nre having with Guild AI, search this\ndocumentation or review the links below\nthere\ns a good chance your\ntopic has been covered here.\n\n\nIf you\nre still facing issues, \nopen an issue on GitHub\n and we\nll help!\n\n\n\n\n\n\nLinks\n\n\nDocumentation\nFAQ", 
            "title": "Support"
        }, 
        {
            "location": "/support/#support", 
            "text": "To resolve an issue you re having with Guild AI, search this\ndocumentation or review the links below there s a good chance your\ntopic has been covered here.  If you re still facing issues,  open an issue on GitHub  and we ll help!", 
            "title": "Support"
        }, 
        {
            "location": "/support/#links", 
            "text": "Documentation FAQ", 
            "title": "Links"
        }, 
        {
            "location": "/faq/", 
            "text": "FAQ\n\n\n\n\nManage runs\n\n\nHow do I quickly delete failed runs?\n\n\n\n\n\n\nResources\n\n\nIf a source is referenced multiple times, does Guild download each occurrence?\n\n\n\n\n\n\nRuntime characteristics\n\n\nHow much overhead does Guild incur when running an operation?\n\n\n\n\n\n\nTroubleshooting\n\n\nHow do I know which library version I\nm using?\n\n\n\n\n\n\n\n\nManage runs\n\n\nHow do I quickly delete failed runs?\n\n\nGuild saves every run whether it succeeds or not. This lets you\ntroubleshoot issues But over time failed runs can accumulate and\nyou\nll want to delete them.\n\n\nUse this command to delete failed runs:\n\n\nguild runs delete --error\n\n\n\n\nUse this command to delete terminated runs (i.e. runs that were\nstopped by the user by typing \nCTRL-c\n):\n\n\nguild runs delete --terminated\n\n\n\n\nYou can delete both failed and terminated runs by using both\n\n--error\n and \n--terminated\n options at the same time, or using\nthis short form:\n\n\nguild runs delete -ET\n\n\n\n\nGuild will let you confirm the list of runs before deleting them.\n\n\nYou can later restore a deleted run using (cmd:runs-restore)[runs\nrestore].\n\n\nResources\n\n\nIf a source is referenced multiple times, does Guild download each occurrence?\n\n\nNo, Guild will only download the source once. There is no performance\npenalty for referencing a resource source multiple times.\n\n\nRuntime characteristics\n\n\nHow much overhead does Guild incur when running an operation?\n\n\nGuild runs operations in a separate OS process to ensure that the\noperation is isolated. As of Guild 0.3.0, the additional overhead\nincurred when running an operation is as follows:\n\n\n\n\n\n\nAdditional time: typically less than 100 milliseconds but may be\n  more on slower systems or loaded systems\n\n\n\n\n\n\nAdditional resident RAM: less than 40 MB\n\n\n\n\n\n\nTroubleshooting\n\n\nHow do I know which library version I\nm using?\n\n\nThe \ncheck\n command shows software library versions:\n\n\n\n\nGuild AI\n\n\nPython\n\n\nTensorFlow\n\n\nCUDA and cuDNN\n\n\n\n\nTo show this information, run:\n\n\nguild check\n\n\n\n\nTo show more information, use the \n--verbose\n option:\n\n\nguild check --verbose", 
            "title": "FAQ"
        }, 
        {
            "location": "/faq/#faq", 
            "text": "Manage runs  How do I quickly delete failed runs?    Resources  If a source is referenced multiple times, does Guild download each occurrence?    Runtime characteristics  How much overhead does Guild incur when running an operation?    Troubleshooting  How do I know which library version I m using?", 
            "title": "FAQ"
        }, 
        {
            "location": "/faq/#manage-runs", 
            "text": "", 
            "title": "Manage runs"
        }, 
        {
            "location": "/faq/#how-do-i-quickly-delete-failed-runs", 
            "text": "Guild saves every run whether it succeeds or not. This lets you\ntroubleshoot issues But over time failed runs can accumulate and\nyou ll want to delete them.  Use this command to delete failed runs:  guild runs delete --error  Use this command to delete terminated runs (i.e. runs that were\nstopped by the user by typing  CTRL-c ):  guild runs delete --terminated  You can delete both failed and terminated runs by using both --error  and  --terminated  options at the same time, or using\nthis short form:  guild runs delete -ET  Guild will let you confirm the list of runs before deleting them.  You can later restore a deleted run using (cmd:runs-restore)[runs\nrestore].", 
            "title": "How do I quickly delete failed runs?"
        }, 
        {
            "location": "/faq/#resources", 
            "text": "", 
            "title": "Resources"
        }, 
        {
            "location": "/faq/#if-a-source-is-referenced-multiple-times-does-guild-download-each-occurrence", 
            "text": "No, Guild will only download the source once. There is no performance\npenalty for referencing a resource source multiple times.", 
            "title": "If a source is referenced multiple times, does Guild download each occurrence?"
        }, 
        {
            "location": "/faq/#runtime-characteristics", 
            "text": "", 
            "title": "Runtime characteristics"
        }, 
        {
            "location": "/faq/#how-much-overhead-does-guild-incur-when-running-an-operation", 
            "text": "Guild runs operations in a separate OS process to ensure that the\noperation is isolated. As of Guild 0.3.0, the additional overhead\nincurred when running an operation is as follows:    Additional time: typically less than 100 milliseconds but may be\n  more on slower systems or loaded systems    Additional resident RAM: less than 40 MB", 
            "title": "How much overhead does Guild incur when running an operation?"
        }, 
        {
            "location": "/faq/#troubleshooting", 
            "text": "", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/faq/#how-do-i-know-which-library-version-im-using", 
            "text": "The  check  command shows software library versions:   Guild AI  Python  TensorFlow  CUDA and cuDNN   To show this information, run:  guild check  To show more information, use the  --verbose  option:  guild check --verbose", 
            "title": "How do I know which library version I&rsquo;m using?"
        }, 
        {
            "location": "/about/", 
            "text": "Guild AI\n\n\nLinks\n\n\nGitHub project\n\n\nContributing\n\n\nGuild AI does not currently have a contributors policy but we are\nhappy to work with you to add features that you need and resolve\nissues.\n\n\nBefore spending time on a pull request, please\n\nopen an issue on GitHub\n to let us know what problems you\nd like to\nsolve and we\nll help identify next-steps with you!", 
            "title": "About"
        }, 
        {
            "location": "/about/#guild-ai", 
            "text": "", 
            "title": "Guild AI"
        }, 
        {
            "location": "/about/#links", 
            "text": "GitHub project", 
            "title": "Links"
        }, 
        {
            "location": "/about/#contributing", 
            "text": "Guild AI does not currently have a contributors policy but we are\nhappy to work with you to add features that you need and resolve\nissues.  Before spending time on a pull request, please open an issue on GitHub  to let us know what problems you d like to\nsolve and we ll help identify next-steps with you!", 
            "title": "Contributing"
        }
    ]
}